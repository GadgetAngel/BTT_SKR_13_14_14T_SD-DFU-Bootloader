   1              	 .cpu cortex-m3
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,4
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "lpc17xx_uart.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .text.UART_Send.part.0,"ax",%progbits
  16              	 .align 1
  17              	 .syntax unified
  18              	 .thumb
  19              	 .thumb_func
  20              	 .fpu softvfp
  22              	UART_Send.part.0:
  23              	.LFB87:
  24              	 .file 1 "LPC17xxLib/src/lpc17xx_uart.c"
   1:LPC17xxLib/src/lpc17xx_uart.c **** #ifdef __LPC17XX__
   2:LPC17xxLib/src/lpc17xx_uart.c **** 
   3:LPC17xxLib/src/lpc17xx_uart.c **** /**********************************************************************
   4:LPC17xxLib/src/lpc17xx_uart.c **** * $Id$		lpc17xx_uart.c			2011-06-06
   5:LPC17xxLib/src/lpc17xx_uart.c **** *//**
   6:LPC17xxLib/src/lpc17xx_uart.c **** * @file		lpc17xx_uart.c
   7:LPC17xxLib/src/lpc17xx_uart.c **** * @brief	Contains all functions support for UART firmware library
   8:LPC17xxLib/src/lpc17xx_uart.c **** * 			on LPC17xx
   9:LPC17xxLib/src/lpc17xx_uart.c **** * @version	3.2
  10:LPC17xxLib/src/lpc17xx_uart.c **** * @date		25. July. 2011
  11:LPC17xxLib/src/lpc17xx_uart.c **** * @author	NXP MCU SW Application Team
  12:LPC17xxLib/src/lpc17xx_uart.c **** *
  13:LPC17xxLib/src/lpc17xx_uart.c **** * Copyright(C) 2011, NXP Semiconductor
  14:LPC17xxLib/src/lpc17xx_uart.c **** * All rights reserved.
  15:LPC17xxLib/src/lpc17xx_uart.c **** *
  16:LPC17xxLib/src/lpc17xx_uart.c **** ***********************************************************************
  17:LPC17xxLib/src/lpc17xx_uart.c **** * Software that is described herein is for illustrative purposes only
  18:LPC17xxLib/src/lpc17xx_uart.c **** * which provides customers with programming information regarding the
  19:LPC17xxLib/src/lpc17xx_uart.c **** * products. This software is supplied "AS IS" without any warranties.
  20:LPC17xxLib/src/lpc17xx_uart.c **** * NXP Semiconductors assumes no responsibility or liability for the
  21:LPC17xxLib/src/lpc17xx_uart.c **** * use of the software, conveys no license or title under any patent,
  22:LPC17xxLib/src/lpc17xx_uart.c **** * copyright, or mask work right to the product. NXP Semiconductors
  23:LPC17xxLib/src/lpc17xx_uart.c **** * reserves the right to make changes in the software without
  24:LPC17xxLib/src/lpc17xx_uart.c **** * notification. NXP Semiconductors also make no representation or
  25:LPC17xxLib/src/lpc17xx_uart.c **** * warranty that such application will be suitable for the specified
  26:LPC17xxLib/src/lpc17xx_uart.c **** * use without further testing or modification.
  27:LPC17xxLib/src/lpc17xx_uart.c **** **********************************************************************/
  28:LPC17xxLib/src/lpc17xx_uart.c **** 
  29:LPC17xxLib/src/lpc17xx_uart.c **** /* Peripheral group ----------------------------------------------------------- */
  30:LPC17xxLib/src/lpc17xx_uart.c **** /** @addtogroup UART
  31:LPC17xxLib/src/lpc17xx_uart.c ****  * @{
  32:LPC17xxLib/src/lpc17xx_uart.c ****  */
  33:LPC17xxLib/src/lpc17xx_uart.c **** 
  34:LPC17xxLib/src/lpc17xx_uart.c **** /* Includes ------------------------------------------------------------------- */
  35:LPC17xxLib/src/lpc17xx_uart.c **** #include "lpc17xx_uart.h"
  36:LPC17xxLib/src/lpc17xx_uart.c **** #include "lpc17xx_clkpwr.h"
  37:LPC17xxLib/src/lpc17xx_uart.c **** 
  38:LPC17xxLib/src/lpc17xx_uart.c **** /* If this source file built with example, the LPC17xx FW library configuration
  39:LPC17xxLib/src/lpc17xx_uart.c ****  * file in each example directory ("lpc17xx_libcfg.h") must be included,
  40:LPC17xxLib/src/lpc17xx_uart.c ****  * otherwise the default FW library configuration file must be included instead
  41:LPC17xxLib/src/lpc17xx_uart.c ****  */
  42:LPC17xxLib/src/lpc17xx_uart.c **** #ifdef __BUILD_WITH_EXAMPLE__
  43:LPC17xxLib/src/lpc17xx_uart.c **** #include "lpc17xx_libcfg.h"
  44:LPC17xxLib/src/lpc17xx_uart.c **** #else
  45:LPC17xxLib/src/lpc17xx_uart.c **** #include "lpc17xx_libcfg_default.h"
  46:LPC17xxLib/src/lpc17xx_uart.c **** #endif /* __BUILD_WITH_EXAMPLE__ */
  47:LPC17xxLib/src/lpc17xx_uart.c **** 
  48:LPC17xxLib/src/lpc17xx_uart.c **** 
  49:LPC17xxLib/src/lpc17xx_uart.c **** #ifdef _UART
  50:LPC17xxLib/src/lpc17xx_uart.c **** 
  51:LPC17xxLib/src/lpc17xx_uart.c **** /* Private Functions ---------------------------------------------------------- */
  52:LPC17xxLib/src/lpc17xx_uart.c **** 
  53:LPC17xxLib/src/lpc17xx_uart.c **** static Status uart_set_divisors(LPC_UART_TypeDef *UARTx, uint32_t baudrate);
  54:LPC17xxLib/src/lpc17xx_uart.c **** 
  55:LPC17xxLib/src/lpc17xx_uart.c **** uint32_t const uabs(const uint32_t a, const uint32_t b)
  56:LPC17xxLib/src/lpc17xx_uart.c **** {
  57:LPC17xxLib/src/lpc17xx_uart.c **** 	if (a>=b)
  58:LPC17xxLib/src/lpc17xx_uart.c **** 		return a-b;
  59:LPC17xxLib/src/lpc17xx_uart.c **** 	return b-a;
  60:LPC17xxLib/src/lpc17xx_uart.c **** }
  61:LPC17xxLib/src/lpc17xx_uart.c **** 
  62:LPC17xxLib/src/lpc17xx_uart.c **** uint32_t const calc_baud(uint32_t pclk, uint32_t dl, uint32_t divaddval, uint32_t mulval)
  63:LPC17xxLib/src/lpc17xx_uart.c **** {
  64:LPC17xxLib/src/lpc17xx_uart.c **** 	// 65535 * 14 * 16 is less than 2**24 so we have a spare 8 bits of precision
  65:LPC17xxLib/src/lpc17xx_uart.c **** 	// we can use them to increase our accuracy quite a bit
  66:LPC17xxLib/src/lpc17xx_uart.c **** 	// pclk is less than 2**27, so we have 5 spare bits for the numerator
  67:LPC17xxLib/src/lpc17xx_uart.c **** 	// this means we can do (numerator * 2**5) / (denominator * 2**8) * 2**3 to get the highest accura
  68:LPC17xxLib/src/lpc17xx_uart.c **** 	// denominator is 16 * (dl * (1 + (divadd / mul)) which can be expanded to
  69:LPC17xxLib/src/lpc17xx_uart.c **** 	// dl*16 + dl*16*divadd/mul which gives far more opportunity for using all our precision
  70:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t dx = ((dl * 16 * 32 * 8) + ((dl * 16 * divaddval * 32 * 8) / mulval));
  71:LPC17xxLib/src/lpc17xx_uart.c **** 	return ((pclk * 32) / dx) * 8;
  72:LPC17xxLib/src/lpc17xx_uart.c **** }
  73:LPC17xxLib/src/lpc17xx_uart.c **** 
  74:LPC17xxLib/src/lpc17xx_uart.c **** typedef struct {
  75:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t	baud;
  76:LPC17xxLib/src/lpc17xx_uart.c **** 	uint8_t	pd;
  77:LPC17xxLib/src/lpc17xx_uart.c **** 	uint16_t	dl;
  78:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t	dx;
  79:LPC17xxLib/src/lpc17xx_uart.c **** 	uint8_t	mulval;
  80:LPC17xxLib/src/lpc17xx_uart.c **** 	uint8_t	divaddval;
  81:LPC17xxLib/src/lpc17xx_uart.c **** } uart_regs;
  82:LPC17xxLib/src/lpc17xx_uart.c **** 
  83:LPC17xxLib/src/lpc17xx_uart.c **** int baud_space_search(uint32_t target_baud, uart_regs *r)
  84:LPC17xxLib/src/lpc17xx_uart.c **** {
  85:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t pd, dl, mulval, divaddval;
  86:LPC17xxLib/src/lpc17xx_uart.c **** 	int i = 0;
  87:LPC17xxLib/src/lpc17xx_uart.c **** 	for (pd = ((target_baud < 1000000)?3:1); pd < 4; pd--)
  88:LPC17xxLib/src/lpc17xx_uart.c **** 	{
  89:LPC17xxLib/src/lpc17xx_uart.c **** 		uint32_t pclk = SystemCoreClock / (1<<pd);
  90:LPC17xxLib/src/lpc17xx_uart.c **** 		for (mulval = 1; mulval < 16; mulval++)
  91:LPC17xxLib/src/lpc17xx_uart.c **** 		{
  92:LPC17xxLib/src/lpc17xx_uart.c **** 			for (divaddval = 0; divaddval < mulval; divaddval++)
  93:LPC17xxLib/src/lpc17xx_uart.c **** 			{
  94:LPC17xxLib/src/lpc17xx_uart.c **** 				i++;
  95:LPC17xxLib/src/lpc17xx_uart.c **** 				// baud = pclk / (16 * dl * (1 + (DivAdd / Mul))
  96:LPC17xxLib/src/lpc17xx_uart.c **** 				// solving for dl, we get dl = mul * pclk / (16 * baud * (divadd + mul))
  97:LPC17xxLib/src/lpc17xx_uart.c **** 				// we double the numerator, add 1 to the result then halve to effectivel round up when dl % 1 >
  98:LPC17xxLib/src/lpc17xx_uart.c **** 				dl = (((2 * mulval * pclk) / (16 * target_baud * (divaddval + mulval))) + 1) / 2;
  99:LPC17xxLib/src/lpc17xx_uart.c **** 
 100:LPC17xxLib/src/lpc17xx_uart.c **** 				// dl is a 16 bit field, if result needs more then we search again
 101:LPC17xxLib/src/lpc17xx_uart.c **** 				if (dl > 65535)
 102:LPC17xxLib/src/lpc17xx_uart.c **** 					continue;
 103:LPC17xxLib/src/lpc17xx_uart.c **** 
 104:LPC17xxLib/src/lpc17xx_uart.c **** 				// datasheet says if DLL==DLM==0, then 1 is used instead since divide by zero is ungood
 105:LPC17xxLib/src/lpc17xx_uart.c **** 				if (dl == 0)
 106:LPC17xxLib/src/lpc17xx_uart.c **** 					dl = 1;
 107:LPC17xxLib/src/lpc17xx_uart.c **** 
 108:LPC17xxLib/src/lpc17xx_uart.c **** 				// datasheet says if DIVADDVAL > 0 then DL must be >= 2
 109:LPC17xxLib/src/lpc17xx_uart.c **** 				if ((divaddval > 0) && (dl < 2))
 110:LPC17xxLib/src/lpc17xx_uart.c **** 					dl = 2;
 111:LPC17xxLib/src/lpc17xx_uart.c **** 
 112:LPC17xxLib/src/lpc17xx_uart.c **** 				uint32_t b = calc_baud(pclk, dl, divaddval, mulval);
 113:LPC17xxLib/src/lpc17xx_uart.c **** 				if (uabs(b, target_baud) < uabs(r->baud, target_baud))
 114:LPC17xxLib/src/lpc17xx_uart.c **** 				{
 115:LPC17xxLib/src/lpc17xx_uart.c **** 					r->baud      = b;
 116:LPC17xxLib/src/lpc17xx_uart.c **** 					r->pd        = pd;
 117:LPC17xxLib/src/lpc17xx_uart.c **** 					r->dl        = dl;
 118:LPC17xxLib/src/lpc17xx_uart.c **** 					r->dx       = ((dl * 16 * 32 * 8) + ((dl * 16 * divaddval * 32 * 8) / mulval));
 119:LPC17xxLib/src/lpc17xx_uart.c **** 					r->mulval    = mulval;
 120:LPC17xxLib/src/lpc17xx_uart.c **** 					r->divaddval = divaddval;
 121:LPC17xxLib/src/lpc17xx_uart.c **** 					// 					printf("\t\t{%7d,%4d,%6d,%3d,%3d},\t// Actual baud: %7d, error %c%4.2f%%, %d iteration
 122:LPC17xxLib/src/lpc17xx_uart.c **** 					if (b == target_baud)
 123:LPC17xxLib/src/lpc17xx_uart.c **** 						return i;
 124:LPC17xxLib/src/lpc17xx_uart.c **** 					// within 0.08%
 125:LPC17xxLib/src/lpc17xx_uart.c **** 						if ((uabs(r->baud, target_baud) * 1536 / target_baud) < 1)
 126:LPC17xxLib/src/lpc17xx_uart.c **** 							return i;
 127:LPC17xxLib/src/lpc17xx_uart.c **** 				}
 128:LPC17xxLib/src/lpc17xx_uart.c **** 			}
 129:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 130:LPC17xxLib/src/lpc17xx_uart.c **** 		// don't check higher pclk if we're within 0.5%
 131:LPC17xxLib/src/lpc17xx_uart.c **** 		if ((uabs(r->baud, target_baud) * 200 / target_baud) < 1)
 132:LPC17xxLib/src/lpc17xx_uart.c **** 			return i;
 133:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 134:LPC17xxLib/src/lpc17xx_uart.c **** 	return i;
 135:LPC17xxLib/src/lpc17xx_uart.c **** }
 136:LPC17xxLib/src/lpc17xx_uart.c **** 
 137:LPC17xxLib/src/lpc17xx_uart.c **** /** ********************************************************************
 138:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Determines best dividers to get a target clock rate
 139:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	Pointer to selected UART peripheral, should be:
 140:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART0: UART0 peripheral
 141:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 142:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 143:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 144:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	baudrate Desired UART baud rate.
 145:LPC17xxLib/src/lpc17xx_uart.c ****  * @return 		Error status, could be:
 146:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- SUCCESS
 147:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- ERROR
 148:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
 149:LPC17xxLib/src/lpc17xx_uart.c **** static Status uart_set_divisors(LPC_UART_TypeDef *UARTx, uint32_t baudrate)
 150:LPC17xxLib/src/lpc17xx_uart.c **** {
 151:LPC17xxLib/src/lpc17xx_uart.c **** 	Status errorStatus = ERROR;
 152:LPC17xxLib/src/lpc17xx_uart.c **** 
 153:LPC17xxLib/src/lpc17xx_uart.c **** 	uart_regs best;
 154:LPC17xxLib/src/lpc17xx_uart.c **** 
 155:LPC17xxLib/src/lpc17xx_uart.c **** 	baud_space_search(baudrate, &best);
 156:LPC17xxLib/src/lpc17xx_uart.c **** // 	uint32_t uClk;
 157:LPC17xxLib/src/lpc17xx_uart.c **** // 	uint32_t calcBaudrate = 0;
 158:LPC17xxLib/src/lpc17xx_uart.c **** // 	uint32_t temp = 0;
 159:LPC17xxLib/src/lpc17xx_uart.c **** //
 160:LPC17xxLib/src/lpc17xx_uart.c **** // 	uint32_t mulFracDiv, dividerAddFracDiv;
 161:LPC17xxLib/src/lpc17xx_uart.c **** // 	uint32_t diviser = 0 ;
 162:LPC17xxLib/src/lpc17xx_uart.c **** // 	uint32_t mulFracDivOptimal = 1;
 163:LPC17xxLib/src/lpc17xx_uart.c **** // 	uint32_t dividerAddOptimal = 0;
 164:LPC17xxLib/src/lpc17xx_uart.c **** // 	uint32_t diviserOptimal = 0;
 165:LPC17xxLib/src/lpc17xx_uart.c **** //
 166:LPC17xxLib/src/lpc17xx_uart.c **** // 	uint32_t relativeError = 0;
 167:LPC17xxLib/src/lpc17xx_uart.c **** // 	uint32_t relativeOptimalError = 100000;
 168:LPC17xxLib/src/lpc17xx_uart.c **** //
 169:LPC17xxLib/src/lpc17xx_uart.c **** // 	/* get UART block clock */
 170:LPC17xxLib/src/lpc17xx_uart.c **** // 	if (UARTx == LPC_UART0)
 171:LPC17xxLib/src/lpc17xx_uart.c **** // 	{
 172:LPC17xxLib/src/lpc17xx_uart.c **** // 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART0);
 173:LPC17xxLib/src/lpc17xx_uart.c **** // 	}
 174:LPC17xxLib/src/lpc17xx_uart.c **** // 	else if (UARTx == (LPC_UART_TypeDef *)LPC_UART1)
 175:LPC17xxLib/src/lpc17xx_uart.c **** // 	{
 176:LPC17xxLib/src/lpc17xx_uart.c **** // 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART1);
 177:LPC17xxLib/src/lpc17xx_uart.c **** // 	}
 178:LPC17xxLib/src/lpc17xx_uart.c **** // 	else if (UARTx == LPC_UART2)
 179:LPC17xxLib/src/lpc17xx_uart.c **** // 	{
 180:LPC17xxLib/src/lpc17xx_uart.c **** // 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART2);
 181:LPC17xxLib/src/lpc17xx_uart.c **** // 	}
 182:LPC17xxLib/src/lpc17xx_uart.c **** // 	else if (UARTx == LPC_UART3)
 183:LPC17xxLib/src/lpc17xx_uart.c **** // 	{
 184:LPC17xxLib/src/lpc17xx_uart.c **** // 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART3);
 185:LPC17xxLib/src/lpc17xx_uart.c **** // 	}
 186:LPC17xxLib/src/lpc17xx_uart.c **** //
 187:LPC17xxLib/src/lpc17xx_uart.c **** //
 188:LPC17xxLib/src/lpc17xx_uart.c **** // 	uClk = uClk >> 4; /* div by 16 */
 189:LPC17xxLib/src/lpc17xx_uart.c **** // 	/* In the Uart IP block, baud rate is calculated using FDR and DLL-DLM registers
 190:LPC17xxLib/src/lpc17xx_uart.c **** // 	 * The formula is :
 191:LPC17xxLib/src/lpc17xx_uart.c **** // 	 * BaudRate= uClk * (mulFracDiv/(mulFracDiv+dividerAddFracDiv) / (16 * (DLL)
 192:LPC17xxLib/src/lpc17xx_uart.c **** // 	 * It involves floating point calculations. That's the reason the formulae are adjusted with
 193:LPC17xxLib/src/lpc17xx_uart.c **** // 	 * Multiply and divide method.*/
 194:LPC17xxLib/src/lpc17xx_uart.c **** // 	/* The value of mulFracDiv and dividerAddFracDiv should comply to the following expressions:
 195:LPC17xxLib/src/lpc17xx_uart.c **** // 	 * 0 < mulFracDiv <= 15, 0 <= dividerAddFracDiv <= 15 */
 196:LPC17xxLib/src/lpc17xx_uart.c **** // 	for (mulFracDiv = 1 ; mulFracDiv <= 15 ;mulFracDiv++)
 197:LPC17xxLib/src/lpc17xx_uart.c **** // 	{
 198:LPC17xxLib/src/lpc17xx_uart.c **** // 		for (dividerAddFracDiv = 0 ; dividerAddFracDiv <= 15 ;dividerAddFracDiv++)
 199:LPC17xxLib/src/lpc17xx_uart.c **** // 		{
 200:LPC17xxLib/src/lpc17xx_uart.c **** // 			temp = (mulFracDiv * uClk) / ((mulFracDiv + dividerAddFracDiv));
 201:LPC17xxLib/src/lpc17xx_uart.c **** //
 202:LPC17xxLib/src/lpc17xx_uart.c **** // 			diviser = temp / baudrate;
 203:LPC17xxLib/src/lpc17xx_uart.c **** // 			if ((temp % baudrate) > (baudrate / 2))
 204:LPC17xxLib/src/lpc17xx_uart.c **** // 				diviser++;
 205:LPC17xxLib/src/lpc17xx_uart.c **** //
 206:LPC17xxLib/src/lpc17xx_uart.c **** // 			if (diviser > 2 && diviser < 65536)
 207:LPC17xxLib/src/lpc17xx_uart.c **** // 			{
 208:LPC17xxLib/src/lpc17xx_uart.c **** // 				calcBaudrate = temp / diviser;
 209:LPC17xxLib/src/lpc17xx_uart.c **** //
 210:LPC17xxLib/src/lpc17xx_uart.c **** // 				if (calcBaudrate <= baudrate)
 211:LPC17xxLib/src/lpc17xx_uart.c **** // 					relativeError = baudrate - calcBaudrate;
 212:LPC17xxLib/src/lpc17xx_uart.c **** // 				else
 213:LPC17xxLib/src/lpc17xx_uart.c **** // 					relativeError = calcBaudrate - baudrate;
 214:LPC17xxLib/src/lpc17xx_uart.c **** //
 215:LPC17xxLib/src/lpc17xx_uart.c **** // 				if ((relativeError < relativeOptimalError))
 216:LPC17xxLib/src/lpc17xx_uart.c **** // 				{
 217:LPC17xxLib/src/lpc17xx_uart.c **** // 					mulFracDivOptimal = mulFracDiv ;
 218:LPC17xxLib/src/lpc17xx_uart.c **** // 					dividerAddOptimal = dividerAddFracDiv;
 219:LPC17xxLib/src/lpc17xx_uart.c **** // 					diviserOptimal = diviser;
 220:LPC17xxLib/src/lpc17xx_uart.c **** // 					relativeOptimalError = relativeError;
 221:LPC17xxLib/src/lpc17xx_uart.c **** // 					if (relativeError == 0)
 222:LPC17xxLib/src/lpc17xx_uart.c **** // 						break;
 223:LPC17xxLib/src/lpc17xx_uart.c **** // 				}
 224:LPC17xxLib/src/lpc17xx_uart.c **** // 			} /* End of if */
 225:LPC17xxLib/src/lpc17xx_uart.c **** // 		} /* end of inner for loop */
 226:LPC17xxLib/src/lpc17xx_uart.c **** // 		if (relativeError == 0)
 227:LPC17xxLib/src/lpc17xx_uart.c **** // 			break;
 228:LPC17xxLib/src/lpc17xx_uart.c **** // 	} /* end of outer for loop  */
 229:LPC17xxLib/src/lpc17xx_uart.c **** 	if ((uabs(best.baud, baudrate) * 100 / UART_ACCEPTED_BAUDRATE_ERROR) < baudrate)
 230:LPC17xxLib/src/lpc17xx_uart.c **** // 	if (relativeOptimalError < ((baudrate * UART_ACCEPTED_BAUDRATE_ERROR)/100))
 231:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 232:LPC17xxLib/src/lpc17xx_uart.c **** 		if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 233:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 234:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_DLAB_EN;
 235:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/DLM = UART_LOAD_DLM(best.dl);
 236:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/DLL = UART_LOAD_DLL(best.dl);
 237:LPC17xxLib/src/lpc17xx_uart.c **** 			/* Then reset DLAB bit */
 238:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
 239:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->FDR = (UART_FDR_MULVAL(best.mulval) \
 240:LPC17xxLib/src/lpc17xx_uart.c **** 				| UART_FDR_DIVADDVAL(best.divaddval)) & UART_FDR_BITMASK;
 241:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 242:LPC17xxLib/src/lpc17xx_uart.c **** 		else
 243:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 244:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->LCR |= UART_LCR_DLAB_EN;
 245:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->/*DLIER.*/DLM = UART_LOAD_DLM(best.dl);
 246:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->/*RBTHDLR.*/DLL = UART_LOAD_DLL(best.dl);
 247:LPC17xxLib/src/lpc17xx_uart.c **** 			/* Then reset DLAB bit */
 248:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
 249:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->FDR = (UART_FDR_MULVAL(best.mulval) \
 250:LPC17xxLib/src/lpc17xx_uart.c **** 				| UART_FDR_DIVADDVAL(best.divaddval)) & UART_FDR_BITMASK;
 251:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 252:LPC17xxLib/src/lpc17xx_uart.c **** 
 253:LPC17xxLib/src/lpc17xx_uart.c **** 		uint8_t pclkdiv;
 254:LPC17xxLib/src/lpc17xx_uart.c **** 		switch (best.pd)
 255:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 256:LPC17xxLib/src/lpc17xx_uart.c **** 			case 0:
 257:LPC17xxLib/src/lpc17xx_uart.c **** 				pclkdiv = CLKPWR_PCLKSEL_CCLK_DIV_1;
 258:LPC17xxLib/src/lpc17xx_uart.c **** 				break;
 259:LPC17xxLib/src/lpc17xx_uart.c **** 			case 1:
 260:LPC17xxLib/src/lpc17xx_uart.c **** 				pclkdiv = CLKPWR_PCLKSEL_CCLK_DIV_2;
 261:LPC17xxLib/src/lpc17xx_uart.c **** 				break;
 262:LPC17xxLib/src/lpc17xx_uart.c **** 			case 2:
 263:LPC17xxLib/src/lpc17xx_uart.c **** 				pclkdiv = CLKPWR_PCLKSEL_CCLK_DIV_4;
 264:LPC17xxLib/src/lpc17xx_uart.c **** 				break;
 265:LPC17xxLib/src/lpc17xx_uart.c **** 			default:
 266:LPC17xxLib/src/lpc17xx_uart.c **** 			case 3:
 267:LPC17xxLib/src/lpc17xx_uart.c **** 				pclkdiv = CLKPWR_PCLKSEL_CCLK_DIV_8;
 268:LPC17xxLib/src/lpc17xx_uart.c **** 				break;
 269:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 270:LPC17xxLib/src/lpc17xx_uart.c **** 
 271:LPC17xxLib/src/lpc17xx_uart.c **** 		if (UARTx == LPC_UART0)
 272:LPC17xxLib/src/lpc17xx_uart.c **** 			CLKPWR_SetPCLKDiv(CLKPWR_PCLKSEL_UART0, pclkdiv);
 273:LPC17xxLib/src/lpc17xx_uart.c **** 		if (((LPC_UART1_TypeDef *) UARTx) == LPC_UART1)
 274:LPC17xxLib/src/lpc17xx_uart.c **** 			CLKPWR_SetPCLKDiv(CLKPWR_PCLKSEL_UART1, pclkdiv);
 275:LPC17xxLib/src/lpc17xx_uart.c **** 		if (UARTx == LPC_UART2)
 276:LPC17xxLib/src/lpc17xx_uart.c **** 			CLKPWR_SetPCLKDiv(CLKPWR_PCLKSEL_UART2, pclkdiv);
 277:LPC17xxLib/src/lpc17xx_uart.c **** 		if (UARTx == LPC_UART3)
 278:LPC17xxLib/src/lpc17xx_uart.c **** 			CLKPWR_SetPCLKDiv(CLKPWR_PCLKSEL_UART3, pclkdiv);
 279:LPC17xxLib/src/lpc17xx_uart.c **** 
 280:LPC17xxLib/src/lpc17xx_uart.c **** 		errorStatus = SUCCESS;
 281:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 282:LPC17xxLib/src/lpc17xx_uart.c **** 
 283:LPC17xxLib/src/lpc17xx_uart.c **** 	return errorStatus;
 284:LPC17xxLib/src/lpc17xx_uart.c **** }
 285:LPC17xxLib/src/lpc17xx_uart.c **** 
 286:LPC17xxLib/src/lpc17xx_uart.c **** /* End of Private Functions ---------------------------------------------------- */
 287:LPC17xxLib/src/lpc17xx_uart.c **** 
 288:LPC17xxLib/src/lpc17xx_uart.c **** 
 289:LPC17xxLib/src/lpc17xx_uart.c **** /* Public Functions ----------------------------------------------------------- */
 290:LPC17xxLib/src/lpc17xx_uart.c **** /** @addtogroup UART_Public_Functions
 291:LPC17xxLib/src/lpc17xx_uart.c ****  * @{
 292:LPC17xxLib/src/lpc17xx_uart.c ****  */
 293:LPC17xxLib/src/lpc17xx_uart.c **** /* UART Init/DeInit functions -------------------------------------------------*/
 294:LPC17xxLib/src/lpc17xx_uart.c **** /********************************************************************//**
 295:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Initializes the UARTx peripheral according to the specified
 296:LPC17xxLib/src/lpc17xx_uart.c ****  *               parameters in the UART_ConfigStruct.
 297:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 298:LPC17xxLib/src/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
 299:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 300:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 301:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 302:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UART_ConfigStruct Pointer to a UART_CFG_Type structure
 303:LPC17xxLib/src/lpc17xx_uart.c **** *                    that contains the configuration information for the
 304:LPC17xxLib/src/lpc17xx_uart.c **** *                    specified UART peripheral.
 305:LPC17xxLib/src/lpc17xx_uart.c ****  * @return 		None
 306:LPC17xxLib/src/lpc17xx_uart.c ****  *********************************************************************/
 307:LPC17xxLib/src/lpc17xx_uart.c **** void UART_Init(LPC_UART_TypeDef *UARTx, UART_CFG_Type *UART_ConfigStruct)
 308:LPC17xxLib/src/lpc17xx_uart.c **** {
 309:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t tmp;
 310:LPC17xxLib/src/lpc17xx_uart.c **** 
 311:LPC17xxLib/src/lpc17xx_uart.c **** 	// For debug mode
 312:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 313:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_DATABIT(UART_ConfigStruct->Databits));
 314:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_STOPBIT(UART_ConfigStruct->Stopbits));
 315:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_PARITY(UART_ConfigStruct->Parity));
 316:LPC17xxLib/src/lpc17xx_uart.c **** 
 317:LPC17xxLib/src/lpc17xx_uart.c **** #ifdef _UART0
 318:LPC17xxLib/src/lpc17xx_uart.c **** 	if(UARTx == LPC_UART0)
 319:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 320:LPC17xxLib/src/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 321:LPC17xxLib/src/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART0, ENABLE);
 322:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 323:LPC17xxLib/src/lpc17xx_uart.c **** #endif
 324:LPC17xxLib/src/lpc17xx_uart.c **** 
 325:LPC17xxLib/src/lpc17xx_uart.c **** #ifdef _UART1
 326:LPC17xxLib/src/lpc17xx_uart.c **** 	if(((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 327:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 328:LPC17xxLib/src/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 329:LPC17xxLib/src/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART1, ENABLE);
 330:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 331:LPC17xxLib/src/lpc17xx_uart.c **** #endif
 332:LPC17xxLib/src/lpc17xx_uart.c **** 
 333:LPC17xxLib/src/lpc17xx_uart.c **** #ifdef _UART2
 334:LPC17xxLib/src/lpc17xx_uart.c **** 	if(UARTx == LPC_UART2)
 335:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 336:LPC17xxLib/src/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 337:LPC17xxLib/src/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART2, ENABLE);
 338:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 339:LPC17xxLib/src/lpc17xx_uart.c **** #endif
 340:LPC17xxLib/src/lpc17xx_uart.c **** 
 341:LPC17xxLib/src/lpc17xx_uart.c **** #ifdef _UART3
 342:LPC17xxLib/src/lpc17xx_uart.c **** 	if(UARTx == LPC_UART3)
 343:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 344:LPC17xxLib/src/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 345:LPC17xxLib/src/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART3, ENABLE);
 346:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 347:LPC17xxLib/src/lpc17xx_uart.c **** #endif
 348:LPC17xxLib/src/lpc17xx_uart.c **** 
 349:LPC17xxLib/src/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 350:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 351:LPC17xxLib/src/lpc17xx_uart.c **** 		/* FIFOs are empty */
 352:LPC17xxLib/src/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*IIFCR.*/FCR = ( UART_FCR_FIFO_EN \
 353:LPC17xxLib/src/lpc17xx_uart.c **** 				| UART_FCR_RX_RS | UART_FCR_TX_RS);
 354:LPC17xxLib/src/lpc17xx_uart.c **** 		// Disable FIFO
 355:LPC17xxLib/src/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*IIFCR.*/FCR = 0;
 356:LPC17xxLib/src/lpc17xx_uart.c **** 
 357:LPC17xxLib/src/lpc17xx_uart.c **** 		// Dummy reading
 358:LPC17xxLib/src/lpc17xx_uart.c **** 		while (((LPC_UART1_TypeDef *)UARTx)->LSR & UART_LSR_RDR)
 359:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 360:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp = ((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/RBR;
 361:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 362:LPC17xxLib/src/lpc17xx_uart.c **** 
 363:LPC17xxLib/src/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->TER = UART_TER_TXEN;
 364:LPC17xxLib/src/lpc17xx_uart.c **** 		// Wait for current transmit complete
 365:LPC17xxLib/src/lpc17xx_uart.c **** 		while (!(((LPC_UART1_TypeDef *)UARTx)->LSR & UART_LSR_THRE));
 366:LPC17xxLib/src/lpc17xx_uart.c **** 		// Disable Tx
 367:LPC17xxLib/src/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->TER = 0;
 368:LPC17xxLib/src/lpc17xx_uart.c **** 
 369:LPC17xxLib/src/lpc17xx_uart.c **** 		// Disable interrupt
 370:LPC17xxLib/src/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/IER = 0;
 371:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set LCR to default state
 372:LPC17xxLib/src/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->LCR = 0;
 373:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set ACR to default state
 374:LPC17xxLib/src/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->ACR = 0;
 375:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set Modem Control to default state
 376:LPC17xxLib/src/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->MCR = 0;
 377:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set RS485 control to default state
 378:LPC17xxLib/src/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->RS485CTRL = 0;
 379:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set RS485 delay timer to default state
 380:LPC17xxLib/src/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->RS485DLY = 0;
 381:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set RS485 addr match to default state
 382:LPC17xxLib/src/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->ADRMATCH = 0;
 383:LPC17xxLib/src/lpc17xx_uart.c **** 		//Dummy Reading to Clear Status
 384:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp = ((LPC_UART1_TypeDef *)UARTx)->MSR;
 385:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp = ((LPC_UART1_TypeDef *)UARTx)->LSR;
 386:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 387:LPC17xxLib/src/lpc17xx_uart.c **** 	else
 388:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 389:LPC17xxLib/src/lpc17xx_uart.c **** 		/* FIFOs are empty */
 390:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->/*IIFCR.*/FCR = ( UART_FCR_FIFO_EN | UART_FCR_RX_RS | UART_FCR_TX_RS);
 391:LPC17xxLib/src/lpc17xx_uart.c **** 		// Disable FIFO
 392:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->/*IIFCR.*/FCR = 0;
 393:LPC17xxLib/src/lpc17xx_uart.c **** 
 394:LPC17xxLib/src/lpc17xx_uart.c **** 		// Dummy reading
 395:LPC17xxLib/src/lpc17xx_uart.c **** 		while (UARTx->LSR & UART_LSR_RDR)
 396:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 397:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp = UARTx->/*RBTHDLR.*/RBR;
 398:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 399:LPC17xxLib/src/lpc17xx_uart.c **** 
 400:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->TER = UART_TER_TXEN;
 401:LPC17xxLib/src/lpc17xx_uart.c **** 		// Wait for current transmit complete
 402:LPC17xxLib/src/lpc17xx_uart.c **** 		while (!(UARTx->LSR & UART_LSR_THRE));
 403:LPC17xxLib/src/lpc17xx_uart.c **** 		// Disable Tx
 404:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->TER = 0;
 405:LPC17xxLib/src/lpc17xx_uart.c **** 
 406:LPC17xxLib/src/lpc17xx_uart.c **** 		// Disable interrupt
 407:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->/*DLIER.*/IER = 0;
 408:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set LCR to default state
 409:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->LCR = 0;
 410:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set ACR to default state
 411:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->ACR = 0;
 412:LPC17xxLib/src/lpc17xx_uart.c **** 		// Dummy reading
 413:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp = UARTx->LSR;
 414:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 415:LPC17xxLib/src/lpc17xx_uart.c **** 
 416:LPC17xxLib/src/lpc17xx_uart.c **** 	if (UARTx == LPC_UART3)
 417:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 418:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set IrDA to default state
 419:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->ICR = 0;
 420:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 421:LPC17xxLib/src/lpc17xx_uart.c **** 
 422:LPC17xxLib/src/lpc17xx_uart.c **** 	// Set Line Control register ----------------------------
 423:LPC17xxLib/src/lpc17xx_uart.c **** 
 424:LPC17xxLib/src/lpc17xx_uart.c **** 	uart_set_divisors(UARTx, (UART_ConfigStruct->Baud_rate));
 425:LPC17xxLib/src/lpc17xx_uart.c **** 
 426:LPC17xxLib/src/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 427:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 428:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp = (((LPC_UART1_TypeDef *)UARTx)->LCR & (UART_LCR_DLAB_EN | UART_LCR_BREAK_EN)) \
 429:LPC17xxLib/src/lpc17xx_uart.c **** 				& UART_LCR_BITMASK;
 430:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 431:LPC17xxLib/src/lpc17xx_uart.c **** 	else
 432:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 433:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp = (UARTx->LCR & (UART_LCR_DLAB_EN | UART_LCR_BREAK_EN)) & UART_LCR_BITMASK;
 434:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 435:LPC17xxLib/src/lpc17xx_uart.c **** 
 436:LPC17xxLib/src/lpc17xx_uart.c **** 	switch (UART_ConfigStruct->Databits){
 437:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART_DATABIT_5:
 438:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN5;
 439:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
 440:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART_DATABIT_6:
 441:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN6;
 442:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
 443:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART_DATABIT_7:
 444:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN7;
 445:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
 446:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART_DATABIT_8:
 447:LPC17xxLib/src/lpc17xx_uart.c **** 	default:
 448:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN8;
 449:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
 450:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 451:LPC17xxLib/src/lpc17xx_uart.c **** 
 452:LPC17xxLib/src/lpc17xx_uart.c **** 	if (UART_ConfigStruct->Parity == UART_PARITY_NONE)
 453:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 454:LPC17xxLib/src/lpc17xx_uart.c **** 		// Do nothing...
 455:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 456:LPC17xxLib/src/lpc17xx_uart.c **** 	else
 457:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 458:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART_LCR_PARITY_EN;
 459:LPC17xxLib/src/lpc17xx_uart.c **** 		switch (UART_ConfigStruct->Parity)
 460:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 461:LPC17xxLib/src/lpc17xx_uart.c **** 		case UART_PARITY_ODD:
 462:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_ODD;
 463:LPC17xxLib/src/lpc17xx_uart.c **** 			break;
 464:LPC17xxLib/src/lpc17xx_uart.c **** 
 465:LPC17xxLib/src/lpc17xx_uart.c **** 		case UART_PARITY_EVEN:
 466:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_EVEN;
 467:LPC17xxLib/src/lpc17xx_uart.c **** 			break;
 468:LPC17xxLib/src/lpc17xx_uart.c **** 
 469:LPC17xxLib/src/lpc17xx_uart.c **** 		case UART_PARITY_SP_1:
 470:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_F_1;
 471:LPC17xxLib/src/lpc17xx_uart.c **** 			break;
 472:LPC17xxLib/src/lpc17xx_uart.c **** 
 473:LPC17xxLib/src/lpc17xx_uart.c **** 		case UART_PARITY_SP_0:
 474:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_F_0;
 475:LPC17xxLib/src/lpc17xx_uart.c **** 			break;
 476:LPC17xxLib/src/lpc17xx_uart.c **** 		default:
 477:LPC17xxLib/src/lpc17xx_uart.c **** 			break;
 478:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 479:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 480:LPC17xxLib/src/lpc17xx_uart.c **** 
 481:LPC17xxLib/src/lpc17xx_uart.c **** 	switch (UART_ConfigStruct->Stopbits){
 482:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART_STOPBIT_2:
 483:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART_LCR_STOPBIT_SEL;
 484:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
 485:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART_STOPBIT_1:
 486:LPC17xxLib/src/lpc17xx_uart.c **** 	default:
 487:LPC17xxLib/src/lpc17xx_uart.c **** 		// Do no thing
 488:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
 489:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 490:LPC17xxLib/src/lpc17xx_uart.c **** 
 491:LPC17xxLib/src/lpc17xx_uart.c **** 
 492:LPC17xxLib/src/lpc17xx_uart.c **** 	// Write back to LCR, configure FIFO and Disable Tx
 493:LPC17xxLib/src/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) ==  LPC_UART1)
 494:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 495:LPC17xxLib/src/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->LCR = (uint8_t)(tmp & UART_LCR_BITMASK);
 496:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 497:LPC17xxLib/src/lpc17xx_uart.c **** 	else
 498:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 499:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->LCR = (uint8_t)(tmp & UART_LCR_BITMASK);
 500:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 501:LPC17xxLib/src/lpc17xx_uart.c **** }
 502:LPC17xxLib/src/lpc17xx_uart.c **** 
 503:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
 504:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		De-initializes the UARTx peripheral registers to their
 505:LPC17xxLib/src/lpc17xx_uart.c ****  *                  default reset values.
 506:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 507:LPC17xxLib/src/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
 508:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 509:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 510:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 511:LPC17xxLib/src/lpc17xx_uart.c ****  * @return 		None
 512:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
 513:LPC17xxLib/src/lpc17xx_uart.c **** void UART_DeInit(LPC_UART_TypeDef* UARTx)
 514:LPC17xxLib/src/lpc17xx_uart.c **** {
 515:LPC17xxLib/src/lpc17xx_uart.c **** 	// For debug mode
 516:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 517:LPC17xxLib/src/lpc17xx_uart.c **** 
 518:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_TxCmd(UARTx, DISABLE);
 519:LPC17xxLib/src/lpc17xx_uart.c **** 
 520:LPC17xxLib/src/lpc17xx_uart.c **** #ifdef _UART0
 521:LPC17xxLib/src/lpc17xx_uart.c **** 	if (UARTx == LPC_UART0)
 522:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 523:LPC17xxLib/src/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 524:LPC17xxLib/src/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART0, DISABLE);
 525:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 526:LPC17xxLib/src/lpc17xx_uart.c **** #endif
 527:LPC17xxLib/src/lpc17xx_uart.c **** 
 528:LPC17xxLib/src/lpc17xx_uart.c **** #ifdef _UART1
 529:LPC17xxLib/src/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 530:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 531:LPC17xxLib/src/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 532:LPC17xxLib/src/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART1, DISABLE);
 533:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 534:LPC17xxLib/src/lpc17xx_uart.c **** #endif
 535:LPC17xxLib/src/lpc17xx_uart.c **** 
 536:LPC17xxLib/src/lpc17xx_uart.c **** #ifdef _UART2
 537:LPC17xxLib/src/lpc17xx_uart.c **** 	if (UARTx == LPC_UART2)
 538:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 539:LPC17xxLib/src/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 540:LPC17xxLib/src/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART2, DISABLE);
 541:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 542:LPC17xxLib/src/lpc17xx_uart.c **** #endif
 543:LPC17xxLib/src/lpc17xx_uart.c **** 
 544:LPC17xxLib/src/lpc17xx_uart.c **** #ifdef _UART3
 545:LPC17xxLib/src/lpc17xx_uart.c **** 	if (UARTx == LPC_UART3)
 546:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 547:LPC17xxLib/src/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 548:LPC17xxLib/src/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART3, DISABLE);
 549:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 550:LPC17xxLib/src/lpc17xx_uart.c **** #endif
 551:LPC17xxLib/src/lpc17xx_uart.c **** }
 552:LPC17xxLib/src/lpc17xx_uart.c **** 
 553:LPC17xxLib/src/lpc17xx_uart.c **** /*****************************************************************************//**
 554:LPC17xxLib/src/lpc17xx_uart.c **** * @brief		Fills each UART_InitStruct member with its default value:
 555:LPC17xxLib/src/lpc17xx_uart.c **** * 				- 9600 bps
 556:LPC17xxLib/src/lpc17xx_uart.c **** * 				- 8-bit data
 557:LPC17xxLib/src/lpc17xx_uart.c **** * 				- 1 Stopbit
 558:LPC17xxLib/src/lpc17xx_uart.c **** * 				- None Parity
 559:LPC17xxLib/src/lpc17xx_uart.c **** * @param[in]	UART_InitStruct Pointer to a UART_CFG_Type structure
 560:LPC17xxLib/src/lpc17xx_uart.c **** *                    which will be initialized.
 561:LPC17xxLib/src/lpc17xx_uart.c **** * @return		None
 562:LPC17xxLib/src/lpc17xx_uart.c **** *******************************************************************************/
 563:LPC17xxLib/src/lpc17xx_uart.c **** void UART_ConfigStructInit(UART_CFG_Type *UART_InitStruct)
 564:LPC17xxLib/src/lpc17xx_uart.c **** {
 565:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_InitStruct->Baud_rate = 9600;
 566:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_InitStruct->Databits = UART_DATABIT_8;
 567:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_InitStruct->Parity = UART_PARITY_NONE;
 568:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_InitStruct->Stopbits = UART_STOPBIT_1;
 569:LPC17xxLib/src/lpc17xx_uart.c **** }
 570:LPC17xxLib/src/lpc17xx_uart.c **** 
 571:LPC17xxLib/src/lpc17xx_uart.c **** /* UART Send/Recieve functions -------------------------------------------------*/
 572:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
 573:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Transmit a single data through UART peripheral
 574:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 575:LPC17xxLib/src/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
 576:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 577:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 578:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 579:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	Data	Data to transmit (must be 8-bit long)
 580:LPC17xxLib/src/lpc17xx_uart.c ****  * @return 		None
 581:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
 582:LPC17xxLib/src/lpc17xx_uart.c **** void UART_SendByte(LPC_UART_TypeDef* UARTx, uint8_t Data)
 583:LPC17xxLib/src/lpc17xx_uart.c **** {
 584:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 585:LPC17xxLib/src/lpc17xx_uart.c **** 
 586:LPC17xxLib/src/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 587:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 588:LPC17xxLib/src/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/THR = Data & UART_THR_MASKBIT;
 589:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 590:LPC17xxLib/src/lpc17xx_uart.c **** 	else
 591:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 592:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->/*RBTHDLR.*/THR = Data & UART_THR_MASKBIT;
 593:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 594:LPC17xxLib/src/lpc17xx_uart.c **** 
 595:LPC17xxLib/src/lpc17xx_uart.c **** }
 596:LPC17xxLib/src/lpc17xx_uart.c **** 
 597:LPC17xxLib/src/lpc17xx_uart.c **** 
 598:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
 599:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Receive a single data from UART peripheral
 600:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 601:LPC17xxLib/src/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
 602:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 603:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 604:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 605:LPC17xxLib/src/lpc17xx_uart.c ****  * @return 		Data received
 606:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
 607:LPC17xxLib/src/lpc17xx_uart.c **** uint8_t UART_ReceiveByte(LPC_UART_TypeDef* UARTx)
 608:LPC17xxLib/src/lpc17xx_uart.c **** {
 609:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 610:LPC17xxLib/src/lpc17xx_uart.c **** 
 611:LPC17xxLib/src/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 612:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 613:LPC17xxLib/src/lpc17xx_uart.c **** 		return (((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/RBR & UART_RBR_MASKBIT);
 614:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 615:LPC17xxLib/src/lpc17xx_uart.c **** 	else
 616:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 617:LPC17xxLib/src/lpc17xx_uart.c **** 		return (UARTx->/*RBTHDLR.*/RBR & UART_RBR_MASKBIT);
 618:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 619:LPC17xxLib/src/lpc17xx_uart.c **** }
 620:LPC17xxLib/src/lpc17xx_uart.c **** 
 621:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
 622:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Send a block of data via UART peripheral
 623:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data, should be:
 624:LPC17xxLib/src/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
 625:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 626:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 627:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 628:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	txbuf 	Pointer to Transmit buffer
 629:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	buflen 	Length of Transmit buffer
 630:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in] 	flag 	Flag used in  UART transfer, should be
 631:LPC17xxLib/src/lpc17xx_uart.c ****  * 						NONE_BLOCKING or BLOCKING
 632:LPC17xxLib/src/lpc17xx_uart.c ****  * @return 		Number of bytes sent.
 633:LPC17xxLib/src/lpc17xx_uart.c ****  *
 634:LPC17xxLib/src/lpc17xx_uart.c ****  * Note: when using UART in BLOCKING mode, a time-out condition is used
 635:LPC17xxLib/src/lpc17xx_uart.c ****  * via defined symbol UART_BLOCKING_TIMEOUT.
 636:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
 637:LPC17xxLib/src/lpc17xx_uart.c **** uint32_t UART_Send(LPC_UART_TypeDef *UARTx, uint8_t *txbuf,
  25              	 .loc 1 637 0
  26              	 .cfi_startproc
  27              	 
  28              	 
  29              	.LVL0:
  30 0000 F0B5     	 push {r4,r5,r6,r7,lr}
  31              	 .cfi_def_cfa_offset 20
  32              	 .cfi_offset 4,-20
  33              	 .cfi_offset 5,-16
  34              	 .cfi_offset 6,-12
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
 638:LPC17xxLib/src/lpc17xx_uart.c **** 		uint32_t buflen, TRANSFER_BLOCK_Type flag)
 639:LPC17xxLib/src/lpc17xx_uart.c **** {
 640:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t bToSend, bSent, timeOut, fifo_cnt;
 641:LPC17xxLib/src/lpc17xx_uart.c **** 	uint8_t *pChar = txbuf;
 642:LPC17xxLib/src/lpc17xx_uart.c **** 
 643:LPC17xxLib/src/lpc17xx_uart.c **** 	bToSend = buflen;
 644:LPC17xxLib/src/lpc17xx_uart.c **** 
 645:LPC17xxLib/src/lpc17xx_uart.c **** 	// blocking mode
 646:LPC17xxLib/src/lpc17xx_uart.c **** 	if (flag == BLOCKING) {
 647:LPC17xxLib/src/lpc17xx_uart.c **** 		bSent = 0;
 648:LPC17xxLib/src/lpc17xx_uart.c **** 		while (bToSend){
 649:LPC17xxLib/src/lpc17xx_uart.c **** 			timeOut = UART_BLOCKING_TIMEOUT;
 650:LPC17xxLib/src/lpc17xx_uart.c **** 			// Wait for THR empty with timeout
 651:LPC17xxLib/src/lpc17xx_uart.c **** 			while (!(UARTx->LSR & UART_LSR_THRE)) {
 652:LPC17xxLib/src/lpc17xx_uart.c **** 				if (timeOut == 0) break;
 653:LPC17xxLib/src/lpc17xx_uart.c **** 				timeOut--;
 654:LPC17xxLib/src/lpc17xx_uart.c **** 			}
 655:LPC17xxLib/src/lpc17xx_uart.c **** 			// Time out!
 656:LPC17xxLib/src/lpc17xx_uart.c **** 			if(timeOut == 0) break;
  37              	 .loc 1 656 0
  38 0002 0024     	 movs r4,#0
  39              	.LVL1:
  40              	.L2:
 648:LPC17xxLib/src/lpc17xx_uart.c **** 			timeOut = UART_BLOCKING_TIMEOUT;
  41              	 .loc 1 648 0
  42 0004 AAB1     	 cbz r2,.L1
  43 0006 4FF0FF33 	 mov r3,#-1
  44 000a 01E0     	 b .L10
  45              	.LVL2:
  46              	.L4:
 652:LPC17xxLib/src/lpc17xx_uart.c **** 				timeOut--;
  47              	 .loc 1 652 0
  48 000c 8BB1     	 cbz r3,.L1
 653:LPC17xxLib/src/lpc17xx_uart.c **** 			}
  49              	 .loc 1 653 0
  50 000e 013B     	 subs r3,r3,#1
  51              	.LVL3:
  52              	.L10:
 651:LPC17xxLib/src/lpc17xx_uart.c **** 				if (timeOut == 0) break;
  53              	 .loc 1 651 0
  54 0010 067D     	 ldrb r6,[r0,#20]
  55 0012 B606     	 lsls r6,r6,#26
  56 0014 FAD5     	 bpl .L4
  57              	 .loc 1 656 0
  58 0016 63B1     	 cbz r3,.L1
  59 0018 01F11006 	 add r6,r1,#16
  60 001c 671A     	 subs r7,r4,r1
  61              	.LVL4:
  62              	.L8:
 657:LPC17xxLib/src/lpc17xx_uart.c **** 			fifo_cnt = UART_TX_FIFO_SIZE;
 658:LPC17xxLib/src/lpc17xx_uart.c **** 			while (fifo_cnt && bToSend){
 659:LPC17xxLib/src/lpc17xx_uart.c **** 				UART_SendByte(UARTx, (*pChar++));
  63              	 .loc 1 659 0
  64 001e 11F8013B 	 ldrb r3,[r1],#1
  65              	.LVL5:
 660:LPC17xxLib/src/lpc17xx_uart.c **** 				fifo_cnt--;
 661:LPC17xxLib/src/lpc17xx_uart.c **** 				bToSend--;
  66              	 .loc 1 661 0
  67 0022 013A     	 subs r2,r2,#1
  68              	.LVL6:
 658:LPC17xxLib/src/lpc17xx_uart.c **** 				UART_SendByte(UARTx, (*pChar++));
  69              	 .loc 1 658 0
  70 0024 B142     	 cmp r1,r6
  71              	.LBB43:
  72              	.LBB44:
 588:LPC17xxLib/src/lpc17xx_uart.c **** 	}
  73              	 .loc 1 588 0
  74 0026 0370     	 strb r3,[r0]
  75              	.LVL7:
  76 0028 01EB0704 	 add r4,r1,r7
  77              	.LVL8:
  78              	.LBE44:
  79              	.LBE43:
 658:LPC17xxLib/src/lpc17xx_uart.c **** 				UART_SendByte(UARTx, (*pChar++));
  80              	 .loc 1 658 0
  81 002c EAD0     	 beq .L2
  82              	.LVL9:
  83 002e 002A     	 cmp r2,#0
  84 0030 F5D1     	 bne .L8
  85              	.LVL10:
  86              	.L1:
 662:LPC17xxLib/src/lpc17xx_uart.c **** 				bSent++;
 663:LPC17xxLib/src/lpc17xx_uart.c **** 			}
 664:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 665:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 666:LPC17xxLib/src/lpc17xx_uart.c **** 	// None blocking mode
 667:LPC17xxLib/src/lpc17xx_uart.c **** 	else {
 668:LPC17xxLib/src/lpc17xx_uart.c **** 		bSent = 0;
 669:LPC17xxLib/src/lpc17xx_uart.c **** 		while (bToSend) {
 670:LPC17xxLib/src/lpc17xx_uart.c **** 			if (!(UARTx->LSR & UART_LSR_THRE)){
 671:LPC17xxLib/src/lpc17xx_uart.c **** 				break;
 672:LPC17xxLib/src/lpc17xx_uart.c **** 			}
 673:LPC17xxLib/src/lpc17xx_uart.c **** 			fifo_cnt = UART_TX_FIFO_SIZE;
 674:LPC17xxLib/src/lpc17xx_uart.c **** 			while (fifo_cnt && bToSend) {
 675:LPC17xxLib/src/lpc17xx_uart.c **** 				UART_SendByte(UARTx, (*pChar++));
 676:LPC17xxLib/src/lpc17xx_uart.c **** 				bToSend--;
 677:LPC17xxLib/src/lpc17xx_uart.c **** 				fifo_cnt--;
 678:LPC17xxLib/src/lpc17xx_uart.c **** 				bSent++;
 679:LPC17xxLib/src/lpc17xx_uart.c **** 			}
 680:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 681:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 682:LPC17xxLib/src/lpc17xx_uart.c **** 	return bSent;
 683:LPC17xxLib/src/lpc17xx_uart.c **** }
  87              	 .loc 1 683 0
  88 0032 2046     	 mov r0,r4
  89              	.LVL11:
  90 0034 F0BD     	 pop {r4,r5,r6,r7,pc}
  91              	 .cfi_endproc
  92              	.LFE87:
  94              	 .section .text.uabs,"ax",%progbits
  95              	 .align 1
  96              	 .global uabs
  97              	 .syntax unified
  98              	 .thumb
  99              	 .thumb_func
 100              	 .fpu softvfp
 102              	uabs:
 103              	.LFB55:
  56:LPC17xxLib/src/lpc17xx_uart.c **** 	if (a>=b)
 104              	 .loc 1 56 0
 105              	 .cfi_startproc
 106              	 
 107              	 
 108              	 
 109              	.LVL12:
  57:LPC17xxLib/src/lpc17xx_uart.c **** 		return a-b;
 110              	 .loc 1 57 0
 111 0000 8842     	 cmp r0,r1
  58:LPC17xxLib/src/lpc17xx_uart.c **** 	return b-a;
 112              	 .loc 1 58 0
 113 0002 2CBF     	 ite cs
 114 0004 401A     	 subcs r0,r0,r1
 115              	.LVL13:
  59:LPC17xxLib/src/lpc17xx_uart.c **** }
 116              	 .loc 1 59 0
 117 0006 081A     	 subcc r0,r1,r0
  60:LPC17xxLib/src/lpc17xx_uart.c **** 
 118              	 .loc 1 60 0
 119 0008 7047     	 bx lr
 120              	 .cfi_endproc
 121              	.LFE55:
 123              	 .section .text.calc_baud,"ax",%progbits
 124              	 .align 1
 125              	 .global calc_baud
 126              	 .syntax unified
 127              	 .thumb
 128              	 .thumb_func
 129              	 .fpu softvfp
 131              	calc_baud:
 132              	.LFB56:
  63:LPC17xxLib/src/lpc17xx_uart.c **** 	// 65535 * 14 * 16 is less than 2**24 so we have a spare 8 bits of precision
 133              	 .loc 1 63 0
 134              	 .cfi_startproc
 135              	 
 136              	 
 137              	 
 138              	.LVL14:
  70:LPC17xxLib/src/lpc17xx_uart.c **** 	return ((pclk * 32) / dx) * 8;
 139              	 .loc 1 70 0
 140 0000 1203     	 lsls r2,r2,#12
 141              	.LVL15:
 142 0002 4A43     	 muls r2,r1,r2
 143 0004 B2FBF3F2 	 udiv r2,r2,r3
  71:LPC17xxLib/src/lpc17xx_uart.c **** }
 144              	 .loc 1 71 0
 145 0008 4001     	 lsls r0,r0,#5
 146              	.LVL16:
  70:LPC17xxLib/src/lpc17xx_uart.c **** 	return ((pclk * 32) / dx) * 8;
 147              	 .loc 1 70 0
 148 000a 02EB0131 	 add r1,r2,r1,lsl#12
 149              	.LVL17:
  71:LPC17xxLib/src/lpc17xx_uart.c **** }
 150              	 .loc 1 71 0
 151 000e B0FBF1F0 	 udiv r0,r0,r1
  72:LPC17xxLib/src/lpc17xx_uart.c **** 
 152              	 .loc 1 72 0
 153 0012 C000     	 lsls r0,r0,#3
 154 0014 7047     	 bx lr
 155              	 .cfi_endproc
 156              	.LFE56:
 158              	 .section .text.baud_space_search,"ax",%progbits
 159              	 .align 1
 160              	 .global baud_space_search
 161              	 .syntax unified
 162              	 .thumb
 163              	 .thumb_func
 164              	 .fpu softvfp
 166              	baud_space_search:
 167              	.LFB57:
  84:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t pd, dl, mulval, divaddval;
 168              	 .loc 1 84 0
 169              	 .cfi_startproc
 170              	 
 171              	 
 172              	.LVL18:
 173 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 174              	 .cfi_def_cfa_offset 36
 175              	 .cfi_offset 4,-36
 176              	 .cfi_offset 5,-32
 177              	 .cfi_offset 6,-28
 178              	 .cfi_offset 7,-24
 179              	 .cfi_offset 8,-20
 180              	 .cfi_offset 9,-16
 181              	 .cfi_offset 10,-12
 182              	 .cfi_offset 11,-8
 183              	 .cfi_offset 14,-4
 184 0004 0546     	 mov r5,r0
 185 0006 0F46     	 mov r7,r1
 186              	.LBB45:
  89:LPC17xxLib/src/lpc17xx_uart.c **** 		for (mulval = 1; mulval < 16; mulval++)
 187              	 .loc 1 89 0
 188 0008 4FF0000A 	 mov r10,#0
 189              	.LBE45:
  87:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 190              	 .loc 1 87 0
 191 000c 454B     	 ldr r3,.L57
  84:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t pd, dl, mulval, divaddval;
 192              	 .loc 1 84 0
 193 000e 89B0     	 sub sp,sp,#36
 194              	 .cfi_def_cfa_offset 72
  87:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 195              	 .loc 1 87 0
 196 0010 9842     	 cmp r0,r3
 197 0012 94BF     	 ite ls
 198 0014 4FF00308 	 movls r8,#3
 199 0018 4FF00108 	 movhi r8,#1
 200              	.LBB55:
  89:LPC17xxLib/src/lpc17xx_uart.c **** 		for (mulval = 1; mulval < 16; mulval++)
 201              	 .loc 1 89 0
 202 001c 424B     	 ldr r3,.L57+4
 203 001e 1B68     	 ldr r3,[r3]
 204 0020 0793     	 str r3,[sp,#28]
 205 0022 0301     	 lsls r3,r0,#4
 206 0024 0293     	 str r3,[sp,#8]
 207              	.LVL19:
 208              	.L42:
  90:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 209              	 .loc 1 90 0
 210 0026 4FF00109 	 mov r9,#1
  89:LPC17xxLib/src/lpc17xx_uart.c **** 		for (mulval = 1; mulval < 16; mulval++)
 211              	 .loc 1 89 0
 212 002a 079B     	 ldr r3,[sp,#28]
 213 002c DDF808B0 	 ldr fp,[sp,#8]
 214 0030 23FA08F3 	 lsr r3,r3,r8
 215 0034 0593     	 str r3,[sp,#20]
 216              	.LVL20:
 217 0036 5B00     	 lsls r3,r3,#1
 218              	.LVL21:
 219 0038 0693     	 str r3,[sp,#24]
 220 003a 0393     	 str r3,[sp,#12]
 221              	.LVL22:
 222              	.L26:
 223 003c 0023     	 movs r3,#0
 224 003e CDF810B0 	 str fp,[sp,#16]
 225 0042 0193     	 str r3,[sp,#4]
 226              	.LVL23:
 227              	.L28:
 228              	.LBB46:
  98:LPC17xxLib/src/lpc17xx_uart.c **** 
 229              	 .loc 1 98 0
 230 0044 039B     	 ldr r3,[sp,#12]
 231 0046 049A     	 ldr r2,[sp,#16]
  94:LPC17xxLib/src/lpc17xx_uart.c **** 				// baud = pclk / (16 * dl * (1 + (DivAdd / Mul))
 232              	 .loc 1 94 0
 233 0048 0AF1010A 	 add r10,r10,#1
 234              	.LVL24:
  98:LPC17xxLib/src/lpc17xx_uart.c **** 
 235              	 .loc 1 98 0
 236 004c B3FBF2F4 	 udiv r4,r3,r2
 237 0050 0134     	 adds r4,r4,#1
 238 0052 6408     	 lsrs r4,r4,#1
 239              	.LVL25:
 101:LPC17xxLib/src/lpc17xx_uart.c **** 					continue;
 240              	 .loc 1 101 0
 241 0054 B4F5803F 	 cmp r4,#65536
 242 0058 26D3     	 bcc .L27
 243              	.LVL26:
 244              	.L36:
 245              	.LBE46:
  92:LPC17xxLib/src/lpc17xx_uart.c **** 			{
 246              	 .loc 1 92 0
 247 005a 019B     	 ldr r3,[sp,#4]
 248 005c 029A     	 ldr r2,[sp,#8]
 249 005e 0133     	 adds r3,r3,#1
 250 0060 0193     	 str r3,[sp,#4]
 251              	.LVL27:
 252 0062 049B     	 ldr r3,[sp,#16]
 253              	.LVL28:
 254 0064 1344     	 add r3,r3,r2
 255 0066 0493     	 str r3,[sp,#16]
 256 0068 019B     	 ldr r3,[sp,#4]
 257 006a 4B45     	 cmp r3,r9
 258 006c EAD1     	 bne .L28
  90:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 259              	 .loc 1 90 0 discriminator 2
 260 006e 019B     	 ldr r3,[sp,#4]
 261 0070 069A     	 ldr r2,[sp,#24]
 262 0072 03F10109 	 add r9,r3,#1
 263              	.LVL29:
 264 0076 029B     	 ldr r3,[sp,#8]
 265 0078 B9F1100F 	 cmp r9,#16
 266 007c 9B44     	 add fp,fp,r3
 267 007e 039B     	 ldr r3,[sp,#12]
 268 0080 1344     	 add r3,r3,r2
 269 0082 0393     	 str r3,[sp,#12]
 270 0084 DAD1     	 bne .L26
 131:LPC17xxLib/src/lpc17xx_uart.c **** 			return i;
 271              	 .loc 1 131 0
 272 0086 C822     	 movs r2,#200
 273 0088 3B68     	 ldr r3,[r7]
 274              	.LVL30:
 275              	.LBB51:
 276              	.LBB52:
  57:LPC17xxLib/src/lpc17xx_uart.c **** 		return a-b;
 277              	 .loc 1 57 0
 278 008a 9D42     	 cmp r5,r3
  58:LPC17xxLib/src/lpc17xx_uart.c **** 	return b-a;
 279              	 .loc 1 58 0
 280 008c 94BF     	 ite ls
 281 008e 5B1B     	 subls r3,r3,r5
 282              	.LVL31:
  59:LPC17xxLib/src/lpc17xx_uart.c **** }
 283              	 .loc 1 59 0
 284 0090 EB1A     	 subhi r3,r5,r3
 285              	.LVL32:
 286              	.LBE52:
 287              	.LBE51:
 131:LPC17xxLib/src/lpc17xx_uart.c **** 			return i;
 288              	 .loc 1 131 0
 289 0092 5343     	 muls r3,r2,r3
 290 0094 B3FBF5F3 	 udiv r3,r3,r5
 291 0098 002B     	 cmp r3,#0
 292 009a 39D0     	 beq .L24
 293              	.LBE55:
  87:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 294              	 .loc 1 87 0 discriminator 6
 295 009c 08F1FF38 	 add r8,r8,#-1
 296              	.LVL33:
 297 00a0 B8F1030F 	 cmp r8,#3
 298 00a4 BFD9     	 bls .L42
 299 00a6 33E0     	 b .L24
 300              	.LVL34:
 301              	.L27:
 302              	.LBB56:
 303              	.LBB53:
 110:LPC17xxLib/src/lpc17xx_uart.c **** 
 304              	 .loc 1 110 0
 305 00a8 019B     	 ldr r3,[sp,#4]
 105:LPC17xxLib/src/lpc17xx_uart.c **** 					dl = 1;
 306              	 .loc 1 105 0
 307 00aa 002C     	 cmp r4,#0
 308 00ac 34D0     	 beq .L30
 109:LPC17xxLib/src/lpc17xx_uart.c **** 					dl = 2;
 309              	 .loc 1 109 0
 310 00ae 13B1     	 cbz r3,.L31
 110:LPC17xxLib/src/lpc17xx_uart.c **** 
 311              	 .loc 1 110 0 discriminator 1
 312 00b0 012C     	 cmp r4,#1
 313 00b2 08BF     	 it eq
 314 00b4 0224     	 moveq r4,#2
 315              	.LVL35:
 316              	.L31:
 112:LPC17xxLib/src/lpc17xx_uart.c **** 				if (uabs(b, target_baud) < uabs(r->baud, target_baud))
 317              	 .loc 1 112 0
 318 00b6 4B46     	 mov r3,r9
 319 00b8 019A     	 ldr r2,[sp,#4]
 320 00ba 2146     	 mov r1,r4
 321 00bc 0598     	 ldr r0,[sp,#20]
 322 00be 1B4E     	 ldr r6,.L57+8
 323 00c0 B047     	 blx r6
 324              	.LVL36:
 113:LPC17xxLib/src/lpc17xx_uart.c **** 				{
 325              	 .loc 1 113 0
 326 00c2 3A68     	 ldr r2,[r7]
 327              	.LBB47:
 328              	.LBB48:
  57:LPC17xxLib/src/lpc17xx_uart.c **** 		return a-b;
 329              	 .loc 1 57 0
 330 00c4 8542     	 cmp r5,r0
  58:LPC17xxLib/src/lpc17xx_uart.c **** 	return b-a;
 331              	 .loc 1 58 0
 332 00c6 94BF     	 ite ls
 333 00c8 431B     	 subls r3,r0,r5
  59:LPC17xxLib/src/lpc17xx_uart.c **** }
 334              	 .loc 1 59 0
 335 00ca 2B1A     	 subhi r3,r5,r0
 336              	.LVL37:
 337              	.LBE48:
 338              	.LBE47:
 339              	.LBB49:
 340              	.LBB50:
  57:LPC17xxLib/src/lpc17xx_uart.c **** 		return a-b;
 341              	 .loc 1 57 0
 342 00cc 9542     	 cmp r5,r2
  58:LPC17xxLib/src/lpc17xx_uart.c **** 	return b-a;
 343              	 .loc 1 58 0
 344 00ce 94BF     	 ite ls
 345 00d0 521B     	 subls r2,r2,r5
 346              	.LVL38:
  59:LPC17xxLib/src/lpc17xx_uart.c **** }
 347              	 .loc 1 59 0
 348 00d2 AA1A     	 subhi r2,r5,r2
 349              	.LVL39:
 350              	.LBE50:
 351              	.LBE49:
 113:LPC17xxLib/src/lpc17xx_uart.c **** 				{
 352              	 .loc 1 113 0
 353 00d4 9A42     	 cmp r2,r3
 354 00d6 C0D9     	 bls .L36
 118:LPC17xxLib/src/lpc17xx_uart.c **** 					r->mulval    = mulval;
 355              	 .loc 1 118 0
 356 00d8 019A     	 ldr r2,[sp,#4]
 117:LPC17xxLib/src/lpc17xx_uart.c **** 					r->dx       = ((dl * 16 * 32 * 8) + ((dl * 16 * divaddval * 32 * 8) / mulval));
 357              	 .loc 1 117 0
 358 00da A7F80540 	 strh r4,[r7,#5]
 118:LPC17xxLib/src/lpc17xx_uart.c **** 					r->mulval    = mulval;
 359              	 .loc 1 118 0
 360 00de 1203     	 lsls r2,r2,#12
 361 00e0 6243     	 muls r2,r4,r2
 362 00e2 B2FBF9F2 	 udiv r2,r2,r9
 363 00e6 02EB0434 	 add r4,r2,r4,lsl#12
 364              	.LVL40:
 120:LPC17xxLib/src/lpc17xx_uart.c **** 					// 					printf("\t\t{%7d,%4d,%6d,%3d,%3d},\t// Actual baud: %7d, error %c%4.2f%%, %d iteration
 365              	 .loc 1 120 0
 366 00ea 9DF80420 	 ldrb r2,[sp,#4]
 122:LPC17xxLib/src/lpc17xx_uart.c **** 						return i;
 367              	 .loc 1 122 0
 368 00ee 8542     	 cmp r5,r0
 115:LPC17xxLib/src/lpc17xx_uart.c **** 					r->pd        = pd;
 369              	 .loc 1 115 0
 370 00f0 3860     	 str r0,[r7]
 116:LPC17xxLib/src/lpc17xx_uart.c **** 					r->dl        = dl;
 371              	 .loc 1 116 0
 372 00f2 87F80480 	 strb r8,[r7,#4]
 118:LPC17xxLib/src/lpc17xx_uart.c **** 					r->mulval    = mulval;
 373              	 .loc 1 118 0
 374 00f6 C7F80740 	 str r4,[r7,#7]
 119:LPC17xxLib/src/lpc17xx_uart.c **** 					r->divaddval = divaddval;
 375              	 .loc 1 119 0
 376 00fa 87F80B90 	 strb r9,[r7,#11]
 120:LPC17xxLib/src/lpc17xx_uart.c **** 					// 					printf("\t\t{%7d,%4d,%6d,%3d,%3d},\t// Actual baud: %7d, error %c%4.2f%%, %d iteration
 377              	 .loc 1 120 0
 378 00fe 3A73     	 strb r2,[r7,#12]
 122:LPC17xxLib/src/lpc17xx_uart.c **** 						return i;
 379              	 .loc 1 122 0
 380 0100 06D0     	 beq .L24
 125:LPC17xxLib/src/lpc17xx_uart.c **** 							return i;
 381              	 .loc 1 125 0
 382 0102 4FF4C062 	 mov r2,#1536
 383 0106 5343     	 muls r3,r2,r3
 384 0108 B3FBF5F3 	 udiv r3,r3,r5
 385 010c 002B     	 cmp r3,#0
 386 010e A4D1     	 bne .L36
 387              	.LVL41:
 388              	.L24:
 389              	.LBE53:
 390              	.LBE56:
 135:LPC17xxLib/src/lpc17xx_uart.c **** 
 391              	 .loc 1 135 0
 392 0110 5046     	 mov r0,r10
 393 0112 09B0     	 add sp,sp,#36
 394              	 .cfi_remember_state
 395              	 .cfi_def_cfa_offset 36
 396              	 
 397 0114 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 398              	.LVL42:
 399              	.L30:
 400              	 .cfi_restore_state
 401              	.LBB57:
 402              	.LBB54:
 110:LPC17xxLib/src/lpc17xx_uart.c **** 
 403              	 .loc 1 110 0
 404 0118 002B     	 cmp r3,#0
 405 011a 0CBF     	 ite eq
 406 011c 0124     	 moveq r4,#1
 407 011e 0224     	 movne r4,#2
 408 0120 C9E7     	 b .L31
 409              	.L58:
 410 0122 00BF     	 .align 2
 411              	.L57:
 412 0124 3F420F00 	 .word 999999
 413 0128 00000000 	 .word SystemCoreClock
 414 012c 00000000 	 .word calc_baud
 415              	.LBE54:
 416              	.LBE57:
 417              	 .cfi_endproc
 418              	.LFE57:
 420              	 .section .text.UART_Init,"ax",%progbits
 421              	 .align 1
 422              	 .global UART_Init
 423              	 .syntax unified
 424              	 .thumb
 425              	 .thumb_func
 426              	 .fpu softvfp
 428              	UART_Init:
 429              	.LFB59:
 308:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t tmp;
 430              	 .loc 1 308 0
 431              	 .cfi_startproc
 432              	 
 433              	 
 434              	.LVL43:
 435 0000 7FB5     	 push {r0,r1,r2,r3,r4,r5,r6,lr}
 436              	 .cfi_def_cfa_offset 32
 437              	 .cfi_offset 4,-16
 438              	 .cfi_offset 5,-12
 439              	 .cfi_offset 6,-8
 440              	 .cfi_offset 14,-4
 318:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 441              	 .loc 1 318 0
 442 0002 7C4B     	 ldr r3,.L109
 308:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t tmp;
 443              	 .loc 1 308 0
 444 0004 0446     	 mov r4,r0
 318:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 445              	 .loc 1 318 0
 446 0006 9842     	 cmp r0,r3
 308:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t tmp;
 447              	 .loc 1 308 0
 448 0008 0D46     	 mov r5,r1
 318:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 449              	 .loc 1 318 0
 450 000a 34D1     	 bne .L60
 321:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 451              	 .loc 1 321 0
 452 000c 0121     	 movs r1,#1
 453              	.LVL44:
 454 000e 0820     	 movs r0,#8
 455              	.LVL45:
 456              	.L106:
 345:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 457              	 .loc 1 345 0
 458 0010 794B     	 ldr r3,.L109+4
 459 0012 9847     	 blx r3
 460              	.LVL46:
 461              	.L61:
 390:LPC17xxLib/src/lpc17xx_uart.c **** 		// Disable FIFO
 462              	 .loc 1 390 0
 463 0014 0723     	 movs r3,#7
 464 0016 2372     	 strb r3,[r4,#8]
 392:LPC17xxLib/src/lpc17xx_uart.c **** 
 465              	 .loc 1 392 0
 466 0018 0023     	 movs r3,#0
 467 001a 2372     	 strb r3,[r4,#8]
 468              	.L68:
 395:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 469              	 .loc 1 395 0
 470 001c 237D     	 ldrb r3,[r4,#20]
 471 001e DA07     	 lsls r2,r3,#31
 472 0020 00F19580 	 bmi .L69
 400:LPC17xxLib/src/lpc17xx_uart.c **** 		// Wait for current transmit complete
 473              	 .loc 1 400 0
 474 0024 8023     	 movs r3,#128
 475 0026 84F83030 	 strb r3,[r4,#48]
 476              	.L70:
 402:LPC17xxLib/src/lpc17xx_uart.c **** 		// Disable Tx
 477              	 .loc 1 402 0 discriminator 1
 478 002a 237D     	 ldrb r3,[r4,#20]
 479 002c 9B06     	 lsls r3,r3,#26
 480 002e FCD5     	 bpl .L70
 404:LPC17xxLib/src/lpc17xx_uart.c **** 
 481              	 .loc 1 404 0
 482 0030 0023     	 movs r3,#0
 483 0032 84F83030 	 strb r3,[r4,#48]
 407:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set LCR to default state
 484              	 .loc 1 407 0
 485 0036 2279     	 ldrb r2,[r4,#4]
 486 0038 2371     	 strb r3,[r4,#4]
 487 003a 6279     	 ldrb r2,[r4,#5]
 488 003c 6371     	 strb r3,[r4,#5]
 489 003e A279     	 ldrb r2,[r4,#6]
 490 0040 A371     	 strb r3,[r4,#6]
 491 0042 E279     	 ldrb r2,[r4,#7]
 492 0044 E371     	 strb r3,[r4,#7]
 409:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set ACR to default state
 493              	 .loc 1 409 0
 494 0046 2373     	 strb r3,[r4,#12]
 411:LPC17xxLib/src/lpc17xx_uart.c **** 		// Dummy reading
 495              	 .loc 1 411 0
 496 0048 94F82020 	 ldrb r2,[r4,#32]
 497 004c 84F82030 	 strb r3,[r4,#32]
 498 0050 94F82120 	 ldrb r2,[r4,#33]
 499 0054 84F82130 	 strb r3,[r4,#33]
 500 0058 94F82220 	 ldrb r2,[r4,#34]
 501 005c 84F82230 	 strb r3,[r4,#34]
 502 0060 94F82320 	 ldrb r2,[r4,#35]
 503 0064 84F82330 	 strb r3,[r4,#35]
 413:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 504              	 .loc 1 413 0
 505 0068 227D     	 ldrb r2,[r4,#20]
 506              	.LVL47:
 416:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 507              	 .loc 1 416 0
 508 006a 644A     	 ldr r2,.L109+8
 509 006c 9442     	 cmp r4,r2
 419:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 510              	 .loc 1 419 0
 511 006e 08BF     	 it eq
 512 0070 84F82430 	 strbeq r3,[r4,#36]
 513 0074 24E0     	 b .L67
 514              	.LVL48:
 515              	.L60:
 326:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 516              	 .loc 1 326 0
 517 0076 624B     	 ldr r3,.L109+12
 518 0078 9842     	 cmp r0,r3
 519 007a 5FD1     	 bne .L62
 329:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 520              	 .loc 1 329 0
 521 007c 5E4B     	 ldr r3,.L109+4
 522 007e 0121     	 movs r1,#1
 523              	.LVL49:
 524 0080 1020     	 movs r0,#16
 525              	.LVL50:
 526 0082 9847     	 blx r3
 527              	.LVL51:
 352:LPC17xxLib/src/lpc17xx_uart.c **** 				| UART_FCR_RX_RS | UART_FCR_TX_RS);
 528              	 .loc 1 352 0
 529 0084 0723     	 movs r3,#7
 530 0086 2372     	 strb r3,[r4,#8]
 355:LPC17xxLib/src/lpc17xx_uart.c **** 
 531              	 .loc 1 355 0
 532 0088 0023     	 movs r3,#0
 358:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 533              	 .loc 1 358 0
 534 008a 2246     	 mov r2,r4
 355:LPC17xxLib/src/lpc17xx_uart.c **** 
 535              	 .loc 1 355 0
 536 008c 2372     	 strb r3,[r4,#8]
 537 008e 2346     	 mov r3,r4
 538              	.LVL52:
 539              	.L63:
 358:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 540              	 .loc 1 358 0
 541 0090 117D     	 ldrb r1,[r2,#20]
 542 0092 C807     	 lsls r0,r1,#31
 543 0094 59D4     	 bmi .L65
 363:LPC17xxLib/src/lpc17xx_uart.c **** 		// Wait for current transmit complete
 544              	 .loc 1 363 0
 545 0096 8021     	 movs r1,#128
 546 0098 82F83010 	 strb r1,[r2,#48]
 547              	.LVL53:
 548              	.L66:
 365:LPC17xxLib/src/lpc17xx_uart.c **** 		// Disable Tx
 549              	 .loc 1 365 0 discriminator 1
 550 009c 1A7D     	 ldrb r2,[r3,#20]
 551 009e 9106     	 lsls r1,r2,#26
 552 00a0 FCD5     	 bpl .L66
 367:LPC17xxLib/src/lpc17xx_uart.c **** 
 553              	 .loc 1 367 0
 554 00a2 0022     	 movs r2,#0
 555 00a4 83F83020 	 strb r2,[r3,#48]
 370:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set LCR to default state
 556              	 .loc 1 370 0
 557 00a8 5A60     	 str r2,[r3,#4]
 372:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set ACR to default state
 558              	 .loc 1 372 0
 559 00aa 1A73     	 strb r2,[r3,#12]
 374:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set Modem Control to default state
 560              	 .loc 1 374 0
 561 00ac 1A62     	 str r2,[r3,#32]
 376:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set RS485 control to default state
 562              	 .loc 1 376 0
 563 00ae 1A74     	 strb r2,[r3,#16]
 378:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set RS485 delay timer to default state
 564              	 .loc 1 378 0
 565 00b0 83F84C20 	 strb r2,[r3,#76]
 380:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set RS485 addr match to default state
 566              	 .loc 1 380 0
 567 00b4 83F85420 	 strb r2,[r3,#84]
 382:LPC17xxLib/src/lpc17xx_uart.c **** 		//Dummy Reading to Clear Status
 568              	 .loc 1 382 0
 569 00b8 83F85020 	 strb r2,[r3,#80]
 384:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp = ((LPC_UART1_TypeDef *)UARTx)->LSR;
 570              	 .loc 1 384 0
 571 00bc 1A7E     	 ldrb r2,[r3,#24]
 385:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 572              	 .loc 1 385 0
 573 00be 1B7D     	 ldrb r3,[r3,#20]
 574              	.LVL54:
 575              	.L67:
 424:LPC17xxLib/src/lpc17xx_uart.c **** 
 576              	 .loc 1 424 0
 577 00c0 2E68     	 ldr r6,[r5]
 578              	.LVL55:
 579              	.LBB63:
 580              	.LBB64:
 155:LPC17xxLib/src/lpc17xx_uart.c **** // 	uint32_t uClk;
 581              	 .loc 1 155 0
 582 00c2 504B     	 ldr r3,.L109+16
 583 00c4 6946     	 mov r1,sp
 584 00c6 3046     	 mov r0,r6
 585 00c8 9847     	 blx r3
 586              	.LVL56:
 229:LPC17xxLib/src/lpc17xx_uart.c **** // 	if (relativeOptimalError < ((baudrate * UART_ACCEPTED_BAUDRATE_ERROR)/100))
 587              	 .loc 1 229 0
 588 00ca 6422     	 movs r2,#100
 589 00cc 009B     	 ldr r3,[sp]
 590              	.LVL57:
 591              	.LBB65:
 592              	.LBB66:
  57:LPC17xxLib/src/lpc17xx_uart.c **** 		return a-b;
 593              	 .loc 1 57 0
 594 00ce 9E42     	 cmp r6,r3
  58:LPC17xxLib/src/lpc17xx_uart.c **** 	return b-a;
 595              	 .loc 1 58 0
 596 00d0 94BF     	 ite ls
 597 00d2 9B1B     	 subls r3,r3,r6
 598              	.LVL58:
  59:LPC17xxLib/src/lpc17xx_uart.c **** }
 599              	 .loc 1 59 0
 600 00d4 F31A     	 subhi r3,r6,r3
 601              	.LVL59:
 602              	.LBE66:
 603              	.LBE65:
 229:LPC17xxLib/src/lpc17xx_uart.c **** // 	if (relativeOptimalError < ((baudrate * UART_ACCEPTED_BAUDRATE_ERROR)/100))
 604              	 .loc 1 229 0
 605 00d6 5343     	 muls r3,r2,r3
 606 00d8 0322     	 movs r2,#3
 607 00da B3FBF2F3 	 udiv r3,r3,r2
 608 00de 9E42     	 cmp r6,r3
 609 00e0 28D9     	 bls .L73
 610              	.LBB67:
 232:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 611              	 .loc 1 232 0
 612 00e2 474B     	 ldr r3,.L109+12
 234:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/DLM = UART_LOAD_DLM(best.dl);
 613              	 .loc 1 234 0
 614 00e4 207B     	 ldrb r0,[r4,#12]
 232:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 615              	 .loc 1 232 0
 616 00e6 9C42     	 cmp r4,r3
 617 00e8 BDF80530 	 ldrh r3,[sp,#5]
 234:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/DLM = UART_LOAD_DLM(best.dl);
 618              	 .loc 1 234 0
 619 00ec 40F08000 	 orr r0,r0,#128
 620 00f0 2073     	 strb r0,[r4,#12]
 235:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/DLL = UART_LOAD_DLL(best.dl);
 621              	 .loc 1 235 0
 622 00f2 4FEA1320 	 lsr r0,r3,#8
 236:LPC17xxLib/src/lpc17xx_uart.c **** 			/* Then reset DLAB bit */
 623              	 .loc 1 236 0
 624 00f6 DBB2     	 uxtb r3,r3
 235:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/DLL = UART_LOAD_DLL(best.dl);
 625              	 .loc 1 235 0
 626 00f8 2071     	 strb r0,[r4,#4]
 236:LPC17xxLib/src/lpc17xx_uart.c **** 			/* Then reset DLAB bit */
 627              	 .loc 1 236 0
 628 00fa 2370     	 strb r3,[r4]
 238:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->FDR = (UART_FDR_MULVAL(best.mulval) \
 629              	 .loc 1 238 0
 630 00fc 237B     	 ldrb r3,[r4,#12]
 631 00fe 9DF80B10 	 ldrb r1,[sp,#11]
 632 0102 03F07F03 	 and r3,r3,#127
 633 0106 9DF80C20 	 ldrb r2,[sp,#12]
 634 010a 2373     	 strb r3,[r4,#12]
 232:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 635              	 .loc 1 232 0
 636 010c 21D1     	 bne .L74
 239:LPC17xxLib/src/lpc17xx_uart.c **** 				| UART_FDR_DIVADDVAL(best.divaddval)) & UART_FDR_BITMASK;
 637              	 .loc 1 239 0
 638 010e 0901     	 lsls r1,r1,#4
 639 0110 C9B2     	 uxtb r1,r1
 240:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 640              	 .loc 1 240 0
 641 0112 02F00F02 	 and r2,r2,#15
 642 0116 0A43     	 orrs r2,r2,r1
 239:LPC17xxLib/src/lpc17xx_uart.c **** 				| UART_FDR_DIVADDVAL(best.divaddval)) & UART_FDR_BITMASK;
 643              	 .loc 1 239 0
 644 0118 A262     	 str r2,[r4,#40]
 645              	.L75:
 254:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 646              	 .loc 1 254 0
 647 011a 9DF80430 	 ldrb r3,[sp,#4]
 648 011e 022B     	 cmp r3,#2
 649 0120 96BF     	 itet ls
 650 0122 394A     	 ldrls r2,.L109+20
 651 0124 0321     	 movhi r1,#3
 652 0126 D15C     	 ldrbls r1,[r2,r3]
 653              	.LVL60:
 271:LPC17xxLib/src/lpc17xx_uart.c **** 			CLKPWR_SetPCLKDiv(CLKPWR_PCLKSEL_UART0, pclkdiv);
 654              	 .loc 1 271 0
 655 0128 324B     	 ldr r3,.L109
 656 012a 9C42     	 cmp r4,r3
 657 012c 19D1     	 bne .L77
 272:LPC17xxLib/src/lpc17xx_uart.c **** 		if (((LPC_UART1_TypeDef *) UARTx) == LPC_UART1)
 658              	 .loc 1 272 0
 659 012e 0620     	 movs r0,#6
 660 0130 364B     	 ldr r3,.L109+24
 661 0132 9847     	 blx r3
 662              	.LVL61:
 663              	.L73:
 664              	.LBE67:
 665              	.LBE64:
 666              	.LBE63:
 426:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 667              	 .loc 1 426 0
 668 0134 324B     	 ldr r3,.L109+12
 669 0136 9C42     	 cmp r4,r3
 670 0138 2CD1     	 bne .L81
 671 013a 18E0     	 b .L79
 672              	.LVL62:
 673              	.L62:
 334:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 674              	 .loc 1 334 0
 675 013c 344B     	 ldr r3,.L109+28
 676 013e 9842     	 cmp r0,r3
 677 0140 4FD1     	 bne .L64
 337:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 678              	 .loc 1 337 0
 679 0142 0121     	 movs r1,#1
 680              	.LVL63:
 681 0144 4FF08070 	 mov r0,#16777216
 682              	.LVL64:
 683 0148 62E7     	 b .L106
 684              	.LVL65:
 685              	.L65:
 360:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 686              	 .loc 1 360 0
 687 014a 1178     	 ldrb r1,[r2]
 688 014c A0E7     	 b .L63
 689              	.LVL66:
 690              	.L69:
 397:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 691              	 .loc 1 397 0
 692 014e 2378     	 ldrb r3,[r4]
 693 0150 64E7     	 b .L68
 694              	.LVL67:
 695              	.L74:
 696              	.LBB74:
 697              	.LBB71:
 698              	.LBB68:
 250:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 699              	 .loc 1 250 0
 700 0152 02F00F02 	 and r2,r2,#15
 701 0156 42EA0112 	 orr r2,r2,r1,lsl#4
 702 015a D2B2     	 uxtb r2,r2
 249:LPC17xxLib/src/lpc17xx_uart.c **** 				| UART_FDR_DIVADDVAL(best.divaddval)) & UART_FDR_BITMASK;
 703              	 .loc 1 249 0
 704 015c 84F82820 	 strb r2,[r4,#40]
 705 0160 DBE7     	 b .L75
 706              	.LVL68:
 707              	.L77:
 273:LPC17xxLib/src/lpc17xx_uart.c **** 			CLKPWR_SetPCLKDiv(CLKPWR_PCLKSEL_UART1, pclkdiv);
 708              	 .loc 1 273 0
 709 0162 274B     	 ldr r3,.L109+12
 710 0164 9C42     	 cmp r4,r3
 711 0166 0FD1     	 bne .L78
 274:LPC17xxLib/src/lpc17xx_uart.c **** 		if (UARTx == LPC_UART2)
 712              	 .loc 1 274 0
 713 0168 0820     	 movs r0,#8
 714 016a 284B     	 ldr r3,.L109+24
 715 016c 9847     	 blx r3
 716              	.LVL69:
 717              	.L79:
 718              	.LBE68:
 719              	.LBE71:
 720              	.LBE74:
 428:LPC17xxLib/src/lpc17xx_uart.c **** 				& UART_LCR_BITMASK;
 721              	 .loc 1 428 0
 722 016e 244B     	 ldr r3,.L109+12
 723 0170 1B7B     	 ldrb r3,[r3,#12]
 724              	.L108:
 436:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART_DATABIT_5:
 725              	 .loc 1 436 0
 726 0172 6A79     	 ldrb r2,[r5,#5]
 433:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 727              	 .loc 1 433 0
 728 0174 03F0C003 	 and r3,r3,#192
 729              	.LVL70:
 436:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART_DATABIT_5:
 730              	 .loc 1 436 0
 731 0178 012A     	 cmp r2,#1
 732 017a 12D0     	 beq .L84
 733 017c 13D3     	 bcc .L85
 734 017e 022A     	 cmp r2,#2
 735 0180 26D0     	 beq .L86
 448:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
 736              	 .loc 1 448 0
 737 0182 43F00303 	 orr r3,r3,#3
 738              	.LVL71:
 449:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 739              	 .loc 1 449 0
 740 0186 0EE0     	 b .L85
 741              	.LVL72:
 742              	.L78:
 743              	.LBB75:
 744              	.LBB72:
 745              	.LBB69:
 275:LPC17xxLib/src/lpc17xx_uart.c **** 			CLKPWR_SetPCLKDiv(CLKPWR_PCLKSEL_UART2, pclkdiv);
 746              	 .loc 1 275 0
 747 0188 214B     	 ldr r3,.L109+28
 748 018a 9C42     	 cmp r4,r3
 749 018c 04D1     	 bne .L80
 276:LPC17xxLib/src/lpc17xx_uart.c **** 		if (UARTx == LPC_UART3)
 750              	 .loc 1 276 0
 751 018e 3020     	 movs r0,#48
 752              	.L107:
 278:LPC17xxLib/src/lpc17xx_uart.c **** 
 753              	 .loc 1 278 0
 754 0190 1E4B     	 ldr r3,.L109+24
 755 0192 9847     	 blx r3
 756              	.LVL73:
 757              	.L81:
 758              	.LBE69:
 759              	.LBE72:
 760              	.LBE75:
 433:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 761              	 .loc 1 433 0
 762 0194 237B     	 ldrb r3,[r4,#12]
 763 0196 ECE7     	 b .L108
 764              	.LVL74:
 765              	.L80:
 766              	.LBB76:
 767              	.LBB73:
 768              	.LBB70:
 277:LPC17xxLib/src/lpc17xx_uart.c **** 			CLKPWR_SetPCLKDiv(CLKPWR_PCLKSEL_UART3, pclkdiv);
 769              	 .loc 1 277 0
 770 0198 184B     	 ldr r3,.L109+8
 771 019a 9C42     	 cmp r4,r3
 772 019c CAD1     	 bne .L73
 278:LPC17xxLib/src/lpc17xx_uart.c **** 
 773              	 .loc 1 278 0
 774 019e 3220     	 movs r0,#50
 775 01a0 F6E7     	 b .L107
 776              	.LVL75:
 777              	.L84:
 778              	.LBE70:
 779              	.LBE73:
 780              	.LBE76:
 441:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
 781              	 .loc 1 441 0
 782 01a2 43F00103 	 orr r3,r3,#1
 783              	.LVL76:
 784              	.L85:
 452:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 785              	 .loc 1 452 0
 786 01a6 2A79     	 ldrb r2,[r5,#4]
 787 01a8 4AB1     	 cbz r2,.L87
 788              	.LVL77:
 459:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 789              	 .loc 1 459 0
 790 01aa 032A     	 cmp r2,#3
 791 01ac 13D0     	 beq .L89
 792 01ae 042A     	 cmp r2,#4
 793 01b0 14D0     	 beq .L90
 794 01b2 022A     	 cmp r2,#2
 458:LPC17xxLib/src/lpc17xx_uart.c **** 		switch (UART_ConfigStruct->Parity)
 795              	 .loc 1 458 0
 796 01b4 14BF     	 ite ne
 797 01b6 43F00803 	 orrne r3,r3,#8
 798              	.LVL78:
 466:LPC17xxLib/src/lpc17xx_uart.c **** 			break;
 799              	 .loc 1 466 0
 800 01ba 43F01803 	 orreq r3,r3,#24
 801              	.LVL79:
 802              	.L87:
 481:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART_STOPBIT_2:
 803              	 .loc 1 481 0
 804 01be AA79     	 ldrb r2,[r5,#6]
 805 01c0 012A     	 cmp r2,#1
 483:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
 806              	 .loc 1 483 0
 807 01c2 08BF     	 it eq
 808 01c4 43F00403 	 orreq r3,r3,#4
 809              	.LVL80:
 810 01c8 DBB2     	 uxtb r3,r3
 811              	.LVL81:
 495:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 812              	 .loc 1 495 0
 813 01ca 2373     	 strb r3,[r4,#12]
 501:LPC17xxLib/src/lpc17xx_uart.c **** 
 814              	 .loc 1 501 0
 815 01cc 04B0     	 add sp,sp,#16
 816              	 .cfi_remember_state
 817              	 .cfi_def_cfa_offset 16
 818              	 
 819 01ce 70BD     	 pop {r4,r5,r6,pc}
 820              	.LVL82:
 821              	.L86:
 822              	 .cfi_restore_state
 444:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
 823              	 .loc 1 444 0
 824 01d0 43F00203 	 orr r3,r3,#2
 825              	.LVL83:
 445:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART_DATABIT_8:
 826              	 .loc 1 445 0
 827 01d4 E7E7     	 b .L85
 828              	.LVL84:
 829              	.L89:
 470:LPC17xxLib/src/lpc17xx_uart.c **** 			break;
 830              	 .loc 1 470 0
 831 01d6 43F02803 	 orr r3,r3,#40
 832              	.LVL85:
 471:LPC17xxLib/src/lpc17xx_uart.c **** 
 833              	 .loc 1 471 0
 834 01da F0E7     	 b .L87
 835              	.LVL86:
 836              	.L90:
 474:LPC17xxLib/src/lpc17xx_uart.c **** 			break;
 837              	 .loc 1 474 0
 838 01dc 43F03803 	 orr r3,r3,#56
 839              	.LVL87:
 475:LPC17xxLib/src/lpc17xx_uart.c **** 		default:
 840              	 .loc 1 475 0
 841 01e0 EDE7     	 b .L87
 842              	.LVL88:
 843              	.L64:
 342:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 844              	 .loc 1 342 0
 845 01e2 064B     	 ldr r3,.L109+8
 846 01e4 9842     	 cmp r0,r3
 847 01e6 7FF415AF 	 bne .L61
 345:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 848              	 .loc 1 345 0
 849 01ea 0121     	 movs r1,#1
 850              	.LVL89:
 851 01ec 4FF00070 	 mov r0,#33554432
 852              	.LVL90:
 853 01f0 0EE7     	 b .L106
 854              	.L110:
 855 01f2 00BF     	 .align 2
 856              	.L109:
 857 01f4 00C00040 	 .word 1073790976
 858 01f8 00000000 	 .word CLKPWR_ConfigPPWR
 859 01fc 00C00940 	 .word 1074380800
 860 0200 00000140 	 .word 1073807360
 861 0204 00000000 	 .word baud_space_search
 862 0208 00000000 	 .word .LANCHOR0
 863 020c 00000000 	 .word CLKPWR_SetPCLKDiv
 864 0210 00800940 	 .word 1074364416
 865              	 .cfi_endproc
 866              	.LFE59:
 868              	 .section .text.UART_ConfigStructInit,"ax",%progbits
 869              	 .align 1
 870              	 .global UART_ConfigStructInit
 871              	 .syntax unified
 872              	 .thumb
 873              	 .thumb_func
 874              	 .fpu softvfp
 876              	UART_ConfigStructInit:
 877              	.LFB61:
 564:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_InitStruct->Baud_rate = 9600;
 878              	 .loc 1 564 0
 879              	 .cfi_startproc
 880              	 
 881              	 
 882              	 
 883              	.LVL91:
 565:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_InitStruct->Databits = UART_DATABIT_8;
 884              	 .loc 1 565 0
 885 0000 6FF07F02 	 mvn r2,#127
 886 0004 0270     	 strb r2,[r0]
 887 0006 2522     	 movs r2,#37
 888 0008 0023     	 movs r3,#0
 889 000a 4270     	 strb r2,[r0,#1]
 566:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_InitStruct->Parity = UART_PARITY_NONE;
 890              	 .loc 1 566 0
 891 000c 0322     	 movs r2,#3
 565:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_InitStruct->Databits = UART_DATABIT_8;
 892              	 .loc 1 565 0
 893 000e 8370     	 strb r3,[r0,#2]
 894 0010 C370     	 strb r3,[r0,#3]
 566:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_InitStruct->Parity = UART_PARITY_NONE;
 895              	 .loc 1 566 0
 896 0012 4271     	 strb r2,[r0,#5]
 567:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_InitStruct->Stopbits = UART_STOPBIT_1;
 897              	 .loc 1 567 0
 898 0014 0371     	 strb r3,[r0,#4]
 568:LPC17xxLib/src/lpc17xx_uart.c **** }
 899              	 .loc 1 568 0
 900 0016 8371     	 strb r3,[r0,#6]
 901 0018 7047     	 bx lr
 902              	 .cfi_endproc
 903              	.LFE61:
 905              	 .section .text.UART_SendByte,"ax",%progbits
 906              	 .align 1
 907              	 .global UART_SendByte
 908              	 .syntax unified
 909              	 .thumb
 910              	 .thumb_func
 911              	 .fpu softvfp
 913              	UART_SendByte:
 914              	.LFB62:
 583:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 915              	 .loc 1 583 0
 916              	 .cfi_startproc
 917              	 
 918              	 
 919              	 
 920              	.LVL92:
 588:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 921              	 .loc 1 588 0
 922 0000 0170     	 strb r1,[r0]
 923 0002 7047     	 bx lr
 924              	 .cfi_endproc
 925              	.LFE62:
 927              	 .section .text.UART_ReceiveByte,"ax",%progbits
 928              	 .align 1
 929              	 .global UART_ReceiveByte
 930              	 .syntax unified
 931              	 .thumb
 932              	 .thumb_func
 933              	 .fpu softvfp
 935              	UART_ReceiveByte:
 936              	.LFB63:
 608:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 937              	 .loc 1 608 0
 938              	 .cfi_startproc
 939              	 
 940              	 
 941              	 
 942              	.LVL93:
 613:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 943              	 .loc 1 613 0
 944 0000 0078     	 ldrb r0,[r0]
 945              	.LVL94:
 946 0002 C0B2     	 uxtb r0,r0
 619:LPC17xxLib/src/lpc17xx_uart.c **** 
 947              	 .loc 1 619 0
 948 0004 7047     	 bx lr
 949              	 .cfi_endproc
 950              	.LFE63:
 952              	 .section .text.UART_Send,"ax",%progbits
 953              	 .align 1
 954              	 .global UART_Send
 955              	 .syntax unified
 956              	 .thumb
 957              	 .thumb_func
 958              	 .fpu softvfp
 960              	UART_Send:
 961              	.LFB64:
 639:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t bToSend, bSent, timeOut, fifo_cnt;
 962              	 .loc 1 639 0
 963              	 .cfi_startproc
 964              	 
 965              	 
 966              	 
 967              	.LVL95:
 646:LPC17xxLib/src/lpc17xx_uart.c **** 		bSent = 0;
 968              	 .loc 1 646 0
 969 0000 012B     	 cmp r3,#1
 639:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t bToSend, bSent, timeOut, fifo_cnt;
 970              	 .loc 1 639 0
 971 0002 F0B4     	 push {r4,r5,r6,r7}
 972              	 .cfi_def_cfa_offset 16
 973              	 .cfi_offset 4,-16
 974              	 .cfi_offset 5,-12
 975              	 .cfi_offset 6,-8
 976              	 .cfi_offset 7,-4
 639:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t bToSend, bSent, timeOut, fifo_cnt;
 977              	 .loc 1 639 0
 978 0004 0646     	 mov r6,r0
 979 0006 0C46     	 mov r4,r1
 980 0008 1546     	 mov r5,r2
 646:LPC17xxLib/src/lpc17xx_uart.c **** 		bSent = 0;
 981              	 .loc 1 646 0
 982 000a 02D1     	 bne .L119
 983              	 .loc 1 683 0
 984 000c F0BC     	 pop {r4,r5,r6,r7}
 985              	 .cfi_remember_state
 986              	 .cfi_restore 7
 987              	 .cfi_restore 6
 988              	 .cfi_restore 5
 989              	 .cfi_restore 4
 990              	 .cfi_def_cfa_offset 0
 991 000e 0B4B     	 ldr r3,.L133
 992              	.LVL96:
 993 0010 1847     	 bx r3
 994              	.LVL97:
 995              	.L119:
 996              	 .cfi_restore_state
 997 0012 0020     	 movs r0,#0
 998              	.LVL98:
 999              	.L123:
 669:LPC17xxLib/src/lpc17xx_uart.c **** 			if (!(UARTx->LSR & UART_LSR_THRE)){
 1000              	 .loc 1 669 0
 1001 0014 7DB1     	 cbz r5,.L118
 670:LPC17xxLib/src/lpc17xx_uart.c **** 				break;
 1002              	 .loc 1 670 0
 1003 0016 337D     	 ldrb r3,[r6,#20]
 1004 0018 9B06     	 lsls r3,r3,#26
 1005 001a 0CD5     	 bpl .L118
 1006 001c 04F11001 	 add r1,r4,#16
 1007 0020 071B     	 subs r7,r0,r4
 1008              	.L124:
 1009              	.LVL99:
 675:LPC17xxLib/src/lpc17xx_uart.c **** 				bToSend--;
 1010              	 .loc 1 675 0
 1011 0022 14F8013B 	 ldrb r3,[r4],#1
 1012              	.LVL100:
 676:LPC17xxLib/src/lpc17xx_uart.c **** 				fifo_cnt--;
 1013              	 .loc 1 676 0
 1014 0026 013D     	 subs r5,r5,#1
 1015              	.LVL101:
 674:LPC17xxLib/src/lpc17xx_uart.c **** 				UART_SendByte(UARTx, (*pChar++));
 1016              	 .loc 1 674 0
 1017 0028 A142     	 cmp r1,r4
 1018              	.LBB77:
 1019              	.LBB78:
 588:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 1020              	 .loc 1 588 0
 1021 002a 3370     	 strb r3,[r6]
 1022              	.LVL102:
 1023 002c 04EB0700 	 add r0,r4,r7
 1024              	.LVL103:
 1025              	.LBE78:
 1026              	.LBE77:
 674:LPC17xxLib/src/lpc17xx_uart.c **** 				UART_SendByte(UARTx, (*pChar++));
 1027              	 .loc 1 674 0
 1028 0030 F0D0     	 beq .L123
 1029              	.LVL104:
 674:LPC17xxLib/src/lpc17xx_uart.c **** 				UART_SendByte(UARTx, (*pChar++));
 1030              	 .loc 1 674 0 is_stmt 0 discriminator 1
 1031 0032 002D     	 cmp r5,#0
 1032 0034 F5D1     	 bne .L124
 1033              	.LVL105:
 1034              	.L118:
 1035              	 .loc 1 683 0 is_stmt 1
 1036 0036 F0BC     	 pop {r4,r5,r6,r7}
 1037              	 .cfi_restore 7
 1038              	 .cfi_restore 6
 1039              	 .cfi_restore 5
 1040              	 .cfi_restore 4
 1041              	 .cfi_def_cfa_offset 0
 1042              	.LVL106:
 1043 0038 7047     	 bx lr
 1044              	.L134:
 1045 003a 00BF     	 .align 2
 1046              	.L133:
 1047 003c 00000000 	 .word UART_Send.part.0
 1048              	 .cfi_endproc
 1049              	.LFE64:
 1051              	 .section .text.UART_Receive,"ax",%progbits
 1052              	 .align 1
 1053              	 .global UART_Receive
 1054              	 .syntax unified
 1055              	 .thumb
 1056              	 .thumb_func
 1057              	 .fpu softvfp
 1059              	UART_Receive:
 1060              	.LFB65:
 684:LPC17xxLib/src/lpc17xx_uart.c **** 
 685:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
 686:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Receive a block of data via UART peripheral
 687:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
 688:LPC17xxLib/src/lpc17xx_uart.c ****  * 				should be:
 689:LPC17xxLib/src/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
 690:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 691:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 692:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 693:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[out]	rxbuf 	Pointer to Received buffer
 694:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	buflen 	Length of Received buffer
 695:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in] 	flag 	Flag mode, should be NONE_BLOCKING or BLOCKING
 696:LPC17xxLib/src/lpc17xx_uart.c **** 
 697:LPC17xxLib/src/lpc17xx_uart.c ****  * @return 		Number of bytes received
 698:LPC17xxLib/src/lpc17xx_uart.c ****  *
 699:LPC17xxLib/src/lpc17xx_uart.c ****  * Note: when using UART in BLOCKING mode, a time-out condition is used
 700:LPC17xxLib/src/lpc17xx_uart.c ****  * via defined symbol UART_BLOCKING_TIMEOUT.
 701:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
 702:LPC17xxLib/src/lpc17xx_uart.c **** uint32_t UART_Receive(LPC_UART_TypeDef *UARTx, uint8_t *rxbuf, \
 703:LPC17xxLib/src/lpc17xx_uart.c **** 		uint32_t buflen, TRANSFER_BLOCK_Type flag)
 704:LPC17xxLib/src/lpc17xx_uart.c **** {
 1061              	 .loc 1 704 0
 1062              	 .cfi_startproc
 1063              	 
 1064              	 
 1065              	.LVL107:
 705:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t bToRecv, bRecv, timeOut;
 706:LPC17xxLib/src/lpc17xx_uart.c **** 	uint8_t *pChar = rxbuf;
 707:LPC17xxLib/src/lpc17xx_uart.c **** 
 708:LPC17xxLib/src/lpc17xx_uart.c **** 	bToRecv = buflen;
 709:LPC17xxLib/src/lpc17xx_uart.c **** 
 710:LPC17xxLib/src/lpc17xx_uart.c **** 	// Blocking mode
 711:LPC17xxLib/src/lpc17xx_uart.c **** 	if (flag == BLOCKING) {
 1066              	 .loc 1 711 0
 1067 0000 012B     	 cmp r3,#1
 704:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t bToRecv, bRecv, timeOut;
 1068              	 .loc 1 704 0
 1069 0002 70B5     	 push {r4,r5,r6,lr}
 1070              	 .cfi_def_cfa_offset 16
 1071              	 .cfi_offset 4,-16
 1072              	 .cfi_offset 5,-12
 1073              	 .cfi_offset 6,-8
 1074              	 .cfi_offset 14,-4
 1075 0004 4FF00003 	 mov r3,#0
 1076              	.LVL108:
 1077              	 .loc 1 711 0
 1078 0008 0FD0     	 beq .L138
 1079              	.LVL109:
 1080              	.L137:
 712:LPC17xxLib/src/lpc17xx_uart.c **** 		bRecv = 0;
 713:LPC17xxLib/src/lpc17xx_uart.c **** 		while (bToRecv){
 714:LPC17xxLib/src/lpc17xx_uart.c **** 			timeOut = UART_BLOCKING_TIMEOUT;
 715:LPC17xxLib/src/lpc17xx_uart.c **** 			while (!(UARTx->LSR & UART_LSR_RDR)){
 716:LPC17xxLib/src/lpc17xx_uart.c **** 				if (timeOut == 0) break;
 717:LPC17xxLib/src/lpc17xx_uart.c **** 				timeOut--;
 718:LPC17xxLib/src/lpc17xx_uart.c **** 			}
 719:LPC17xxLib/src/lpc17xx_uart.c **** 			// Time out!
 720:LPC17xxLib/src/lpc17xx_uart.c **** 			if(timeOut == 0) break;
 721:LPC17xxLib/src/lpc17xx_uart.c **** 			// Get data from the buffer
 722:LPC17xxLib/src/lpc17xx_uart.c **** 			(*pChar++) = UART_ReceiveByte(UARTx);
 723:LPC17xxLib/src/lpc17xx_uart.c **** 			bToRecv--;
 724:LPC17xxLib/src/lpc17xx_uart.c **** 			bRecv++;
 725:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 726:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 727:LPC17xxLib/src/lpc17xx_uart.c **** 	// None blocking mode
 728:LPC17xxLib/src/lpc17xx_uart.c **** 	else {
 729:LPC17xxLib/src/lpc17xx_uart.c **** 		bRecv = 0;
 730:LPC17xxLib/src/lpc17xx_uart.c **** 		while (bToRecv) {
 1081              	 .loc 1 730 0
 1082 000a 9342     	 cmp r3,r2
 1083 000c 12D1     	 bne .L146
 1084              	.LVL110:
 1085              	.L135:
 731:LPC17xxLib/src/lpc17xx_uart.c **** 			if (!(UARTx->LSR & UART_LSR_RDR)) {
 732:LPC17xxLib/src/lpc17xx_uart.c **** 				break;
 733:LPC17xxLib/src/lpc17xx_uart.c **** 			} else {
 734:LPC17xxLib/src/lpc17xx_uart.c **** 				(*pChar++) = UART_ReceiveByte(UARTx);
 735:LPC17xxLib/src/lpc17xx_uart.c **** 				bRecv++;
 736:LPC17xxLib/src/lpc17xx_uart.c **** 				bToRecv--;
 737:LPC17xxLib/src/lpc17xx_uart.c **** 			}
 738:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 739:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 740:LPC17xxLib/src/lpc17xx_uart.c **** 	return bRecv;
 741:LPC17xxLib/src/lpc17xx_uart.c **** }
 1086              	 .loc 1 741 0
 1087 000e 1846     	 mov r0,r3
 1088              	.LVL111:
 1089 0010 70BD     	 pop {r4,r5,r6,pc}
 1090              	.LVL112:
 1091              	.L140:
 716:LPC17xxLib/src/lpc17xx_uart.c **** 				timeOut--;
 1092              	 .loc 1 716 0
 1093 0012 002C     	 cmp r4,#0
 1094 0014 FBD0     	 beq .L135
 717:LPC17xxLib/src/lpc17xx_uart.c **** 			}
 1095              	 .loc 1 717 0
 1096 0016 013C     	 subs r4,r4,#1
 1097              	.LVL113:
 1098              	.L143:
 715:LPC17xxLib/src/lpc17xx_uart.c **** 				if (timeOut == 0) break;
 1099              	 .loc 1 715 0
 1100 0018 067D     	 ldrb r6,[r0,#20]
 1101 001a F507     	 lsls r5,r6,#31
 1102 001c F9D5     	 bpl .L140
 720:LPC17xxLib/src/lpc17xx_uart.c **** 			// Get data from the buffer
 1103              	 .loc 1 720 0
 1104 001e 002C     	 cmp r4,#0
 1105 0020 F5D0     	 beq .L135
 1106              	.LVL114:
 1107              	.LBB79:
 1108              	.LBB80:
 613:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 1109              	 .loc 1 613 0
 1110 0022 0478     	 ldrb r4,[r0]
 1111              	.LVL115:
 1112 0024 E4B2     	 uxtb r4,r4
 1113              	.LVL116:
 1114              	.LBE80:
 1115              	.LBE79:
 722:LPC17xxLib/src/lpc17xx_uart.c **** 			bToRecv--;
 1116              	 .loc 1 722 0
 1117 0026 CC54     	 strb r4,[r1,r3]
 1118              	.LVL117:
 724:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 1119              	 .loc 1 724 0
 1120 0028 0133     	 adds r3,r3,#1
 1121              	.LVL118:
 1122              	.L138:
 713:LPC17xxLib/src/lpc17xx_uart.c **** 			timeOut = UART_BLOCKING_TIMEOUT;
 1123              	 .loc 1 713 0
 1124 002a 9342     	 cmp r3,r2
 1125 002c EFD0     	 beq .L135
 1126 002e 4FF0FF34 	 mov r4,#-1
 1127 0032 F1E7     	 b .L143
 1128              	.L146:
 731:LPC17xxLib/src/lpc17xx_uart.c **** 				break;
 1129              	 .loc 1 731 0
 1130 0034 047D     	 ldrb r4,[r0,#20]
 1131 0036 E407     	 lsls r4,r4,#31
 1132 0038 E9D5     	 bpl .L135
 1133              	.LVL119:
 1134              	.LBB81:
 1135              	.LBB82:
 613:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 1136              	 .loc 1 613 0
 1137 003a 0478     	 ldrb r4,[r0]
 1138 003c E4B2     	 uxtb r4,r4
 1139              	.LVL120:
 1140              	.LBE82:
 1141              	.LBE81:
 734:LPC17xxLib/src/lpc17xx_uart.c **** 				bRecv++;
 1142              	 .loc 1 734 0
 1143 003e CC54     	 strb r4,[r1,r3]
 735:LPC17xxLib/src/lpc17xx_uart.c **** 				bToRecv--;
 1144              	 .loc 1 735 0
 1145 0040 0133     	 adds r3,r3,#1
 1146              	.LVL121:
 1147 0042 E2E7     	 b .L137
 1148              	 .cfi_endproc
 1149              	.LFE65:
 1151              	 .section .text.UART_ForceBreak,"ax",%progbits
 1152              	 .align 1
 1153              	 .global UART_ForceBreak
 1154              	 .syntax unified
 1155              	 .thumb
 1156              	 .thumb_func
 1157              	 .fpu softvfp
 1159              	UART_ForceBreak:
 1160              	.LFB66:
 742:LPC17xxLib/src/lpc17xx_uart.c **** 
 743:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
 744:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Force BREAK character on UART line, output pin UARTx TXD is
 745:LPC17xxLib/src/lpc17xx_uart.c **** 				forced to logic 0.
 746:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 747:LPC17xxLib/src/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
 748:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 749:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 750:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 751:LPC17xxLib/src/lpc17xx_uart.c ****  * @return 		None
 752:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
 753:LPC17xxLib/src/lpc17xx_uart.c **** void UART_ForceBreak(LPC_UART_TypeDef* UARTx)
 754:LPC17xxLib/src/lpc17xx_uart.c **** {
 1161              	 .loc 1 754 0
 1162              	 .cfi_startproc
 1163              	 
 1164              	 
 1165              	 
 1166              	.LVL122:
 755:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 756:LPC17xxLib/src/lpc17xx_uart.c **** 
 757:LPC17xxLib/src/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 758:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 759:LPC17xxLib/src/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_BREAK_EN;
 1167              	 .loc 1 759 0
 1168 0000 037B     	 ldrb r3,[r0,#12]
 1169 0002 43F04003 	 orr r3,r3,#64
 1170 0006 0373     	 strb r3,[r0,#12]
 1171 0008 7047     	 bx lr
 1172              	 .cfi_endproc
 1173              	.LFE66:
 1175              	 .section .text.UART_IntConfig,"ax",%progbits
 1176              	 .align 1
 1177              	 .global UART_IntConfig
 1178              	 .syntax unified
 1179              	 .thumb
 1180              	 .thumb_func
 1181              	 .fpu softvfp
 1183              	UART_IntConfig:
 1184              	.LFB67:
 760:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 761:LPC17xxLib/src/lpc17xx_uart.c **** 	else
 762:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 763:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->LCR |= UART_LCR_BREAK_EN;
 764:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 765:LPC17xxLib/src/lpc17xx_uart.c **** }
 766:LPC17xxLib/src/lpc17xx_uart.c **** 
 767:LPC17xxLib/src/lpc17xx_uart.c **** 
 768:LPC17xxLib/src/lpc17xx_uart.c **** /********************************************************************//**
 769:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief 		Enable or disable specified UART interrupt.
 770:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be
 771:LPC17xxLib/src/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
 772:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 773:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 774:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 775:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTIntCfg	Specifies the interrupt flag,
 776:LPC17xxLib/src/lpc17xx_uart.c ****  * 				should be one of the following:
 777:LPC17xxLib/src/lpc17xx_uart.c **** 				- UART_INTCFG_RBR 	:  RBR Interrupt enable
 778:LPC17xxLib/src/lpc17xx_uart.c **** 				- UART_INTCFG_THRE 	:  THR Interrupt enable
 779:LPC17xxLib/src/lpc17xx_uart.c **** 				- UART_INTCFG_RLS 	:  RX line status interrupt enable
 780:LPC17xxLib/src/lpc17xx_uart.c **** 				- UART1_INTCFG_MS	:  Modem status interrupt enable (UART1 only)
 781:LPC17xxLib/src/lpc17xx_uart.c **** 				- UART1_INTCFG_CTS	:  CTS1 signal transition interrupt enable (UART1 only)
 782:LPC17xxLib/src/lpc17xx_uart.c **** 				- UART_INTCFG_ABEO 	:  Enables the end of auto-baud interrupt
 783:LPC17xxLib/src/lpc17xx_uart.c **** 				- UART_INTCFG_ABTO 	:  Enables the auto-baud time-out interrupt
 784:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	NewState New state of specified UART interrupt type,
 785:LPC17xxLib/src/lpc17xx_uart.c ****  * 				should be:
 786:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- ENALBE: Enable this UART interrupt type.
 787:LPC17xxLib/src/lpc17xx_uart.c **** * 				- DISALBE: Disable this UART interrupt type.
 788:LPC17xxLib/src/lpc17xx_uart.c ****  * @return 		None
 789:LPC17xxLib/src/lpc17xx_uart.c ****  *********************************************************************/
 790:LPC17xxLib/src/lpc17xx_uart.c **** void UART_IntConfig(LPC_UART_TypeDef *UARTx, UART_INT_Type UARTIntCfg, FunctionalState NewState)
 791:LPC17xxLib/src/lpc17xx_uart.c **** {
 1185              	 .loc 1 791 0
 1186              	 .cfi_startproc
 1187              	 
 1188              	 
 1189              	 
 1190              	.LVL123:
 1191 0000 0629     	 cmp r1,#6
 1192 0002 96BF     	 itet ls
 1193 0004 114B     	 ldrls r3,.L169
 1194              	 .loc 1 791 0
 1195 0006 0023     	 movhi r3,#0
 1196 0008 33F81130 	 ldrhls r3,[r3,r1,lsl#1]
 1197              	.LVL124:
 792:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t tmp = 0;
 793:LPC17xxLib/src/lpc17xx_uart.c **** 
 794:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 795:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
 796:LPC17xxLib/src/lpc17xx_uart.c **** 
 797:LPC17xxLib/src/lpc17xx_uart.c **** 	switch(UARTIntCfg){
 798:LPC17xxLib/src/lpc17xx_uart.c **** 		case UART_INTCFG_RBR:
 799:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp = UART_IER_RBRINT_EN;
 800:LPC17xxLib/src/lpc17xx_uart.c **** 			break;
 801:LPC17xxLib/src/lpc17xx_uart.c **** 		case UART_INTCFG_THRE:
 802:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp = UART_IER_THREINT_EN;
 803:LPC17xxLib/src/lpc17xx_uart.c **** 			break;
 804:LPC17xxLib/src/lpc17xx_uart.c **** 		case UART_INTCFG_RLS:
 805:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp = UART_IER_RLSINT_EN;
 806:LPC17xxLib/src/lpc17xx_uart.c **** 			break;
 807:LPC17xxLib/src/lpc17xx_uart.c **** 		case UART1_INTCFG_MS:
 808:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp = UART1_IER_MSINT_EN;
 809:LPC17xxLib/src/lpc17xx_uart.c **** 			break;
 810:LPC17xxLib/src/lpc17xx_uart.c **** 		case UART1_INTCFG_CTS:
 811:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp = UART1_IER_CTSINT_EN;
 812:LPC17xxLib/src/lpc17xx_uart.c **** 			break;
 813:LPC17xxLib/src/lpc17xx_uart.c **** 		case UART_INTCFG_ABEO:
 814:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp = UART_IER_ABEOINT_EN;
 815:LPC17xxLib/src/lpc17xx_uart.c **** 			break;
 816:LPC17xxLib/src/lpc17xx_uart.c **** 		case UART_INTCFG_ABTO:
 817:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp = UART_IER_ABTOINT_EN;
 818:LPC17xxLib/src/lpc17xx_uart.c **** 			break;
 819:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 820:LPC17xxLib/src/lpc17xx_uart.c **** 
 821:LPC17xxLib/src/lpc17xx_uart.c **** 	if ((LPC_UART1_TypeDef *) UARTx == LPC_UART1)
 822:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 823:LPC17xxLib/src/lpc17xx_uart.c **** 		CHECK_PARAM((PARAM_UART_INTCFG(UARTIntCfg)) || (PARAM_UART1_INTCFG(UARTIntCfg)));
 824:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 825:LPC17xxLib/src/lpc17xx_uart.c **** 	else
 826:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 827:LPC17xxLib/src/lpc17xx_uart.c **** 		CHECK_PARAM(PARAM_UART_INTCFG(UARTIntCfg));
 828:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 829:LPC17xxLib/src/lpc17xx_uart.c **** 
 830:LPC17xxLib/src/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 1198              	 .loc 1 830 0
 1199 000c 012A     	 cmp r2,#1
 1200 000e 104A     	 ldr r2,.L169+4
 1201              	.LVL125:
 1202 0010 09D1     	 bne .L162
 831:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 832:LPC17xxLib/src/lpc17xx_uart.c **** 		if ((LPC_UART1_TypeDef *) UARTx == LPC_UART1)
 1203              	 .loc 1 832 0
 1204 0012 9042     	 cmp r0,r2
 1205 0014 03D1     	 bne .L163
 833:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 834:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/IER |= tmp;
 1206              	 .loc 1 834 0
 1207 0016 4268     	 ldr r2,[r0,#4]
 1208 0018 1343     	 orrs r3,r3,r2
 1209              	.LVL126:
 1210              	.L168:
 835:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 836:LPC17xxLib/src/lpc17xx_uart.c **** 		else
 837:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 838:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->/*DLIER.*/IER |= tmp;
 839:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 840:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 841:LPC17xxLib/src/lpc17xx_uart.c **** 	else
 842:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 843:LPC17xxLib/src/lpc17xx_uart.c **** 		if ((LPC_UART1_TypeDef *) UARTx == LPC_UART1)
 844:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 845:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/IER &= (~tmp) & UART1_IER_BITMASK;
 1211              	 .loc 1 845 0
 1212 001a 4360     	 str r3,[r0,#4]
 1213 001c 7047     	 bx lr
 1214              	.LVL127:
 1215              	.L163:
 838:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 1216              	 .loc 1 838 0
 1217 001e 4268     	 ldr r2,[r0,#4]
 1218 0020 1343     	 orrs r3,r3,r2
 1219              	.LVL128:
 1220              	.L167:
 846:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 847:LPC17xxLib/src/lpc17xx_uart.c **** 		else
 848:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 849:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->/*DLIER.*/IER &= (~tmp) & UART_IER_BITMASK;
 1221              	 .loc 1 849 0
 1222 0022 4360     	 str r3,[r0,#4]
 1223 0024 7047     	 bx lr
 1224              	.LVL129:
 1225              	.L162:
 843:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 1226              	 .loc 1 843 0
 1227 0026 9042     	 cmp r0,r2
 1228 0028 6FEA0303 	 mvn r3,r3
 1229              	.LVL130:
 1230 002c 06D1     	 bne .L165
 845:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 1231              	 .loc 1 845 0
 1232 002e 4268     	 ldr r2,[r0,#4]
 1233 0030 22F07002 	 bic r2,r2,#112
 1234 0034 9205     	 lsls r2,r2,#22
 1235 0036 920D     	 lsrs r2,r2,#22
 1236 0038 1340     	 ands r3,r3,r2
 1237              	.LVL131:
 1238 003a EEE7     	 b .L168
 1239              	.LVL132:
 1240              	.L165:
 1241              	 .loc 1 849 0
 1242 003c 4268     	 ldr r2,[r0,#4]
 1243 003e 22F0F802 	 bic r2,r2,#248
 1244 0042 9205     	 lsls r2,r2,#22
 1245 0044 920D     	 lsrs r2,r2,#22
 1246 0046 1340     	 ands r3,r3,r2
 1247              	.LVL133:
 1248 0048 EBE7     	 b .L167
 1249              	.L170:
 1250 004a 00BF     	 .align 2
 1251              	.L169:
 1252 004c 00000000 	 .word .LANCHOR1
 1253 0050 00000140 	 .word 1073807360
 1254              	 .cfi_endproc
 1255              	.LFE67:
 1257              	 .section .text.UART_GetLineStatus,"ax",%progbits
 1258              	 .align 1
 1259              	 .global UART_GetLineStatus
 1260              	 .syntax unified
 1261              	 .thumb
 1262              	 .thumb_func
 1263              	 .fpu softvfp
 1265              	UART_GetLineStatus:
 1266              	.LFB68:
 850:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 851:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 852:LPC17xxLib/src/lpc17xx_uart.c **** }
 853:LPC17xxLib/src/lpc17xx_uart.c **** 
 854:LPC17xxLib/src/lpc17xx_uart.c **** 
 855:LPC17xxLib/src/lpc17xx_uart.c **** /********************************************************************//**
 856:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief 		Get current value of Line Status register in UART peripheral.
 857:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 858:LPC17xxLib/src/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
 859:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 860:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 861:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 862:LPC17xxLib/src/lpc17xx_uart.c ****  * @return		Current value of Line Status register in UART peripheral.
 863:LPC17xxLib/src/lpc17xx_uart.c ****  * Note:	The return value of this function must be ANDed with each member in
 864:LPC17xxLib/src/lpc17xx_uart.c ****  * 			UART_LS_Type enumeration to determine current flag status
 865:LPC17xxLib/src/lpc17xx_uart.c ****  * 			corresponding to each Line status type. Because some flags in
 866:LPC17xxLib/src/lpc17xx_uart.c ****  * 			Line Status register will be cleared after reading, the next reading
 867:LPC17xxLib/src/lpc17xx_uart.c ****  * 			Line Status register could not be correct. So this function used to
 868:LPC17xxLib/src/lpc17xx_uart.c ****  * 			read Line status register in one time only, then the return value
 869:LPC17xxLib/src/lpc17xx_uart.c ****  * 			used to check all flags.
 870:LPC17xxLib/src/lpc17xx_uart.c ****  *********************************************************************/
 871:LPC17xxLib/src/lpc17xx_uart.c **** uint8_t UART_GetLineStatus(LPC_UART_TypeDef* UARTx)
 872:LPC17xxLib/src/lpc17xx_uart.c **** {
 1267              	 .loc 1 872 0
 1268              	 .cfi_startproc
 1269              	 
 1270              	 
 1271              	 
 1272              	.LVL134:
 873:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 874:LPC17xxLib/src/lpc17xx_uart.c **** 
 875:LPC17xxLib/src/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 876:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 877:LPC17xxLib/src/lpc17xx_uart.c **** 		return ((((LPC_UART1_TypeDef *)LPC_UART1)->LSR) & UART_LSR_BITMASK);
 1273              	 .loc 1 877 0
 1274 0000 007D     	 ldrb r0,[r0,#20]
 1275              	.LVL135:
 1276 0002 C0B2     	 uxtb r0,r0
 878:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 879:LPC17xxLib/src/lpc17xx_uart.c **** 	else
 880:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 881:LPC17xxLib/src/lpc17xx_uart.c **** 		return ((UARTx->LSR) & UART_LSR_BITMASK);
 882:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 883:LPC17xxLib/src/lpc17xx_uart.c **** }
 1277              	 .loc 1 883 0
 1278 0004 7047     	 bx lr
 1279              	 .cfi_endproc
 1280              	.LFE68:
 1282              	 .section .text.UART_GetIntId,"ax",%progbits
 1283              	 .align 1
 1284              	 .global UART_GetIntId
 1285              	 .syntax unified
 1286              	 .thumb
 1287              	 .thumb_func
 1288              	 .fpu softvfp
 1290              	UART_GetIntId:
 1291              	.LFB69:
 884:LPC17xxLib/src/lpc17xx_uart.c **** 
 885:LPC17xxLib/src/lpc17xx_uart.c **** /********************************************************************//**
 886:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief 		Get Interrupt Identification value
 887:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 888:LPC17xxLib/src/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
 889:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 890:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 891:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 892:LPC17xxLib/src/lpc17xx_uart.c ****  * @return		Current value of UART UIIR register in UART peripheral.
 893:LPC17xxLib/src/lpc17xx_uart.c ****  *********************************************************************/
 894:LPC17xxLib/src/lpc17xx_uart.c **** uint32_t UART_GetIntId(LPC_UART_TypeDef* UARTx)
 895:LPC17xxLib/src/lpc17xx_uart.c **** {
 1292              	 .loc 1 895 0
 1293              	 .cfi_startproc
 1294              	 
 1295              	 
 1296              	 
 1297              	.LVL136:
 896:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 897:LPC17xxLib/src/lpc17xx_uart.c **** 	return (UARTx->IIR & 0x03CF);
 1298              	 .loc 1 897 0
 1299 0000 8068     	 ldr r0,[r0,#8]
 1300              	.LVL137:
 898:LPC17xxLib/src/lpc17xx_uart.c **** }
 1301              	 .loc 1 898 0
 1302 0002 20F03000 	 bic r0,r0,#48
 1303 0006 8005     	 lsls r0,r0,#22
 1304 0008 800D     	 lsrs r0,r0,#22
 1305 000a 7047     	 bx lr
 1306              	 .cfi_endproc
 1307              	.LFE69:
 1309              	 .section .text.UART_CheckBusy,"ax",%progbits
 1310              	 .align 1
 1311              	 .global UART_CheckBusy
 1312              	 .syntax unified
 1313              	 .thumb
 1314              	 .thumb_func
 1315              	 .fpu softvfp
 1317              	UART_CheckBusy:
 1318              	.LFB70:
 899:LPC17xxLib/src/lpc17xx_uart.c **** 
 900:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
 901:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Check whether if UART is busy or not
 902:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 903:LPC17xxLib/src/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
 904:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 905:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 906:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 907:LPC17xxLib/src/lpc17xx_uart.c ****  * @return		RESET if UART is not busy, otherwise return SET.
 908:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
 909:LPC17xxLib/src/lpc17xx_uart.c **** FlagStatus UART_CheckBusy(LPC_UART_TypeDef *UARTx)
 910:LPC17xxLib/src/lpc17xx_uart.c **** {
 1319              	 .loc 1 910 0
 1320              	 .cfi_startproc
 1321              	 
 1322              	 
 1323              	 
 1324              	.LVL138:
 911:LPC17xxLib/src/lpc17xx_uart.c **** 	if (UARTx->LSR & UART_LSR_TEMT){
 1325              	 .loc 1 911 0
 1326 0000 007D     	 ldrb r0,[r0,#20]
 1327              	.LVL139:
 1328 0002 80F04000 	 eor r0,r0,#64
 912:LPC17xxLib/src/lpc17xx_uart.c **** 		return RESET;
 913:LPC17xxLib/src/lpc17xx_uart.c **** 	} else {
 914:LPC17xxLib/src/lpc17xx_uart.c **** 		return SET;
 915:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 916:LPC17xxLib/src/lpc17xx_uart.c **** }
 1329              	 .loc 1 916 0
 1330 0006 C0F38010 	 ubfx r0,r0,#6,#1
 1331 000a 7047     	 bx lr
 1332              	 .cfi_endproc
 1333              	.LFE70:
 1335              	 .section .text.UART_FIFOConfig,"ax",%progbits
 1336              	 .align 1
 1337              	 .global UART_FIFOConfig
 1338              	 .syntax unified
 1339              	 .thumb
 1340              	 .thumb_func
 1341              	 .fpu softvfp
 1343              	UART_FIFOConfig:
 1344              	.LFB71:
 917:LPC17xxLib/src/lpc17xx_uart.c **** 
 918:LPC17xxLib/src/lpc17xx_uart.c **** 
 919:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
 920:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Configure FIFO function on selected UART peripheral
 921:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 922:LPC17xxLib/src/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
 923:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 924:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 925:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 926:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	FIFOCfg	Pointer to a UART_FIFO_CFG_Type Structure that
 927:LPC17xxLib/src/lpc17xx_uart.c ****  * 						contains specified information about FIFO configuration
 928:LPC17xxLib/src/lpc17xx_uart.c ****  * @return 		none
 929:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
 930:LPC17xxLib/src/lpc17xx_uart.c **** void UART_FIFOConfig(LPC_UART_TypeDef *UARTx, UART_FIFO_CFG_Type *FIFOCfg)
 931:LPC17xxLib/src/lpc17xx_uart.c **** {
 1345              	 .loc 1 931 0
 1346              	 .cfi_startproc
 1347              	 
 1348              	 
 1349              	 
 1350              	.LVL140:
 932:LPC17xxLib/src/lpc17xx_uart.c **** 	uint8_t tmp = 0;
 933:LPC17xxLib/src/lpc17xx_uart.c **** 
 934:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 935:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_FIFO_LEVEL(FIFOCfg->FIFO_Level));
 936:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(FIFOCfg->FIFO_DMAMode));
 937:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(FIFOCfg->FIFO_ResetRxBuf));
 938:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(FIFOCfg->FIFO_ResetTxBuf));
 939:LPC17xxLib/src/lpc17xx_uart.c **** 
 940:LPC17xxLib/src/lpc17xx_uart.c **** 	tmp |= UART_FCR_FIFO_EN;
 941:LPC17xxLib/src/lpc17xx_uart.c **** 	switch (FIFOCfg->FIFO_Level){
 1351              	 .loc 1 941 0
 1352 0000 CB78     	 ldrb r3,[r1,#3]
 1353 0002 022B     	 cmp r3,#2
 1354 0004 8EBF     	 itee hi
 1355 0006 C123     	 movhi r3,#193
 1356 0008 0A4A     	 ldrls r2,.L184
 1357 000a D35C     	 ldrbls r3,[r2,r3]
 1358              	.LVL141:
 942:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV0:
 943:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV0;
 944:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
 945:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV1:
 946:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV1;
 947:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
 948:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV2:
 949:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV2;
 950:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
 951:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV3:
 952:LPC17xxLib/src/lpc17xx_uart.c **** 	default:
 953:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV3;
 954:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
 955:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 956:LPC17xxLib/src/lpc17xx_uart.c **** 
 957:LPC17xxLib/src/lpc17xx_uart.c **** 	if (FIFOCfg->FIFO_ResetTxBuf == ENABLE)
 1359              	 .loc 1 957 0
 1360 000c 4A78     	 ldrb r2,[r1,#1]
 1361 000e 012A     	 cmp r2,#1
 958:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 959:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART_FCR_TX_RS;
 960:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 961:LPC17xxLib/src/lpc17xx_uart.c **** 	if (FIFOCfg->FIFO_ResetRxBuf == ENABLE)
 1362              	 .loc 1 961 0
 1363 0010 0A78     	 ldrb r2,[r1]
 959:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 1364              	 .loc 1 959 0
 1365 0012 08BF     	 it eq
 1366 0014 43F00403 	 orreq r3,r3,#4
 1367              	.LVL142:
 1368              	 .loc 1 961 0
 1369 0018 012A     	 cmp r2,#1
 962:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 963:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART_FCR_RX_RS;
 964:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 965:LPC17xxLib/src/lpc17xx_uart.c **** 	if (FIFOCfg->FIFO_DMAMode == ENABLE)
 1370              	 .loc 1 965 0
 1371 001a 8A78     	 ldrb r2,[r1,#2]
 963:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 1372              	 .loc 1 963 0
 1373 001c 08BF     	 it eq
 1374 001e 43F00203 	 orreq r3,r3,#2
 1375              	.LVL143:
 1376              	 .loc 1 965 0
 1377 0022 012A     	 cmp r2,#1
 966:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 967:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART_FCR_DMAMODE_SEL;
 1378              	 .loc 1 967 0
 1379 0024 08BF     	 it eq
 1380 0026 43F00803 	 orreq r3,r3,#8
 1381              	.LVL144:
 1382 002a 23F03003 	 bic r3,r3,#48
 1383              	.LVL145:
 968:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 969:LPC17xxLib/src/lpc17xx_uart.c **** 
 970:LPC17xxLib/src/lpc17xx_uart.c **** 
 971:LPC17xxLib/src/lpc17xx_uart.c **** 	//write to FIFO control register
 972:LPC17xxLib/src/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 973:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 974:LPC17xxLib/src/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*IIFCR.*/FCR = tmp & UART_FCR_BITMASK;
 1384              	 .loc 1 974 0
 1385 002e DBB2     	 uxtb r3,r3
 1386 0030 0372     	 strb r3,[r0,#8]
 1387 0032 7047     	 bx lr
 1388              	.L185:
 1389              	 .align 2
 1390              	.L184:
 1391 0034 00000000 	 .word .LANCHOR2
 1392              	 .cfi_endproc
 1393              	.LFE71:
 1395              	 .section .text.UART_FIFOConfigStructInit,"ax",%progbits
 1396              	 .align 1
 1397              	 .global UART_FIFOConfigStructInit
 1398              	 .syntax unified
 1399              	 .thumb
 1400              	 .thumb_func
 1401              	 .fpu softvfp
 1403              	UART_FIFOConfigStructInit:
 1404              	.LFB72:
 975:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 976:LPC17xxLib/src/lpc17xx_uart.c **** 	else
 977:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 978:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->/*IIFCR.*/FCR = tmp & UART_FCR_BITMASK;
 979:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 980:LPC17xxLib/src/lpc17xx_uart.c **** }
 981:LPC17xxLib/src/lpc17xx_uart.c **** 
 982:LPC17xxLib/src/lpc17xx_uart.c **** /*****************************************************************************//**
 983:LPC17xxLib/src/lpc17xx_uart.c **** * @brief		Fills each UART_FIFOInitStruct member with its default value:
 984:LPC17xxLib/src/lpc17xx_uart.c **** * 				- FIFO_DMAMode = DISABLE
 985:LPC17xxLib/src/lpc17xx_uart.c **** * 				- FIFO_Level = UART_FIFO_TRGLEV0
 986:LPC17xxLib/src/lpc17xx_uart.c **** * 				- FIFO_ResetRxBuf = ENABLE
 987:LPC17xxLib/src/lpc17xx_uart.c **** * 				- FIFO_ResetTxBuf = ENABLE
 988:LPC17xxLib/src/lpc17xx_uart.c **** * 				- FIFO_State = ENABLE
 989:LPC17xxLib/src/lpc17xx_uart.c **** 
 990:LPC17xxLib/src/lpc17xx_uart.c **** * @param[in]	UART_FIFOInitStruct Pointer to a UART_FIFO_CFG_Type structure
 991:LPC17xxLib/src/lpc17xx_uart.c **** *                    which will be initialized.
 992:LPC17xxLib/src/lpc17xx_uart.c **** * @return		None
 993:LPC17xxLib/src/lpc17xx_uart.c **** *******************************************************************************/
 994:LPC17xxLib/src/lpc17xx_uart.c **** void UART_FIFOConfigStructInit(UART_FIFO_CFG_Type *UART_FIFOInitStruct)
 995:LPC17xxLib/src/lpc17xx_uart.c **** {
 1405              	 .loc 1 995 0
 1406              	 .cfi_startproc
 1407              	 
 1408              	 
 1409              	 
 1410              	.LVL146:
 996:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_DMAMode = DISABLE;
 1411              	 .loc 1 996 0
 1412 0000 0023     	 movs r3,#0
 1413 0002 8370     	 strb r3,[r0,#2]
 997:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_Level = UART_FIFO_TRGLEV0;
 1414              	 .loc 1 997 0
 1415 0004 C370     	 strb r3,[r0,#3]
 998:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_ResetRxBuf = ENABLE;
 1416              	 .loc 1 998 0
 1417 0006 0123     	 movs r3,#1
 1418 0008 0370     	 strb r3,[r0]
 999:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_ResetTxBuf = ENABLE;
 1419              	 .loc 1 999 0
 1420 000a 4370     	 strb r3,[r0,#1]
 1421 000c 7047     	 bx lr
 1422              	 .cfi_endproc
 1423              	.LFE72:
 1425              	 .section .text.UART_ABCmd,"ax",%progbits
 1426              	 .align 1
 1427              	 .global UART_ABCmd
 1428              	 .syntax unified
 1429              	 .thumb
 1430              	 .thumb_func
 1431              	 .fpu softvfp
 1433              	UART_ABCmd:
 1434              	.LFB73:
1000:LPC17xxLib/src/lpc17xx_uart.c **** }
1001:LPC17xxLib/src/lpc17xx_uart.c **** 
1002:LPC17xxLib/src/lpc17xx_uart.c **** 
1003:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
1004:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Start/Stop Auto Baudrate activity
1005:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be
1006:LPC17xxLib/src/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
1007:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
1008:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
1009:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
1010:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	ABConfigStruct	A pointer to UART_AB_CFG_Type structure that
1011:LPC17xxLib/src/lpc17xx_uart.c ****  * 								contains specified information about UART
1012:LPC17xxLib/src/lpc17xx_uart.c ****  * 								auto baudrate configuration
1013:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	NewState New State of Auto baudrate activity, should be:
1014:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- ENABLE: Start this activity
1015:LPC17xxLib/src/lpc17xx_uart.c ****  *				- DISABLE: Stop this activity
1016:LPC17xxLib/src/lpc17xx_uart.c ****  * Note:		Auto-baudrate mode enable bit will be cleared once this mode
1017:LPC17xxLib/src/lpc17xx_uart.c ****  * 				completed.
1018:LPC17xxLib/src/lpc17xx_uart.c ****  * @return 		none
1019:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
1020:LPC17xxLib/src/lpc17xx_uart.c **** void UART_ABCmd(LPC_UART_TypeDef *UARTx, UART_AB_CFG_Type *ABConfigStruct, \
1021:LPC17xxLib/src/lpc17xx_uart.c **** 				FunctionalState NewState)
1022:LPC17xxLib/src/lpc17xx_uart.c **** {
 1435              	 .loc 1 1022 0
 1436              	 .cfi_startproc
 1437              	 
 1438              	 
 1439              	 
 1440              	.LVL147:
1023:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t tmp;
1024:LPC17xxLib/src/lpc17xx_uart.c **** 
1025:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
1026:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
1027:LPC17xxLib/src/lpc17xx_uart.c **** 
1028:LPC17xxLib/src/lpc17xx_uart.c **** 	tmp = 0;
1029:LPC17xxLib/src/lpc17xx_uart.c **** 	if (NewState == ENABLE) {
 1441              	 .loc 1 1029 0
 1442 0000 012A     	 cmp r2,#1
 1443 0002 4FF00003 	 mov r3,#0
 1444 0006 2DD1     	 bne .L188
1030:LPC17xxLib/src/lpc17xx_uart.c **** 		if (ABConfigStruct->ABMode == UART_AUTOBAUD_MODE1){
 1445              	 .loc 1 1030 0
 1446 0008 0B78     	 ldrb r3,[r1]
1031:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp |= UART_ACR_MODE;
1032:LPC17xxLib/src/lpc17xx_uart.c **** 		}
1033:LPC17xxLib/src/lpc17xx_uart.c **** 		if (ABConfigStruct->AutoRestart == ENABLE){
 1447              	 .loc 1 1033 0
 1448 000a 4A78     	 ldrb r2,[r1,#1]
 1449              	.LVL148:
1030:LPC17xxLib/src/lpc17xx_uart.c **** 		if (ABConfigStruct->ABMode == UART_AUTOBAUD_MODE1){
 1450              	 .loc 1 1030 0
 1451 000c 012B     	 cmp r3,#1
1028:LPC17xxLib/src/lpc17xx_uart.c **** 	if (NewState == ENABLE) {
 1452              	 .loc 1 1028 0
 1453 000e 0CBF     	 ite eq
 1454 0010 0223     	 moveq r3,#2
 1455 0012 0023     	 movne r3,#0
 1456              	.LVL149:
 1457              	 .loc 1 1033 0
 1458 0014 012A     	 cmp r2,#1
 1459 0016 01D1     	 bne .L190
1034:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp |= UART_ACR_AUTO_RESTART;
 1460              	 .loc 1 1034 0
 1461 0018 43F00403 	 orr r3,r3,#4
 1462              	.LVL150:
 1463              	.L190:
1035:LPC17xxLib/src/lpc17xx_uart.c **** 		}
1036:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1037:LPC17xxLib/src/lpc17xx_uart.c **** 
1038:LPC17xxLib/src/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 1464              	 .loc 1 1038 0
 1465 001c 1B4A     	 ldr r2,.L199
 1466 001e 43F00103 	 orr r3,r3,#1
 1467              	.LVL151:
 1468 0022 9042     	 cmp r0,r2
 1469 0024 0ED1     	 bne .L197
1039:LPC17xxLib/src/lpc17xx_uart.c **** 	{
1040:LPC17xxLib/src/lpc17xx_uart.c **** 		if (NewState == ENABLE)
1041:LPC17xxLib/src/lpc17xx_uart.c **** 		{
1042:LPC17xxLib/src/lpc17xx_uart.c **** 			// Clear DLL and DLM value
1043:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_DLAB_EN;
 1470              	 .loc 1 1043 0
 1471 0026 027B     	 ldrb r2,[r0,#12]
 1472 0028 42F08002 	 orr r2,r2,#128
 1473 002c 0273     	 strb r2,[r0,#12]
1044:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->DLL = 0;
 1474              	 .loc 1 1044 0
 1475 002e 0022     	 movs r2,#0
 1476 0030 0270     	 strb r2,[r0]
1045:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->DLM = 0;
 1477              	 .loc 1 1045 0
 1478 0032 0271     	 strb r2,[r0,#4]
1046:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR &= ~UART_LCR_DLAB_EN;
 1479              	 .loc 1 1046 0
 1480 0034 027B     	 ldrb r2,[r0,#12]
 1481 0036 02F07F02 	 and r2,r2,#127
 1482 003a 0273     	 strb r2,[r0,#12]
1047:LPC17xxLib/src/lpc17xx_uart.c **** 			// FDR value must be reset to default value
1048:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->FDR = 0x10;
 1483              	 .loc 1 1048 0
 1484 003c 1022     	 movs r2,#16
 1485 003e 8262     	 str r2,[r0,#40]
 1486              	.L194:
1049:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->ACR = UART_ACR_START | tmp;
1050:LPC17xxLib/src/lpc17xx_uart.c **** 		}
1051:LPC17xxLib/src/lpc17xx_uart.c **** 		else
1052:LPC17xxLib/src/lpc17xx_uart.c **** 		{
1053:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->ACR = 0;
 1487              	 .loc 1 1053 0
 1488 0040 0362     	 str r3,[r0,#32]
 1489 0042 7047     	 bx lr
 1490              	.L197:
1054:LPC17xxLib/src/lpc17xx_uart.c **** 		}
1055:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1056:LPC17xxLib/src/lpc17xx_uart.c **** 	else
1057:LPC17xxLib/src/lpc17xx_uart.c **** 	{
1058:LPC17xxLib/src/lpc17xx_uart.c **** 		if (NewState == ENABLE)
1059:LPC17xxLib/src/lpc17xx_uart.c **** 		{
1060:LPC17xxLib/src/lpc17xx_uart.c **** 			// Clear DLL and DLM value
1061:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->LCR |= UART_LCR_DLAB_EN;
 1491              	 .loc 1 1061 0
 1492 0044 027B     	 ldrb r2,[r0,#12]
 1493 0046 42F08002 	 orr r2,r2,#128
 1494 004a 0273     	 strb r2,[r0,#12]
1062:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->DLL = 0;
 1495              	 .loc 1 1062 0
 1496 004c 0022     	 movs r2,#0
 1497 004e 0270     	 strb r2,[r0]
1063:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->DLM = 0;
 1498              	 .loc 1 1063 0
 1499 0050 0271     	 strb r2,[r0,#4]
1064:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->LCR &= ~UART_LCR_DLAB_EN;
 1500              	 .loc 1 1064 0
 1501 0052 027B     	 ldrb r2,[r0,#12]
 1502 0054 02F07F02 	 and r2,r2,#127
 1503 0058 0273     	 strb r2,[r0,#12]
1065:LPC17xxLib/src/lpc17xx_uart.c **** 			// FDR value must be reset to default value
1066:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->FDR = 0x10;
 1504              	 .loc 1 1066 0
 1505 005a 1022     	 movs r2,#16
 1506 005c 80F82820 	 strb r2,[r0,#40]
1067:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->ACR = UART_ACR_START | tmp;
 1507              	 .loc 1 1067 0
 1508 0060 0362     	 str r3,[r0,#32]
 1509 0062 7047     	 bx lr
 1510              	.LVL152:
 1511              	.L188:
1038:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 1512              	 .loc 1 1038 0
 1513 0064 094A     	 ldr r2,.L199
 1514              	.LVL153:
 1515 0066 9042     	 cmp r0,r2
 1516 0068 EAD0     	 beq .L194
1068:LPC17xxLib/src/lpc17xx_uart.c **** 		}
1069:LPC17xxLib/src/lpc17xx_uart.c **** 		else
1070:LPC17xxLib/src/lpc17xx_uart.c **** 		{
1071:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->ACR = 0;
 1517              	 .loc 1 1071 0
 1518 006a 90F82020 	 ldrb r2,[r0,#32]
 1519 006e 80F82030 	 strb r3,[r0,#32]
 1520 0072 90F82120 	 ldrb r2,[r0,#33]
 1521 0076 80F82130 	 strb r3,[r0,#33]
 1522 007a 90F82220 	 ldrb r2,[r0,#34]
 1523 007e 80F82230 	 strb r3,[r0,#34]
 1524 0082 90F82320 	 ldrb r2,[r0,#35]
 1525 0086 80F82330 	 strb r3,[r0,#35]
1072:LPC17xxLib/src/lpc17xx_uart.c **** 		}
1073:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1074:LPC17xxLib/src/lpc17xx_uart.c **** }
 1526              	 .loc 1 1074 0
 1527 008a 7047     	 bx lr
 1528              	.L200:
 1529              	 .align 2
 1530              	.L199:
 1531 008c 00000140 	 .word 1073807360
 1532              	 .cfi_endproc
 1533              	.LFE73:
 1535              	 .section .text.UART_ABClearIntPending,"ax",%progbits
 1536              	 .align 1
 1537              	 .global UART_ABClearIntPending
 1538              	 .syntax unified
 1539              	 .thumb
 1540              	 .thumb_func
 1541              	 .fpu softvfp
 1543              	UART_ABClearIntPending:
 1544              	.LFB74:
1075:LPC17xxLib/src/lpc17xx_uart.c **** 
1076:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
1077:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Clear Autobaud Interrupt Pending
1078:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be
1079:LPC17xxLib/src/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
1080:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
1081:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
1082:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
1083:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	ABIntType	type of auto-baud interrupt, should be:
1084:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- UART_AUTOBAUD_INTSTAT_ABEO: End of Auto-baud interrupt
1085:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- UART_AUTOBAUD_INTSTAT_ABTO: Auto-baud time out interrupt
1086:LPC17xxLib/src/lpc17xx_uart.c ****  * @return 		none
1087:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
1088:LPC17xxLib/src/lpc17xx_uart.c **** void UART_ABClearIntPending(LPC_UART_TypeDef *UARTx, UART_ABEO_Type ABIntType)
1089:LPC17xxLib/src/lpc17xx_uart.c **** {
 1545              	 .loc 1 1089 0
 1546              	 .cfi_startproc
 1547              	 
 1548              	 
 1549              	 
 1550              	.LVL154:
1090:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
1091:LPC17xxLib/src/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 1551              	 .loc 1 1091 0
 1552 0000 054B     	 ldr r3,.L204
 1553 0002 9842     	 cmp r0,r3
1092:LPC17xxLib/src/lpc17xx_uart.c **** 	{
1093:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->ACR |= ABIntType;
 1554              	 .loc 1 1093 0
 1555 0004 0BBF     	 itete eq
 1556 0006 036A     	 ldreq r3,[r0,#32]
1094:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1095:LPC17xxLib/src/lpc17xx_uart.c **** 	else
1096:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->ACR |= ABIntType;
 1557              	 .loc 1 1096 0
 1558 0008 036A     	 ldrne r3,[r0,#32]
1093:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 1559              	 .loc 1 1093 0
 1560 000a 1943     	 orreq r1,r1,r3
 1561              	.LVL155:
 1562              	 .loc 1 1096 0
 1563 000c 1943     	 orrne r1,r1,r3
1093:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 1564              	 .loc 1 1093 0
 1565 000e 0CBF     	 ite eq
 1566 0010 0162     	 streq r1,[r0,#32]
 1567              	 .loc 1 1096 0
 1568 0012 0162     	 strne r1,[r0,#32]
 1569 0014 7047     	 bx lr
 1570              	.L205:
 1571 0016 00BF     	 .align 2
 1572              	.L204:
 1573 0018 00000140 	 .word 1073807360
 1574              	 .cfi_endproc
 1575              	.LFE74:
 1577              	 .section .text.UART_TxCmd,"ax",%progbits
 1578              	 .align 1
 1579              	 .global UART_TxCmd
 1580              	 .syntax unified
 1581              	 .thumb
 1582              	 .thumb_func
 1583              	 .fpu softvfp
 1585              	UART_TxCmd:
 1586              	.LFB75:
1097:LPC17xxLib/src/lpc17xx_uart.c **** }
1098:LPC17xxLib/src/lpc17xx_uart.c **** 
1099:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
1100:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Enable/Disable transmission on UART TxD pin
1101:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
1102:LPC17xxLib/src/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
1103:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
1104:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
1105:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
1106:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	NewState New State of Tx transmission function, should be:
1107:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- ENABLE: Enable this function
1108:LPC17xxLib/src/lpc17xx_uart.c **** 				- DISABLE: Disable this function
1109:LPC17xxLib/src/lpc17xx_uart.c ****  * @return none
1110:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
1111:LPC17xxLib/src/lpc17xx_uart.c **** void UART_TxCmd(LPC_UART_TypeDef *UARTx, FunctionalState NewState)
1112:LPC17xxLib/src/lpc17xx_uart.c **** {
 1587              	 .loc 1 1112 0
 1588              	 .cfi_startproc
 1589              	 
 1590              	 
 1591              	 
 1592              	.LVL156:
1113:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
1114:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
1115:LPC17xxLib/src/lpc17xx_uart.c **** 
1116:LPC17xxLib/src/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 1593              	 .loc 1 1116 0
 1594 0000 0129     	 cmp r1,#1
 1595 0002 06D1     	 bne .L207
 1596              	.LVL157:
 1597              	.LBB85:
 1598              	.LBB86:
1117:LPC17xxLib/src/lpc17xx_uart.c **** 	{
1118:LPC17xxLib/src/lpc17xx_uart.c **** 		if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
1119:LPC17xxLib/src/lpc17xx_uart.c **** 		{
1120:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->TER |= UART_TER_TXEN;
 1599              	 .loc 1 1120 0
 1600 0004 90F83030 	 ldrb r3,[r0,#48]
 1601 0008 43F08003 	 orr r3,r3,#128
 1602 000c 80F83030 	 strb r3,[r0,#48]
 1603 0010 7047     	 bx lr
 1604              	.LVL158:
 1605              	.L207:
 1606 0012 0023     	 movs r3,#0
 1607              	.LBE86:
 1608              	.LBE85:
1121:LPC17xxLib/src/lpc17xx_uart.c **** 		}
1122:LPC17xxLib/src/lpc17xx_uart.c **** 		else
1123:LPC17xxLib/src/lpc17xx_uart.c **** 		{
1124:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->TER |= UART_TER_TXEN;
1125:LPC17xxLib/src/lpc17xx_uart.c **** 		}
1126:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1127:LPC17xxLib/src/lpc17xx_uart.c **** 	else
1128:LPC17xxLib/src/lpc17xx_uart.c **** 	{
1129:LPC17xxLib/src/lpc17xx_uart.c **** 		if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
1130:LPC17xxLib/src/lpc17xx_uart.c **** 		{
1131:LPC17xxLib/src/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->TER &= (~UART_TER_TXEN) & UART_TER_BITMASK;
 1609              	 .loc 1 1131 0
 1610 0014 90F83020 	 ldrb r2,[r0,#48]
 1611 0018 80F83030 	 strb r3,[r0,#48]
 1612 001c 7047     	 bx lr
 1613              	 .cfi_endproc
 1614              	.LFE75:
 1616              	 .section .text.UART_DeInit,"ax",%progbits
 1617              	 .align 1
 1618              	 .global UART_DeInit
 1619              	 .syntax unified
 1620              	 .thumb
 1621              	 .thumb_func
 1622              	 .fpu softvfp
 1624              	UART_DeInit:
 1625              	.LFB60:
 514:LPC17xxLib/src/lpc17xx_uart.c **** 	// For debug mode
 1626              	 .loc 1 514 0
 1627              	 .cfi_startproc
 1628              	 
 1629              	 
 1630              	.LVL159:
 518:LPC17xxLib/src/lpc17xx_uart.c **** 
 1631              	 .loc 1 518 0
 1632 0000 104B     	 ldr r3,.L217
 514:LPC17xxLib/src/lpc17xx_uart.c **** 	// For debug mode
 1633              	 .loc 1 514 0
 1634 0002 10B5     	 push {r4,lr}
 1635              	 .cfi_def_cfa_offset 8
 1636              	 .cfi_offset 4,-8
 1637              	 .cfi_offset 14,-4
 518:LPC17xxLib/src/lpc17xx_uart.c **** 
 1638              	 .loc 1 518 0
 1639 0004 0021     	 movs r1,#0
 1640 0006 9847     	 blx r3
 1641              	.LVL160:
 521:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 1642              	 .loc 1 521 0
 1643 0008 0F4B     	 ldr r3,.L217+4
 1644 000a 9842     	 cmp r0,r3
 1645 000c 05D1     	 bne .L212
 524:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 1646              	 .loc 1 524 0
 1647 000e 0021     	 movs r1,#0
 1648 0010 0820     	 movs r0,#8
 1649              	.LVL161:
 1650              	.L216:
 551:LPC17xxLib/src/lpc17xx_uart.c **** 
 1651              	 .loc 1 551 0
 1652 0012 BDE81040 	 pop {r4,lr}
 1653              	 .cfi_remember_state
 1654              	 .cfi_restore 14
 1655              	 .cfi_restore 4
 1656              	 .cfi_def_cfa_offset 0
 548:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 1657              	 .loc 1 548 0
 1658 0016 0D4B     	 ldr r3,.L217+8
 1659 0018 1847     	 bx r3
 1660              	.LVL162:
 1661              	.L212:
 1662              	 .cfi_restore_state
 529:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 1663              	 .loc 1 529 0
 1664 001a 0D4B     	 ldr r3,.L217+12
 1665 001c 9842     	 cmp r0,r3
 1666 001e 02D1     	 bne .L213
 532:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 1667              	 .loc 1 532 0
 1668 0020 0021     	 movs r1,#0
 1669 0022 1020     	 movs r0,#16
 1670              	.LVL163:
 1671 0024 F5E7     	 b .L216
 1672              	.LVL164:
 1673              	.L213:
 537:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 1674              	 .loc 1 537 0
 1675 0026 0B4B     	 ldr r3,.L217+16
 1676 0028 9842     	 cmp r0,r3
 1677 002a 03D1     	 bne .L214
 540:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 1678              	 .loc 1 540 0
 1679 002c 0021     	 movs r1,#0
 1680 002e 4FF08070 	 mov r0,#16777216
 1681              	.LVL165:
 1682 0032 EEE7     	 b .L216
 1683              	.LVL166:
 1684              	.L214:
 545:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 1685              	 .loc 1 545 0
 1686 0034 084B     	 ldr r3,.L217+20
 1687 0036 9842     	 cmp r0,r3
 1688 0038 03D1     	 bne .L211
 548:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 1689              	 .loc 1 548 0
 1690 003a 0021     	 movs r1,#0
 1691 003c 4FF00070 	 mov r0,#33554432
 1692              	.LVL167:
 1693 0040 E7E7     	 b .L216
 1694              	.LVL168:
 1695              	.L211:
 1696 0042 10BD     	 pop {r4,pc}
 1697              	.L218:
 1698              	 .align 2
 1699              	.L217:
 1700 0044 00000000 	 .word UART_TxCmd
 1701 0048 00C00040 	 .word 1073790976
 1702 004c 00000000 	 .word CLKPWR_ConfigPPWR
 1703 0050 00000140 	 .word 1073807360
 1704 0054 00800940 	 .word 1074364416
 1705 0058 00C00940 	 .word 1074380800
 1706              	 .cfi_endproc
 1707              	.LFE60:
 1709              	 .section .text.UART_IrDAInvtInputCmd,"ax",%progbits
 1710              	 .align 1
 1711              	 .global UART_IrDAInvtInputCmd
 1712              	 .syntax unified
 1713              	 .thumb
 1714              	 .thumb_func
 1715              	 .fpu softvfp
 1717              	UART_IrDAInvtInputCmd:
 1718              	.LFB76:
1132:LPC17xxLib/src/lpc17xx_uart.c **** 		}
1133:LPC17xxLib/src/lpc17xx_uart.c **** 		else
1134:LPC17xxLib/src/lpc17xx_uart.c **** 		{
1135:LPC17xxLib/src/lpc17xx_uart.c **** 			UARTx->TER &= (~UART_TER_TXEN) & UART_TER_BITMASK;
1136:LPC17xxLib/src/lpc17xx_uart.c **** 		}
1137:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1138:LPC17xxLib/src/lpc17xx_uart.c **** }
1139:LPC17xxLib/src/lpc17xx_uart.c **** 
1140:LPC17xxLib/src/lpc17xx_uart.c **** /* UART IrDA functions ---------------------------------------------------*/
1141:LPC17xxLib/src/lpc17xx_uart.c **** 
1142:LPC17xxLib/src/lpc17xx_uart.c **** #ifdef _UART3
1143:LPC17xxLib/src/lpc17xx_uart.c **** 
1144:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
1145:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Enable or disable inverting serial input function of IrDA
1146:LPC17xxLib/src/lpc17xx_uart.c ****  * 				on UART peripheral.
1147:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx UART peripheral selected, should be LPC_UART3 (only)
1148:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	NewState New state of inverting serial input, should be:
1149:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- ENABLE: Enable this function.
1150:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- DISABLE: Disable this function.
1151:LPC17xxLib/src/lpc17xx_uart.c ****  * @return none
1152:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
1153:LPC17xxLib/src/lpc17xx_uart.c **** void UART_IrDAInvtInputCmd(LPC_UART_TypeDef* UARTx, FunctionalState NewState)
1154:LPC17xxLib/src/lpc17xx_uart.c **** {
 1719              	 .loc 1 1154 0
 1720              	 .cfi_startproc
 1721              	 
 1722              	 
 1723              	 
 1724              	.LVL169:
1155:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA(UARTx));
1156:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
1157:LPC17xxLib/src/lpc17xx_uart.c **** 
1158:LPC17xxLib/src/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 1725              	 .loc 1 1158 0
 1726 0000 0129     	 cmp r1,#1
 1727 0002 06D1     	 bne .L220
1159:LPC17xxLib/src/lpc17xx_uart.c **** 	{
1160:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->ICR |= UART_ICR_IRDAINV;
 1728              	 .loc 1 1160 0
 1729 0004 90F82430 	 ldrb r3,[r0,#36]
 1730 0008 43F00203 	 orr r3,r3,#2
 1731              	.L222:
1161:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1162:LPC17xxLib/src/lpc17xx_uart.c **** 	else if (NewState == DISABLE)
1163:LPC17xxLib/src/lpc17xx_uart.c **** 	{
1164:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->ICR &= (~UART_ICR_IRDAINV) & UART_ICR_BITMASK;
 1732              	 .loc 1 1164 0
 1733 000c 80F82430 	 strb r3,[r0,#36]
 1734              	.L219:
 1735 0010 7047     	 bx lr
 1736              	.L220:
1162:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 1737              	 .loc 1 1162 0
 1738 0012 0029     	 cmp r1,#0
 1739 0014 FCD1     	 bne .L219
 1740              	 .loc 1 1164 0
 1741 0016 90F82430 	 ldrb r3,[r0,#36]
 1742 001a 03F03D03 	 and r3,r3,#61
 1743 001e F5E7     	 b .L222
 1744              	 .cfi_endproc
 1745              	.LFE76:
 1747              	 .section .text.UART_IrDACmd,"ax",%progbits
 1748              	 .align 1
 1749              	 .global UART_IrDACmd
 1750              	 .syntax unified
 1751              	 .thumb
 1752              	 .thumb_func
 1753              	 .fpu softvfp
 1755              	UART_IrDACmd:
 1756              	.LFB77:
1165:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1166:LPC17xxLib/src/lpc17xx_uart.c **** }
1167:LPC17xxLib/src/lpc17xx_uart.c **** 
1168:LPC17xxLib/src/lpc17xx_uart.c **** 
1169:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
1170:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Enable or disable IrDA function on UART peripheral.
1171:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx UART peripheral selected, should be LPC_UART3 (only)
1172:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	NewState New state of IrDA function, should be:
1173:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- ENABLE: Enable this function.
1174:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- DISABLE: Disable this function.
1175:LPC17xxLib/src/lpc17xx_uart.c ****  * @return none
1176:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
1177:LPC17xxLib/src/lpc17xx_uart.c **** void UART_IrDACmd(LPC_UART_TypeDef* UARTx, FunctionalState NewState)
1178:LPC17xxLib/src/lpc17xx_uart.c **** {
 1757              	 .loc 1 1178 0
 1758              	 .cfi_startproc
 1759              	 
 1760              	 
 1761              	 
 1762              	.LVL170:
1179:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA(UARTx));
1180:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
1181:LPC17xxLib/src/lpc17xx_uart.c **** 
1182:LPC17xxLib/src/lpc17xx_uart.c **** 	if (NewState == ENABLE)
1183:LPC17xxLib/src/lpc17xx_uart.c **** 	{
1184:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->ICR |= UART_ICR_IRDAEN;
 1763              	 .loc 1 1184 0
 1764 0000 90F82430 	 ldrb r3,[r0,#36]
1182:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 1765              	 .loc 1 1182 0
 1766 0004 0129     	 cmp r1,#1
 1767              	 .loc 1 1184 0
 1768 0006 0CBF     	 ite eq
 1769 0008 43F00103 	 orreq r3,r3,#1
1185:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1186:LPC17xxLib/src/lpc17xx_uart.c **** 	else
1187:LPC17xxLib/src/lpc17xx_uart.c **** 	{
1188:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->ICR &= (~UART_ICR_IRDAEN) & UART_ICR_BITMASK;
 1770              	 .loc 1 1188 0
 1771 000c 03F03E03 	 andne r3,r3,#62
 1772 0010 80F82430 	 strb r3,[r0,#36]
 1773 0014 7047     	 bx lr
 1774              	 .cfi_endproc
 1775              	.LFE77:
 1777              	 .section .text.UART_IrDAPulseDivConfig,"ax",%progbits
 1778              	 .align 1
 1779              	 .global UART_IrDAPulseDivConfig
 1780              	 .syntax unified
 1781              	 .thumb
 1782              	 .thumb_func
 1783              	 .fpu softvfp
 1785              	UART_IrDAPulseDivConfig:
 1786              	.LFB78:
1189:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1190:LPC17xxLib/src/lpc17xx_uart.c **** }
1191:LPC17xxLib/src/lpc17xx_uart.c **** 
1192:LPC17xxLib/src/lpc17xx_uart.c **** 
1193:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
1194:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Configure Pulse divider for IrDA function on UART peripheral.
1195:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx UART peripheral selected, should be LPC_UART3 (only)
1196:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	PulseDiv Pulse Divider value from Peripheral clock,
1197:LPC17xxLib/src/lpc17xx_uart.c ****  * 				should be one of the following:
1198:LPC17xxLib/src/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV2 	: Pulse width = 2 * Tpclk
1199:LPC17xxLib/src/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV4 	: Pulse width = 4 * Tpclk
1200:LPC17xxLib/src/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV8 	: Pulse width = 8 * Tpclk
1201:LPC17xxLib/src/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV16 	: Pulse width = 16 * Tpclk
1202:LPC17xxLib/src/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV32 	: Pulse width = 32 * Tpclk
1203:LPC17xxLib/src/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV64 	: Pulse width = 64 * Tpclk
1204:LPC17xxLib/src/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV128 : Pulse width = 128 * Tpclk
1205:LPC17xxLib/src/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV256 : Pulse width = 256 * Tpclk
1206:LPC17xxLib/src/lpc17xx_uart.c **** 
1207:LPC17xxLib/src/lpc17xx_uart.c ****  * @return none
1208:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
1209:LPC17xxLib/src/lpc17xx_uart.c **** void UART_IrDAPulseDivConfig(LPC_UART_TypeDef *UARTx, UART_IrDA_PULSE_Type PulseDiv)
1210:LPC17xxLib/src/lpc17xx_uart.c **** {
 1787              	 .loc 1 1210 0
 1788              	 .cfi_startproc
 1789              	 
 1790              	 
 1791              	 
 1792              	.LVL171:
1211:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t tmp, tmp1;
1212:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA(UARTx));
1213:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA_PULSEDIV(PulseDiv));
1214:LPC17xxLib/src/lpc17xx_uart.c **** 
1215:LPC17xxLib/src/lpc17xx_uart.c **** 	tmp1 = UART_ICR_PULSEDIV(PulseDiv);
1216:LPC17xxLib/src/lpc17xx_uart.c **** 	tmp = UARTx->ICR & (~UART_ICR_PULSEDIV(7));
 1793              	 .loc 1 1216 0
 1794 0000 90F82430 	 ldrb r3,[r0,#36]
 1795              	.LVL172:
1215:LPC17xxLib/src/lpc17xx_uart.c **** 	tmp = UARTx->ICR & (~UART_ICR_PULSEDIV(7));
 1796              	 .loc 1 1215 0
 1797 0004 C900     	 lsls r1,r1,#3
 1798              	.LVL173:
 1799              	 .loc 1 1216 0
 1800 0006 03F0C703 	 and r3,r3,#199
 1801              	.LVL174:
 1802 000a 43F00403 	 orr r3,r3,#4
1215:LPC17xxLib/src/lpc17xx_uart.c **** 	tmp = UARTx->ICR & (~UART_ICR_PULSEDIV(7));
 1803              	 .loc 1 1215 0
 1804 000e 01F03801 	 and r1,r1,#56
1217:LPC17xxLib/src/lpc17xx_uart.c **** 	tmp |= tmp1 | UART_ICR_FIXPULSE_EN;
 1805              	 .loc 1 1217 0
 1806 0012 1943     	 orrs r1,r1,r3
1218:LPC17xxLib/src/lpc17xx_uart.c **** 	UARTx->ICR = tmp & UART_ICR_BITMASK;
 1807              	 .loc 1 1218 0
 1808 0014 01F03F01 	 and r1,r1,#63
 1809 0018 80F82410 	 strb r1,[r0,#36]
 1810 001c 7047     	 bx lr
 1811              	 .cfi_endproc
 1812              	.LFE78:
 1814              	 .section .text.UART_FullModemForcePinState,"ax",%progbits
 1815              	 .align 1
 1816              	 .global UART_FullModemForcePinState
 1817              	 .syntax unified
 1818              	 .thumb
 1819              	 .thumb_func
 1820              	 .fpu softvfp
 1822              	UART_FullModemForcePinState:
 1823              	.LFB79:
1219:LPC17xxLib/src/lpc17xx_uart.c **** }
1220:LPC17xxLib/src/lpc17xx_uart.c **** 
1221:LPC17xxLib/src/lpc17xx_uart.c **** #endif
1222:LPC17xxLib/src/lpc17xx_uart.c **** 
1223:LPC17xxLib/src/lpc17xx_uart.c **** 
1224:LPC17xxLib/src/lpc17xx_uart.c **** /* UART1 FullModem function ---------------------------------------------*/
1225:LPC17xxLib/src/lpc17xx_uart.c **** 
1226:LPC17xxLib/src/lpc17xx_uart.c **** #ifdef _UART1
1227:LPC17xxLib/src/lpc17xx_uart.c **** 
1228:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
1229:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Force pin DTR/RTS corresponding to given state (Full modem mode)
1230:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1231:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	Pin	Pin that NewState will be applied to, should be:
1232:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- UART1_MODEM_PIN_DTR: DTR pin.
1233:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- UART1_MODEM_PIN_RTS: RTS pin.
1234:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	NewState New State of DTR/RTS pin, should be:
1235:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- INACTIVE: Force the pin to inactive signal.
1236:LPC17xxLib/src/lpc17xx_uart.c **** 				- ACTIVE: Force the pin to active signal.
1237:LPC17xxLib/src/lpc17xx_uart.c ****  * @return none
1238:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
1239:LPC17xxLib/src/lpc17xx_uart.c **** void UART_FullModemForcePinState(LPC_UART1_TypeDef *UARTx, UART_MODEM_PIN_Type Pin, \
1240:LPC17xxLib/src/lpc17xx_uart.c **** 							UART1_SignalState NewState)
1241:LPC17xxLib/src/lpc17xx_uart.c **** {
 1824              	 .loc 1 1241 0
 1825              	 .cfi_startproc
 1826              	 
 1827              	 
 1828              	 
 1829              	.LVL175:
1242:LPC17xxLib/src/lpc17xx_uart.c **** 	uint8_t tmp = 0;
1243:LPC17xxLib/src/lpc17xx_uart.c **** 
1244:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1245:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM_PIN(Pin));
1246:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_SIGNALSTATE(NewState));
1247:LPC17xxLib/src/lpc17xx_uart.c **** 
1248:LPC17xxLib/src/lpc17xx_uart.c **** 	switch (Pin){
 1830              	 .loc 1 1248 0
 1831 0000 61B1     	 cbz r1,.L230
 1832 0002 0129     	 cmp r1,#1
1242:LPC17xxLib/src/lpc17xx_uart.c **** 	uint8_t tmp = 0;
 1833              	 .loc 1 1242 0
 1834 0004 0CBF     	 ite eq
 1835 0006 0221     	 moveq r1,#2
 1836              	.LVL176:
 1837 0008 0021     	 movne r1,#0
 1838              	.L229:
 1839              	.LVL177:
1249:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART1_MODEM_PIN_DTR:
1250:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp = UART1_MCR_DTR_CTRL;
1251:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
1252:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART1_MODEM_PIN_RTS:
1253:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp = UART1_MCR_RTS_CTRL;
1254:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
1255:LPC17xxLib/src/lpc17xx_uart.c **** 	default:
1256:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
1257:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1258:LPC17xxLib/src/lpc17xx_uart.c **** 
1259:LPC17xxLib/src/lpc17xx_uart.c **** 	if (NewState == ACTIVE){
1260:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->MCR |= tmp;
 1840              	 .loc 1 1260 0
 1841 000a 037C     	 ldrb r3,[r0,#16]
1259:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->MCR |= tmp;
 1842              	 .loc 1 1259 0
 1843 000c 012A     	 cmp r2,#1
1261:LPC17xxLib/src/lpc17xx_uart.c **** 	} else {
1262:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->MCR &= (~tmp) & UART1_MCR_BITMASK;
 1844              	 .loc 1 1262 0
 1845 000e 16BF     	 itet ne
 1846 0010 03F0F303 	 andne r3,r3,#243
1260:LPC17xxLib/src/lpc17xx_uart.c **** 	} else {
 1847              	 .loc 1 1260 0
 1848 0014 0B43     	 orreq r3,r3,r1
 1849              	 .loc 1 1262 0
 1850 0016 8B43     	 bicne r3,r3,r1
 1851 0018 0374     	 strb r3,[r0,#16]
 1852 001a 7047     	 bx lr
 1853              	.LVL178:
 1854              	.L230:
1250:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
 1855              	 .loc 1 1250 0
 1856 001c 0121     	 movs r1,#1
 1857              	.LVL179:
 1858 001e F4E7     	 b .L229
 1859              	 .cfi_endproc
 1860              	.LFE79:
 1862              	 .section .text.UART_FullModemConfigMode,"ax",%progbits
 1863              	 .align 1
 1864              	 .global UART_FullModemConfigMode
 1865              	 .syntax unified
 1866              	 .thumb
 1867              	 .thumb_func
 1868              	 .fpu softvfp
 1870              	UART_FullModemConfigMode:
 1871              	.LFB80:
1263:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1264:LPC17xxLib/src/lpc17xx_uart.c **** }
1265:LPC17xxLib/src/lpc17xx_uart.c **** 
1266:LPC17xxLib/src/lpc17xx_uart.c **** 
1267:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
1268:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Configure Full Modem mode for UART peripheral
1269:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1270:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	Mode Full Modem mode, should be:
1271:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- UART1_MODEM_MODE_LOOPBACK: Loop back mode.
1272:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- UART1_MODEM_MODE_AUTO_RTS: Auto-RTS mode.
1273:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- UART1_MODEM_MODE_AUTO_CTS: Auto-CTS mode.
1274:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	NewState New State of this mode, should be:
1275:LPC17xxLib/src/lpc17xx_uart.c ****  * 				- ENABLE: Enable this mode.
1276:LPC17xxLib/src/lpc17xx_uart.c **** 				- DISABLE: Disable this mode.
1277:LPC17xxLib/src/lpc17xx_uart.c ****  * @return none
1278:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
1279:LPC17xxLib/src/lpc17xx_uart.c **** void UART_FullModemConfigMode(LPC_UART1_TypeDef *UARTx, UART_MODEM_MODE_Type Mode, \
1280:LPC17xxLib/src/lpc17xx_uart.c **** 							FunctionalState NewState)
1281:LPC17xxLib/src/lpc17xx_uart.c **** {
 1872              	 .loc 1 1281 0
 1873              	 .cfi_startproc
 1874              	 
 1875              	 
 1876              	 
 1877              	.LVL180:
 1878 0000 0229     	 cmp r1,#2
 1879              	 .loc 1 1281 0
 1880 0002 8EBF     	 itee hi
 1881 0004 0021     	 movhi r1,#0
 1882              	.LVL181:
 1883 0006 054B     	 ldrls r3,.L242
 1884 0008 595C     	 ldrbls r1,[r3,r1]
 1885              	.LVL182:
1282:LPC17xxLib/src/lpc17xx_uart.c **** 	uint8_t tmp = 0;
1283:LPC17xxLib/src/lpc17xx_uart.c **** 
1284:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1285:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM_MODE(Mode));
1286:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
1287:LPC17xxLib/src/lpc17xx_uart.c **** 
1288:LPC17xxLib/src/lpc17xx_uart.c **** 	switch(Mode){
1289:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART1_MODEM_MODE_LOOPBACK:
1290:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp = UART1_MCR_LOOPB_EN;
1291:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
1292:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART1_MODEM_MODE_AUTO_RTS:
1293:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp = UART1_MCR_AUTO_RTS_EN;
1294:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
1295:LPC17xxLib/src/lpc17xx_uart.c **** 	case UART1_MODEM_MODE_AUTO_CTS:
1296:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp = UART1_MCR_AUTO_CTS_EN;
1297:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
1298:LPC17xxLib/src/lpc17xx_uart.c **** 	default:
1299:LPC17xxLib/src/lpc17xx_uart.c **** 		break;
1300:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1301:LPC17xxLib/src/lpc17xx_uart.c **** 
1302:LPC17xxLib/src/lpc17xx_uart.c **** 	if (NewState == ENABLE)
1303:LPC17xxLib/src/lpc17xx_uart.c **** 	{
1304:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->MCR |= tmp;
 1886              	 .loc 1 1304 0
 1887 000a 037C     	 ldrb r3,[r0,#16]
1302:LPC17xxLib/src/lpc17xx_uart.c **** 	{
 1888              	 .loc 1 1302 0
 1889 000c 012A     	 cmp r2,#1
1305:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1306:LPC17xxLib/src/lpc17xx_uart.c **** 	else
1307:LPC17xxLib/src/lpc17xx_uart.c **** 	{
1308:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->MCR &= (~tmp) & UART1_MCR_BITMASK;
 1890              	 .loc 1 1308 0
 1891 000e 16BF     	 itet ne
 1892 0010 03F0F303 	 andne r3,r3,#243
1304:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 1893              	 .loc 1 1304 0
 1894 0014 0B43     	 orreq r3,r3,r1
 1895              	 .loc 1 1308 0
 1896 0016 8B43     	 bicne r3,r3,r1
 1897 0018 0374     	 strb r3,[r0,#16]
 1898 001a 7047     	 bx lr
 1899              	.L243:
 1900              	 .align 2
 1901              	.L242:
 1902 001c 00000000 	 .word .LANCHOR3
 1903              	 .cfi_endproc
 1904              	.LFE80:
 1906              	 .section .text.UART_FullModemGetStatus,"ax",%progbits
 1907              	 .align 1
 1908              	 .global UART_FullModemGetStatus
 1909              	 .syntax unified
 1910              	 .thumb
 1911              	 .thumb_func
 1912              	 .fpu softvfp
 1914              	UART_FullModemGetStatus:
 1915              	.LFB81:
1309:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1310:LPC17xxLib/src/lpc17xx_uart.c **** }
1311:LPC17xxLib/src/lpc17xx_uart.c **** 
1312:LPC17xxLib/src/lpc17xx_uart.c **** 
1313:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
1314:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Get current status of modem status register
1315:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1316:LPC17xxLib/src/lpc17xx_uart.c ****  * @return 		Current value of modem status register
1317:LPC17xxLib/src/lpc17xx_uart.c ****  * Note:	The return value of this function must be ANDed with each member
1318:LPC17xxLib/src/lpc17xx_uart.c ****  * 			UART_MODEM_STAT_type enumeration to determine current flag status
1319:LPC17xxLib/src/lpc17xx_uart.c ****  * 			corresponding to each modem flag status. Because some flags in
1320:LPC17xxLib/src/lpc17xx_uart.c ****  * 			modem status register will be cleared after reading, the next reading
1321:LPC17xxLib/src/lpc17xx_uart.c ****  * 			modem register could not be correct. So this function used to
1322:LPC17xxLib/src/lpc17xx_uart.c ****  * 			read modem status register in one time only, then the return value
1323:LPC17xxLib/src/lpc17xx_uart.c ****  * 			used to check all flags.
1324:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
1325:LPC17xxLib/src/lpc17xx_uart.c **** uint8_t UART_FullModemGetStatus(LPC_UART1_TypeDef *UARTx)
1326:LPC17xxLib/src/lpc17xx_uart.c **** {
 1916              	 .loc 1 1326 0
 1917              	 .cfi_startproc
 1918              	 
 1919              	 
 1920              	 
 1921              	.LVL183:
1327:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1328:LPC17xxLib/src/lpc17xx_uart.c **** 	return ((UARTx->MSR) & UART1_MSR_BITMASK);
 1922              	 .loc 1 1328 0
 1923 0000 007E     	 ldrb r0,[r0,#24]
 1924              	.LVL184:
1329:LPC17xxLib/src/lpc17xx_uart.c **** }
 1925              	 .loc 1 1329 0
 1926 0002 7047     	 bx lr
 1927              	 .cfi_endproc
 1928              	.LFE81:
 1930              	 .section .text.UART_RS485Config,"ax",%progbits
 1931              	 .align 1
 1932              	 .global UART_RS485Config
 1933              	 .syntax unified
 1934              	 .thumb
 1935              	 .thumb_func
 1936              	 .fpu softvfp
 1938              	UART_RS485Config:
 1939              	.LFB82:
1330:LPC17xxLib/src/lpc17xx_uart.c **** 
1331:LPC17xxLib/src/lpc17xx_uart.c **** 
1332:LPC17xxLib/src/lpc17xx_uart.c **** /* UART RS485 functions --------------------------------------------------------------*/
1333:LPC17xxLib/src/lpc17xx_uart.c **** 
1334:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
1335:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Configure UART peripheral in RS485 mode according to the specified
1336:LPC17xxLib/src/lpc17xx_uart.c **** *               parameters in the RS485ConfigStruct.
1337:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1338:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	RS485ConfigStruct Pointer to a UART1_RS485_CTRLCFG_Type structure
1339:LPC17xxLib/src/lpc17xx_uart.c **** *                    that contains the configuration information for specified UART
1340:LPC17xxLib/src/lpc17xx_uart.c **** *                    in RS485 mode.
1341:LPC17xxLib/src/lpc17xx_uart.c ****  * @return		None
1342:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
1343:LPC17xxLib/src/lpc17xx_uart.c **** void UART_RS485Config(LPC_UART1_TypeDef *UARTx, UART1_RS485_CTRLCFG_Type *RS485ConfigStruct)
1344:LPC17xxLib/src/lpc17xx_uart.c **** {
 1940              	 .loc 1 1344 0
 1941              	 .cfi_startproc
 1942              	 
 1943              	 
 1944              	 
 1945              	.LVL185:
1345:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t tmp;
1346:LPC17xxLib/src/lpc17xx_uart.c **** 
1347:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1348:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->AutoAddrDetect_State));
1349:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->AutoDirCtrl_State));
1350:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_RS485_CFG_DELAYVALUE(RS485ConfigStruct->DelayValue));
1351:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_SETSTATE(RS485ConfigStruct->DirCtrlPol_Level));
1352:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_RS485_DIRCTRL_PIN(RS485ConfigStruct->DirCtrlPin));
1353:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_RS485_CFG_MATCHADDRVALUE(RS485ConfigStruct->MatchAddrValue));
1354:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->NormalMultiDropMode_State));
1355:LPC17xxLib/src/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->Rx_State));
1356:LPC17xxLib/src/lpc17xx_uart.c **** 
1357:LPC17xxLib/src/lpc17xx_uart.c **** 	tmp = 0;
1358:LPC17xxLib/src/lpc17xx_uart.c **** 	// If Auto Direction Control is enabled -  This function is used in Master mode
1359:LPC17xxLib/src/lpc17xx_uart.c **** 	if (RS485ConfigStruct->AutoDirCtrl_State == ENABLE)
 1946              	 .loc 1 1359 0
 1947 0000 CB78     	 ldrb r3,[r1,#3]
 1948 0002 012B     	 cmp r3,#1
 1949 0004 25D1     	 bne .L252
 1950              	.LVL186:
1360:LPC17xxLib/src/lpc17xx_uart.c **** 	{
1361:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_DCTRL_EN;
1362:LPC17xxLib/src/lpc17xx_uart.c **** 
1363:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set polar
1364:LPC17xxLib/src/lpc17xx_uart.c **** 		if (RS485ConfigStruct->DirCtrlPol_Level == SET)
 1951              	 .loc 1 1364 0
 1952 0006 4B79     	 ldrb r3,[r1,#5]
1365:LPC17xxLib/src/lpc17xx_uart.c **** 		{
1366:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp |= UART1_RS485CTRL_OINV_1;
1367:LPC17xxLib/src/lpc17xx_uart.c **** 		}
1368:LPC17xxLib/src/lpc17xx_uart.c **** 
1369:LPC17xxLib/src/lpc17xx_uart.c **** 		// Set pin according to
1370:LPC17xxLib/src/lpc17xx_uart.c **** 		if (RS485ConfigStruct->DirCtrlPin == UART1_RS485_DIRCTRL_DTR)
 1953              	 .loc 1 1370 0
 1954 0008 0A79     	 ldrb r2,[r1,#4]
1364:LPC17xxLib/src/lpc17xx_uart.c **** 		{
 1955              	 .loc 1 1364 0
 1956 000a 012B     	 cmp r3,#1
1366:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 1957              	 .loc 1 1366 0
 1958 000c 0CBF     	 ite eq
 1959 000e 3023     	 moveq r3,#48
 1960 0010 1023     	 movne r3,#16
 1961              	.LVL187:
 1962              	 .loc 1 1370 0
 1963 0012 012A     	 cmp r2,#1
1371:LPC17xxLib/src/lpc17xx_uart.c **** 		{
1372:LPC17xxLib/src/lpc17xx_uart.c **** 			tmp |= UART1_RS485CTRL_SEL_DTR;
1373:LPC17xxLib/src/lpc17xx_uart.c **** 		}
1374:LPC17xxLib/src/lpc17xx_uart.c **** 
1375:LPC17xxLib/src/lpc17xx_uart.c **** 		// Fill delay time
1376:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->RS485DLY = RS485ConfigStruct->DelayValue & UART1_RS485DLY_BITMASK;
 1964              	 .loc 1 1376 0
 1965 0014 CA79     	 ldrb r2,[r1,#7]
1372:LPC17xxLib/src/lpc17xx_uart.c **** 		}
 1966              	 .loc 1 1372 0
 1967 0016 08BF     	 it eq
 1968 0018 43F00803 	 orreq r3,r3,#8
 1969              	.LVL188:
 1970              	 .loc 1 1376 0
 1971 001c 80F85420 	 strb r2,[r0,#84]
 1972              	.LVL189:
 1973              	.L246:
1377:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1378:LPC17xxLib/src/lpc17xx_uart.c **** 
1379:LPC17xxLib/src/lpc17xx_uart.c **** 	// MultiDrop mode is enable
1380:LPC17xxLib/src/lpc17xx_uart.c **** 	if (RS485ConfigStruct->NormalMultiDropMode_State == ENABLE)
 1974              	 .loc 1 1380 0
 1975 0020 0A78     	 ldrb r2,[r1]
 1976 0022 012A     	 cmp r2,#1
1381:LPC17xxLib/src/lpc17xx_uart.c **** 	{
1382:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_NMM_EN;
1383:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1384:LPC17xxLib/src/lpc17xx_uart.c **** 
1385:LPC17xxLib/src/lpc17xx_uart.c **** 	// Auto Address Detect function
1386:LPC17xxLib/src/lpc17xx_uart.c **** 	if (RS485ConfigStruct->AutoAddrDetect_State == ENABLE)
 1977              	 .loc 1 1386 0
 1978 0024 8A78     	 ldrb r2,[r1,#2]
1382:LPC17xxLib/src/lpc17xx_uart.c **** 	}
 1979              	 .loc 1 1382 0
 1980 0026 08BF     	 it eq
 1981 0028 43F00103 	 orreq r3,r3,#1
 1982              	.LVL190:
 1983              	 .loc 1 1386 0
 1984 002c 012A     	 cmp r2,#1
1387:LPC17xxLib/src/lpc17xx_uart.c **** 	{
1388:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_AADEN;
1389:LPC17xxLib/src/lpc17xx_uart.c **** 		// Fill Match Address
1390:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->ADRMATCH = RS485ConfigStruct->MatchAddrValue & UART1_RS485ADRMATCH_BITMASK;
 1985              	 .loc 1 1390 0
 1986 002e 02BF     	 ittt eq
 1987 0030 8A79     	 ldrbeq r2,[r1,#6]
1388:LPC17xxLib/src/lpc17xx_uart.c **** 		// Fill Match Address
 1988              	 .loc 1 1388 0
 1989 0032 43F00403 	 orreq r3,r3,#4
 1990              	.LVL191:
 1991              	 .loc 1 1390 0
 1992 0036 80F85020 	 strbeq r2,[r0,#80]
1391:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1392:LPC17xxLib/src/lpc17xx_uart.c **** 
1393:LPC17xxLib/src/lpc17xx_uart.c **** 
1394:LPC17xxLib/src/lpc17xx_uart.c **** 	// Receiver is disable
1395:LPC17xxLib/src/lpc17xx_uart.c **** 	if (RS485ConfigStruct->Rx_State == DISABLE)
 1993              	 .loc 1 1395 0
 1994 003a 4A78     	 ldrb r2,[r1,#1]
 1995 003c 0AB9     	 cbnz r2,.L251
1396:LPC17xxLib/src/lpc17xx_uart.c **** 	{
1397:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_RX_DIS;
 1996              	 .loc 1 1397 0
 1997 003e 43F00203 	 orr r3,r3,#2
 1998              	.LVL192:
 1999              	.L251:
1398:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1399:LPC17xxLib/src/lpc17xx_uart.c **** 
1400:LPC17xxLib/src/lpc17xx_uart.c **** 	// write back to RS485 control register
1401:LPC17xxLib/src/lpc17xx_uart.c **** 	UARTx->RS485CTRL = tmp & UART1_RS485CTRL_BITMASK;
 2000              	 .loc 1 1401 0
 2001 0042 DBB2     	 uxtb r3,r3
 2002              	.LVL193:
 2003 0044 80F84C30 	 strb r3,[r0,#76]
1402:LPC17xxLib/src/lpc17xx_uart.c **** 
1403:LPC17xxLib/src/lpc17xx_uart.c **** 	// Enable Parity function and leave parity in stick '0' parity as default
1404:LPC17xxLib/src/lpc17xx_uart.c **** 	UARTx->LCR |= (UART_LCR_PARITY_F_0 | UART_LCR_PARITY_EN);
 2004              	 .loc 1 1404 0
 2005 0048 037B     	 ldrb r3,[r0,#12]
 2006 004a 43F03803 	 orr r3,r3,#56
 2007 004e 0373     	 strb r3,[r0,#12]
 2008 0050 7047     	 bx lr
 2009              	.LVL194:
 2010              	.L252:
1357:LPC17xxLib/src/lpc17xx_uart.c **** 	// If Auto Direction Control is enabled -  This function is used in Master mode
 2011              	 .loc 1 1357 0
 2012 0052 0023     	 movs r3,#0
 2013 0054 E4E7     	 b .L246
 2014              	 .cfi_endproc
 2015              	.LFE82:
 2017              	 .section .text.UART_RS485ReceiverCmd,"ax",%progbits
 2018              	 .align 1
 2019              	 .global UART_RS485ReceiverCmd
 2020              	 .syntax unified
 2021              	 .thumb
 2022              	 .thumb_func
 2023              	 .fpu softvfp
 2025              	UART_RS485ReceiverCmd:
 2026              	.LFB83:
1405:LPC17xxLib/src/lpc17xx_uart.c **** }
1406:LPC17xxLib/src/lpc17xx_uart.c **** 
1407:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
1408:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Enable/Disable receiver in RS485 module in UART1
1409:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1410:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	NewState	New State of command, should be:
1411:LPC17xxLib/src/lpc17xx_uart.c ****  * 							- ENABLE: Enable this function.
1412:LPC17xxLib/src/lpc17xx_uart.c ****  * 							- DISABLE: Disable this function.
1413:LPC17xxLib/src/lpc17xx_uart.c ****  * @return		None
1414:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
1415:LPC17xxLib/src/lpc17xx_uart.c **** void UART_RS485ReceiverCmd(LPC_UART1_TypeDef *UARTx, FunctionalState NewState)
1416:LPC17xxLib/src/lpc17xx_uart.c **** {
 2027              	 .loc 1 1416 0
 2028              	 .cfi_startproc
 2029              	 
 2030              	 
 2031              	 
 2032              	.LVL195:
1417:LPC17xxLib/src/lpc17xx_uart.c **** 	if (NewState == ENABLE){
1418:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->RS485CTRL &= ~UART1_RS485CTRL_RX_DIS;
 2033              	 .loc 1 1418 0
 2034 0000 90F84C30 	 ldrb r3,[r0,#76]
1417:LPC17xxLib/src/lpc17xx_uart.c **** 	if (NewState == ENABLE){
 2035              	 .loc 1 1417 0
 2036 0004 0129     	 cmp r1,#1
 2037              	 .loc 1 1418 0
 2038 0006 0CBF     	 ite eq
 2039 0008 03F0FD03 	 andeq r3,r3,#253
1419:LPC17xxLib/src/lpc17xx_uart.c **** 	} else {
1420:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->RS485CTRL |= UART1_RS485CTRL_RX_DIS;
 2040              	 .loc 1 1420 0
 2041 000c 43F00203 	 orrne r3,r3,#2
 2042 0010 80F84C30 	 strb r3,[r0,#76]
 2043 0014 7047     	 bx lr
 2044              	 .cfi_endproc
 2045              	.LFE83:
 2047              	 .section .text.UART_RS485Send,"ax",%progbits
 2048              	 .align 1
 2049              	 .global UART_RS485Send
 2050              	 .syntax unified
 2051              	 .thumb
 2052              	 .thumb_func
 2053              	 .fpu softvfp
 2055              	UART_RS485Send:
 2056              	.LFB84:
1421:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1422:LPC17xxLib/src/lpc17xx_uart.c **** }
1423:LPC17xxLib/src/lpc17xx_uart.c **** 
1424:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
1425:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Send data on RS485 bus with specified parity stick value (9-bit mode).
1426:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1427:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	pDatFrm 	Pointer to data frame.
1428:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	size		Size of data.
1429:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	ParityStick	Parity Stick value, should be 0 or 1.
1430:LPC17xxLib/src/lpc17xx_uart.c ****  * @return		None
1431:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
1432:LPC17xxLib/src/lpc17xx_uart.c **** uint32_t UART_RS485Send(LPC_UART1_TypeDef *UARTx, uint8_t *pDatFrm, \
1433:LPC17xxLib/src/lpc17xx_uart.c **** 					uint32_t size, uint8_t ParityStick)
1434:LPC17xxLib/src/lpc17xx_uart.c **** {
 2057              	 .loc 1 1434 0
 2058              	 .cfi_startproc
 2059              	 
 2060              	 
 2061              	.LVL196:
 2062 0000 70B5     	 push {r4,r5,r6,lr}
 2063              	 .cfi_def_cfa_offset 16
 2064              	 .cfi_offset 4,-16
 2065              	 .cfi_offset 5,-12
 2066              	 .cfi_offset 6,-8
 2067              	 .cfi_offset 14,-4
 2068              	 .loc 1 1434 0
 2069 0002 0446     	 mov r4,r0
 2070 0004 084E     	 ldr r6,.L267
1435:LPC17xxLib/src/lpc17xx_uart.c **** 	uint8_t tmp, save;
1436:LPC17xxLib/src/lpc17xx_uart.c **** 	uint32_t cnt;
1437:LPC17xxLib/src/lpc17xx_uart.c **** 
1438:LPC17xxLib/src/lpc17xx_uart.c **** 	if (ParityStick){
 2071              	 .loc 1 1438 0
 2072 0006 53B1     	 cbz r3,.L259
 2073              	.LVL197:
 2074              	.LBB95:
 2075              	.LBB96:
1439:LPC17xxLib/src/lpc17xx_uart.c **** 		save = tmp = UARTx->LCR & UART_LCR_BITMASK;
 2076              	 .loc 1 1439 0
 2077 0008 057B     	 ldrb r5,[r0,#12]
 2078 000a EDB2     	 uxtb r5,r5
 2079              	.LVL198:
1440:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp &= ~(UART_LCR_PARITY_EVEN);
 2080              	 .loc 1 1440 0
 2081 000c 05F0EF03 	 and r3,r5,#239
 2082              	.LVL199:
1441:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->LCR = tmp;
 2083              	 .loc 1 1441 0
 2084 0010 0373     	 strb r3,[r0,#12]
 2085              	.LVL200:
 2086              	.LBB97:
 2087              	.LBB98:
 2088 0012 B047     	 blx r6
 2089              	.LVL201:
 2090              	.L260:
 2091              	.LBE98:
 2092              	.LBE97:
1442:LPC17xxLib/src/lpc17xx_uart.c **** 		cnt = UART_Send((LPC_UART_TypeDef *)UARTx, pDatFrm, size, BLOCKING);
1443:LPC17xxLib/src/lpc17xx_uart.c **** 		while (!(UARTx->LSR & UART_LSR_TEMT));
 2093              	 .loc 1 1443 0
 2094 0014 237D     	 ldrb r3,[r4,#20]
 2095 0016 5A06     	 lsls r2,r3,#25
 2096 0018 FCD5     	 bpl .L260
1444:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->LCR = save;
 2097              	 .loc 1 1444 0
 2098 001a 2573     	 strb r5,[r4,#12]
 2099              	.LVL202:
 2100 001c 70BD     	 pop {r4,r5,r6,pc}
 2101              	.LVL203:
 2102              	.L259:
 2103              	.LBE96:
 2104              	.LBE95:
 2105              	.LBB99:
 2106              	.LBB100:
 2107 001e B047     	 blx r6
 2108              	.LVL204:
 2109              	.L262:
 2110              	.LBE100:
 2111              	.LBE99:
1445:LPC17xxLib/src/lpc17xx_uart.c **** 	} else {
1446:LPC17xxLib/src/lpc17xx_uart.c **** 		cnt = UART_Send((LPC_UART_TypeDef *)UARTx, pDatFrm, size, BLOCKING);
1447:LPC17xxLib/src/lpc17xx_uart.c **** 		while (!(UARTx->LSR & UART_LSR_TEMT));
 2112              	 .loc 1 1447 0 discriminator 1
 2113 0020 237D     	 ldrb r3,[r4,#20]
 2114 0022 5B06     	 lsls r3,r3,#25
 2115 0024 FCD5     	 bpl .L262
1448:LPC17xxLib/src/lpc17xx_uart.c **** 	}
1449:LPC17xxLib/src/lpc17xx_uart.c **** 	return cnt;
1450:LPC17xxLib/src/lpc17xx_uart.c **** }
 2116              	 .loc 1 1450 0
 2117 0026 70BD     	 pop {r4,r5,r6,pc}
 2118              	.LVL205:
 2119              	.L268:
 2120              	 .align 2
 2121              	.L267:
 2122 0028 00000000 	 .word UART_Send.part.0
 2123              	 .cfi_endproc
 2124              	.LFE84:
 2126              	 .section .text.UART_RS485SendSlvAddr,"ax",%progbits
 2127              	 .align 1
 2128              	 .global UART_RS485SendSlvAddr
 2129              	 .syntax unified
 2130              	 .thumb
 2131              	 .thumb_func
 2132              	 .fpu softvfp
 2134              	UART_RS485SendSlvAddr:
 2135              	.LFB85:
1451:LPC17xxLib/src/lpc17xx_uart.c **** 
1452:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
1453:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Send Slave address frames on RS485 bus.
1454:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1455:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	SlvAddr Slave Address.
1456:LPC17xxLib/src/lpc17xx_uart.c ****  * @return		None
1457:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
1458:LPC17xxLib/src/lpc17xx_uart.c **** void UART_RS485SendSlvAddr(LPC_UART1_TypeDef *UARTx, uint8_t SlvAddr)
1459:LPC17xxLib/src/lpc17xx_uart.c **** {
 2136              	 .loc 1 1459 0
 2137              	 .cfi_startproc
 2138              	 
 2139              	 
 2140              	.LVL206:
 2141 0000 37B5     	 push {r0,r1,r2,r4,r5,lr}
 2142              	 .cfi_def_cfa_offset 24
 2143              	 .cfi_offset 4,-12
 2144              	 .cfi_offset 5,-8
 2145              	 .cfi_offset 14,-4
 2146              	.LVL207:
 2147              	.LBB109:
 2148              	.LBB110:
 2149              	.LBB111:
 2150              	.LBB112:
1439:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp &= ~(UART_LCR_PARITY_EVEN);
 2151              	 .loc 1 1439 0
 2152 0002 057B     	 ldrb r5,[r0,#12]
 2153              	.LBE112:
 2154              	.LBE111:
 2155              	.LBE110:
 2156              	.LBE109:
 2157              	 .loc 1 1459 0
 2158 0004 02AB     	 add r3,sp,#8
 2159              	.LBB126:
 2160              	.LBB123:
 2161              	.LBB120:
 2162              	.LBB117:
1439:LPC17xxLib/src/lpc17xx_uart.c **** 		tmp &= ~(UART_LCR_PARITY_EVEN);
 2163              	 .loc 1 1439 0
 2164 0006 EDB2     	 uxtb r5,r5
 2165              	.LVL208:
 2166              	.LBE117:
 2167              	.LBE120:
 2168              	.LBE123:
 2169              	.LBE126:
 2170              	 .loc 1 1459 0
 2171 0008 03F8011D 	 strb r1,[r3,#-1]!
 2172              	.LBB127:
 2173              	.LBB124:
 2174              	.LBB121:
 2175              	.LBB118:
1440:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->LCR = tmp;
 2176              	 .loc 1 1440 0
 2177 000c 05F0EF02 	 and r2,r5,#239
 2178              	.LVL209:
1441:LPC17xxLib/src/lpc17xx_uart.c **** 		cnt = UART_Send((LPC_UART_TypeDef *)UARTx, pDatFrm, size, BLOCKING);
 2179              	 .loc 1 1441 0
 2180 0010 0273     	 strb r2,[r0,#12]
 2181              	.LBB113:
 2182              	.LBB114:
 2183 0012 1946     	 mov r1,r3
 2184              	.LVL210:
 2185 0014 0122     	 movs r2,#1
 2186              	.LVL211:
 2187 0016 044B     	 ldr r3,.L273
 2188              	.LBE114:
 2189              	.LBE113:
 2190              	.LBE118:
 2191              	.LBE121:
 2192              	.LBE124:
 2193              	.LBE127:
 2194              	 .loc 1 1459 0
 2195 0018 0446     	 mov r4,r0
 2196              	.LVL212:
 2197              	.LBB128:
 2198              	.LBB125:
 2199              	.LBB122:
 2200              	.LBB119:
 2201              	.LBB116:
 2202              	.LBB115:
 2203 001a 9847     	 blx r3
 2204              	.LVL213:
 2205              	.L270:
 2206              	.LBE115:
 2207              	.LBE116:
1443:LPC17xxLib/src/lpc17xx_uart.c **** 		UARTx->LCR = save;
 2208              	 .loc 1 1443 0
 2209 001c 237D     	 ldrb r3,[r4,#20]
 2210 001e 5B06     	 lsls r3,r3,#25
 2211 0020 FCD5     	 bpl .L270
1444:LPC17xxLib/src/lpc17xx_uart.c **** 	} else {
 2212              	 .loc 1 1444 0
 2213 0022 2573     	 strb r5,[r4,#12]
 2214              	.LVL214:
 2215              	.LBE119:
 2216              	.LBE122:
 2217              	.LBE125:
 2218              	.LBE128:
1460:LPC17xxLib/src/lpc17xx_uart.c **** 	UART_RS485Send(UARTx, &SlvAddr, 1, 1);
1461:LPC17xxLib/src/lpc17xx_uart.c **** }
 2219              	 .loc 1 1461 0
 2220 0024 03B0     	 add sp,sp,#12
 2221              	 .cfi_def_cfa_offset 12
 2222              	 
 2223 0026 30BD     	 pop {r4,r5,pc}
 2224              	.LVL215:
 2225              	.L274:
 2226              	 .align 2
 2227              	.L273:
 2228 0028 00000000 	 .word UART_Send.part.0
 2229              	 .cfi_endproc
 2230              	.LFE85:
 2232              	 .section .text.UART_RS485SendData,"ax",%progbits
 2233              	 .align 1
 2234              	 .global UART_RS485SendData
 2235              	 .syntax unified
 2236              	 .thumb
 2237              	 .thumb_func
 2238              	 .fpu softvfp
 2240              	UART_RS485SendData:
 2241              	.LFB86:
1462:LPC17xxLib/src/lpc17xx_uart.c **** 
1463:LPC17xxLib/src/lpc17xx_uart.c **** /*********************************************************************//**
1464:LPC17xxLib/src/lpc17xx_uart.c ****  * @brief		Send Data frames on RS485 bus.
1465:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1466:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	pData Pointer to data to be sent.
1467:LPC17xxLib/src/lpc17xx_uart.c ****  * @param[in]	size Size of data frame to be sent.
1468:LPC17xxLib/src/lpc17xx_uart.c ****  * @return		None
1469:LPC17xxLib/src/lpc17xx_uart.c ****  **********************************************************************/
1470:LPC17xxLib/src/lpc17xx_uart.c **** uint32_t UART_RS485SendData(LPC_UART1_TypeDef *UARTx, uint8_t *pData, uint32_t size)
1471:LPC17xxLib/src/lpc17xx_uart.c **** {
 2242              	 .loc 1 1471 0
 2243              	 .cfi_startproc
 2244              	 
 2245              	 
 2246              	 
 2247              	.LVL216:
 2248 0000 10B4     	 push {r4}
 2249              	 .cfi_def_cfa_offset 4
 2250              	 .cfi_offset 4,-4
1472:LPC17xxLib/src/lpc17xx_uart.c **** 	return (UART_RS485Send(UARTx, pData, size, 0));
 2251              	 .loc 1 1472 0
 2252 0002 024C     	 ldr r4,.L276
 2253 0004 0023     	 movs r3,#0
 2254 0006 A446     	 mov ip,r4
1473:LPC17xxLib/src/lpc17xx_uart.c **** }
 2255              	 .loc 1 1473 0
 2256 0008 10BC     	 pop {r4}
 2257              	 .cfi_restore 4
 2258              	 .cfi_def_cfa_offset 0
1472:LPC17xxLib/src/lpc17xx_uart.c **** 	return (UART_RS485Send(UARTx, pData, size, 0));
 2259              	 .loc 1 1472 0
 2260 000a 6047     	 bx ip
 2261              	.LVL217:
 2262              	.L277:
 2263              	 .align 2
 2264              	.L276:
 2265 000c 00000000 	 .word UART_RS485Send
 2266              	 .cfi_endproc
 2267              	.LFE86:
 2269              	 .section .rodata.CSWTCH.12,"a",%progbits
 2270              	 .set .LANCHOR0,.+0
 2273              	CSWTCH.12:
 2274 0000 01       	 .byte 1
 2275 0001 02       	 .byte 2
 2276 0002 00       	 .byte 0
 2277              	 .section .rodata.CSWTCH.21,"a",%progbits
 2278              	 .align 1
 2279              	 .set .LANCHOR1,.+0
 2282              	CSWTCH.21:
 2283 0000 0100     	 .short 1
 2284 0002 0200     	 .short 2
 2285 0004 0400     	 .short 4
 2286 0006 0800     	 .short 8
 2287 0008 8000     	 .short 128
 2288 000a 0001     	 .short 256
 2289 000c 0002     	 .short 512
 2290              	 .section .rodata.CSWTCH.26,"a",%progbits
 2291              	 .set .LANCHOR2,.+0
 2294              	CSWTCH.26:
 2295 0000 01       	 .byte 1
 2296 0001 41       	 .byte 65
 2297 0002 81       	 .byte -127
 2298              	 .section .rodata.CSWTCH.37,"a",%progbits
 2299              	 .set .LANCHOR3,.+0
 2302              	CSWTCH.37:
 2303 0000 10       	 .byte 16
 2304 0001 40       	 .byte 64
 2305 0002 80       	 .byte -128
 2306              	 .text
 2307              	.Letext0:
 2308              	 .file 2 "/usr/include/newlib/machine/_default_types.h"
 2309              	 .file 3 "/usr/include/newlib/sys/_stdint.h"
 2310              	 .file 4 "CMSISv2p00_LPC17xx/inc/core_cm3.h"
 2311              	 .file 5 "CMSISv2p00_LPC17xx/inc/system_LPC17xx.h"
 2312              	 .file 6 "CMSISv2p00_LPC17xx/inc/LPC17xx.h"
 2313              	 .file 7 "LPC17xxLib/inc/lpc_types.h"
 2314              	 .file 8 "LPC17xxLib/inc/lpc17xx_uart.h"
 2315              	 .file 9 "LPC17xxLib/inc/lpc17xx_clkpwr.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 lpc17xx_uart.c
    {standard input}:16     .text.UART_Send.part.0:0000000000000000 $t
    {standard input}:22     .text.UART_Send.part.0:0000000000000000 UART_Send.part.0
    {standard input}:95     .text.uabs:0000000000000000 $t
    {standard input}:102    .text.uabs:0000000000000000 uabs
    {standard input}:124    .text.calc_baud:0000000000000000 $t
    {standard input}:131    .text.calc_baud:0000000000000000 calc_baud
    {standard input}:159    .text.baud_space_search:0000000000000000 $t
    {standard input}:166    .text.baud_space_search:0000000000000000 baud_space_search
    {standard input}:412    .text.baud_space_search:0000000000000124 $d
    {standard input}:421    .text.UART_Init:0000000000000000 $t
    {standard input}:428    .text.UART_Init:0000000000000000 UART_Init
    {standard input}:857    .text.UART_Init:00000000000001f4 $d
    {standard input}:869    .text.UART_ConfigStructInit:0000000000000000 $t
    {standard input}:876    .text.UART_ConfigStructInit:0000000000000000 UART_ConfigStructInit
    {standard input}:906    .text.UART_SendByte:0000000000000000 $t
    {standard input}:913    .text.UART_SendByte:0000000000000000 UART_SendByte
    {standard input}:928    .text.UART_ReceiveByte:0000000000000000 $t
    {standard input}:935    .text.UART_ReceiveByte:0000000000000000 UART_ReceiveByte
    {standard input}:953    .text.UART_Send:0000000000000000 $t
    {standard input}:960    .text.UART_Send:0000000000000000 UART_Send
    {standard input}:1047   .text.UART_Send:000000000000003c $d
    {standard input}:1052   .text.UART_Receive:0000000000000000 $t
    {standard input}:1059   .text.UART_Receive:0000000000000000 UART_Receive
    {standard input}:1152   .text.UART_ForceBreak:0000000000000000 $t
    {standard input}:1159   .text.UART_ForceBreak:0000000000000000 UART_ForceBreak
    {standard input}:1176   .text.UART_IntConfig:0000000000000000 $t
    {standard input}:1183   .text.UART_IntConfig:0000000000000000 UART_IntConfig
    {standard input}:1252   .text.UART_IntConfig:000000000000004c $d
    {standard input}:1258   .text.UART_GetLineStatus:0000000000000000 $t
    {standard input}:1265   .text.UART_GetLineStatus:0000000000000000 UART_GetLineStatus
    {standard input}:1283   .text.UART_GetIntId:0000000000000000 $t
    {standard input}:1290   .text.UART_GetIntId:0000000000000000 UART_GetIntId
    {standard input}:1310   .text.UART_CheckBusy:0000000000000000 $t
    {standard input}:1317   .text.UART_CheckBusy:0000000000000000 UART_CheckBusy
    {standard input}:1336   .text.UART_FIFOConfig:0000000000000000 $t
    {standard input}:1343   .text.UART_FIFOConfig:0000000000000000 UART_FIFOConfig
    {standard input}:1391   .text.UART_FIFOConfig:0000000000000034 $d
    {standard input}:1396   .text.UART_FIFOConfigStructInit:0000000000000000 $t
    {standard input}:1403   .text.UART_FIFOConfigStructInit:0000000000000000 UART_FIFOConfigStructInit
    {standard input}:1426   .text.UART_ABCmd:0000000000000000 $t
    {standard input}:1433   .text.UART_ABCmd:0000000000000000 UART_ABCmd
    {standard input}:1531   .text.UART_ABCmd:000000000000008c $d
    {standard input}:1536   .text.UART_ABClearIntPending:0000000000000000 $t
    {standard input}:1543   .text.UART_ABClearIntPending:0000000000000000 UART_ABClearIntPending
    {standard input}:1573   .text.UART_ABClearIntPending:0000000000000018 $d
    {standard input}:1578   .text.UART_TxCmd:0000000000000000 $t
    {standard input}:1585   .text.UART_TxCmd:0000000000000000 UART_TxCmd
    {standard input}:1617   .text.UART_DeInit:0000000000000000 $t
    {standard input}:1624   .text.UART_DeInit:0000000000000000 UART_DeInit
    {standard input}:1700   .text.UART_DeInit:0000000000000044 $d
    {standard input}:1710   .text.UART_IrDAInvtInputCmd:0000000000000000 $t
    {standard input}:1717   .text.UART_IrDAInvtInputCmd:0000000000000000 UART_IrDAInvtInputCmd
    {standard input}:1748   .text.UART_IrDACmd:0000000000000000 $t
    {standard input}:1755   .text.UART_IrDACmd:0000000000000000 UART_IrDACmd
    {standard input}:1778   .text.UART_IrDAPulseDivConfig:0000000000000000 $t
    {standard input}:1785   .text.UART_IrDAPulseDivConfig:0000000000000000 UART_IrDAPulseDivConfig
    {standard input}:1815   .text.UART_FullModemForcePinState:0000000000000000 $t
    {standard input}:1822   .text.UART_FullModemForcePinState:0000000000000000 UART_FullModemForcePinState
    {standard input}:1863   .text.UART_FullModemConfigMode:0000000000000000 $t
    {standard input}:1870   .text.UART_FullModemConfigMode:0000000000000000 UART_FullModemConfigMode
    {standard input}:1902   .text.UART_FullModemConfigMode:000000000000001c $d
    {standard input}:1907   .text.UART_FullModemGetStatus:0000000000000000 $t
    {standard input}:1914   .text.UART_FullModemGetStatus:0000000000000000 UART_FullModemGetStatus
    {standard input}:1931   .text.UART_RS485Config:0000000000000000 $t
    {standard input}:1938   .text.UART_RS485Config:0000000000000000 UART_RS485Config
    {standard input}:2018   .text.UART_RS485ReceiverCmd:0000000000000000 $t
    {standard input}:2025   .text.UART_RS485ReceiverCmd:0000000000000000 UART_RS485ReceiverCmd
    {standard input}:2048   .text.UART_RS485Send:0000000000000000 $t
    {standard input}:2055   .text.UART_RS485Send:0000000000000000 UART_RS485Send
    {standard input}:2122   .text.UART_RS485Send:0000000000000028 $d
    {standard input}:2127   .text.UART_RS485SendSlvAddr:0000000000000000 $t
    {standard input}:2134   .text.UART_RS485SendSlvAddr:0000000000000000 UART_RS485SendSlvAddr
    {standard input}:2228   .text.UART_RS485SendSlvAddr:0000000000000028 $d
    {standard input}:2233   .text.UART_RS485SendData:0000000000000000 $t
    {standard input}:2240   .text.UART_RS485SendData:0000000000000000 UART_RS485SendData
    {standard input}:2265   .text.UART_RS485SendData:000000000000000c $d
    {standard input}:2273   .rodata.CSWTCH.12:0000000000000000 CSWTCH.12
    {standard input}:2278   .rodata.CSWTCH.21:0000000000000000 $d
    {standard input}:2282   .rodata.CSWTCH.21:0000000000000000 CSWTCH.21
    {standard input}:2294   .rodata.CSWTCH.26:0000000000000000 CSWTCH.26
    {standard input}:2302   .rodata.CSWTCH.37:0000000000000000 CSWTCH.37
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
CLKPWR_ConfigPPWR
CLKPWR_SetPCLKDiv
